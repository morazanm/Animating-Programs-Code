#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 360 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 128 0 0 0 0 -1 -1
2 38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 158 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 211 72 255 0 0 0 -1 -1 2
35 #"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 211 72 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 150 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 158 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 211 72 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 150 255 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
255 255 255 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 176 48 96 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 38 #"drscheme:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 31 #"drscheme:check-syntax:imported\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 41 #"profj:syntax-colors:scheme:block-comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 37 #"profj:syntax-colors:scheme:prim-type\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 38 #"profj:syntax-colors:scheme:identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 34 #"profj:syntax-colors:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:literal\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 33 #"profj:syntax-colors:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 35 #"profj:syntax-colors:scheme:default\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"profj:syntax-colors:scheme:uncovered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 35 #"profj:syntax-colors:scheme:covered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 8 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 8 24 #"drscheme:text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 8 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 8 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 28 #"drscheme:check-syntax:set!d\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 192 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 107 142 35 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 100 149 237
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 130 180 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 47 79 79 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 139 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 0 130 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 128 114
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 134 11 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 19 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 15 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 15 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 14 #"Html Standard\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 216 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 216 1 #"\0"
0 70 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 216 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 216 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 216 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 216 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 216 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 216 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 216 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 216 1 #"\0"
0 -1 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 216 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 216 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 216 1 #"\0"
0 70 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 216 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 3 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 0 1 #"\0"
0 70 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 173
216 230 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 173
216 230 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 16 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 16 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 26 #" Bitstream Vera Sans Mono\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 191 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 192 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 192 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 90 22 0
0 0 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 97 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 130 72 32 0
0 0 -1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 25 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 216 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 216 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 9 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 9 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 194 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1           0 5897 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 186
(6
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname aliens-at"
 #"tack-v2) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#"
 #"t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; Video Game Image Dimensions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Color Constants"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"SHOT-COLOR"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"SHOT-COLOR2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"skyblue"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ALIEN-COLOR"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"black"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"ALIEN-COLOR2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"WINDOW-COLOR"
0 0 24 3 3 #"   "
0 0 21 3 1 #"'"
0 0 14 3 8 #"darkgray"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"WINDOW2-COLOR"
0 0 24 3 3 #"   "
0 0 21 3 1 #"'"
0 0 14 3 5 #"white"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"FUSELAGE-COLOR"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"FUSELAGE2-COLOR"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"NACELLE-COLOR"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"NACELLE2-COLOR"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 14 3 5 #"brown"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; E-SCENE Constants"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"MAX-CHARS-VERTICAL"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"E-SCENE-W"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"E-SCENE-H"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 18 #"MAX-CHARS-VERTICAL"
0 0 24 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"E-SCENE-COLOR"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"pink"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 9 #"E-SCENE-W"
0 0 24 3 1 #" "
0 0 14 3 9 #"E-SCENE-H"
0 0 24 3 1 #" "
0 0 14 3 13 #"E-SCENE-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"E-SCENE2-COLOR"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"darkgray"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"E-SCENE2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 9 #"E-SCENE-W"
0 0 24 3 1 #" "
0 0 14 3 9 #"E-SCENE-H"
0 0 24 3 1 #" "
0 0 14 3 14 #"E-SCENE2-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; Rocket Constants"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ROCKET-Y"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 18 #"MAX-CHARS-VERTICAL"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; Key Constants"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"RA-KEY"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"LA-KEY"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"O-KEY"
0 0 24 3 2 #"  "
0 0 19 3 3 #"\"m\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"#| DATA"
0 0 17 3 1 #" "
0 0 17 3 34 #"DEFINITIONS AND FUNCTION TEMPLATES"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 52 #"    A character image (ci) is at most 30 x 30 pixels"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 64
#"    An image-x is an integer in [0..(sub1 MAX-CHARS-HORIZONTAL)]"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"    ;; image-x ... --> ..."
0 0 17 29 1 #"\n"
0 0 17 3 19 #"    ;; Purpose: ..."
0 0 17 29 1 #"\n"
0 0 17 3 39 #"    (define (f-on-image-x an-img-x ...)"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"      ...an-img-x...)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 33 #"    ;; Sample intances of image-x"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"    (define IMG-X1 ...)"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"         ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"    ;; Sample expressions for f-on-image-x"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"    (define IMGX-VAL1 ...)"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"         ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 62
#"    ;; Sample tests using sample computations for f-on-image-x"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"    (check-expect (f-on-image-x ...) IMGX-VAL1)"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"         ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 17 3 58
#";; Sample tests using sample computations for f-on-image-x"
0 0 17 29 1 #"\n"
0 0 17 3 41 #"    (check-expect (f-on-image-x ...) ...)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 61
#"    A image-y is an integer in [0..(sub1 MAX-CHARS-VERTICAL)]"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 17 3 22 #";; image-y ... --> ..."
0 0 17 29 1 #"\n"
0 0 17 3 19 #"    ;; Purpose: ..."
0 0 17 29 1 #"\n"
0 0 17 3 25 #"    (define (f-on-image-y"
0 0 17 3 9 #" an-img-y"
0 0 17 3 5 #" ...)"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"      ...an-img-y...)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 33 #"    ;; Sample intances of image-y"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"    (define IMG-y1 ...)"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"         ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"    ;; Sample expressions for f-on-image-y"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"    (define IMGY-VAL1 ...)"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"         ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 62
#"    ;; Sample tests using sample computations for f-on-image-y"
0 0 17 29 1 #"\n"
0 0 17 3 31 #"    (check-expect (f-on-image-y"
0 0 17 3 16 #" ...) IMGY-VAL1)"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"         ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 17 3 58
#";; Sample tests using sample computations for f-on-image-y"
0 0 17 29 1 #"\n"
0 0 17 3 31 #"    (check-expect (f-on-image-y"
0 0 17 3 10 #" ...) ...)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 74
(7
 #"    A scene is a (MAX-CHARS-HORIZONTAL * IMAGE-WIDTH) x (MAX-CHARS-V"
 #"ERTICA"
) 0 0 17 3 1 #"L"
0 0 17 3 22 #" * IMAGE-HEIGHT) image"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 55 #"    A pixel-x coordinate (pix-x-coord) is an integer in"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"    [0..(MAX-CHARS-HORIZONTAL * IMAGE-WIDTH)-1]"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 17 3 51 #"A pixel-y coordinate (pix-y-coord) is an integer in"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"    [0.."
0 0 17 3 18 #"(MAX-CHARS-VERTICA"
0 0 17 3 20 #"L * IMAGE-HEIGHT)-1]"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"    A rocket is an image-x"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"    ;; rocket ... --> ..."
0 0 17 29 1 #"\n"
0 0 17 3 19 #"    ;; Purpose: ..."
0 0 17 29 1 #"\n"
0 0 17 3 38 #"    (define (f-on-rocket a-rocket ...)"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"       ...(f-on-image-x a-rocket ...) ...)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 41 #"    ;; Sample expressions for f-on-rocket"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"    (define ROCKET-VAL (f-on-rocket a-rocket ...))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 54 #"    ;; Tests using sample computations for f-on-rocket"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"    (check-expect (f-on-rocket ...) ROCKET-VAL)"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"         ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"    ;; Tests using sample values for f-on-rocket"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"    (check-expect (f-on-rocket ...) ...)"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"         ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 54 #"    An alien is a posn, (make-posn a b), where a is an"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"    image-x and b is an image-y."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"    ;; alien ... --> ..."
0 0 17 29 1 #"\n"
0 0 17 3 19 #"    ;; Purpose: ..."
0 0 17 29 1 #"\n"
0 0 17 3 37 #"    (define (f-on-alien an-alien ...)"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"      ...(f-on-image-x (posn-x an-alien)..."
0 0 17 29 1 #"\n"
0 0 17 3 44 #"      ...(f-on-image-y (posn-y an-alien)...)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"    ;; Sample instances"
0 0 17 29 1 #"\n"
0 0 17 3 39 #"    (define ALIEN1 (make-posn ... ...))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"    ;; Sample expressions for f-on-alien"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"    (define ALIEN-VAL1 ...)"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"       ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 53 #"    ;; Tests using sample computations for f-on-alien"
0 0 17 29 1 #"\n"
0 0 17 3 46 #"    (check-expect (f-on-alien ...) ALIEN-VAL1)"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"       ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"    ;; Tests using sample values for f-on-alien"
0 0 17 29 1 #"\n"
0 0 17 3 39 #"    (check-expect (f-on-alien ...) ...)"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"       ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"    A direction (dir) is either:"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"      1. 'right"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"      2. 'left"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"      3. 'down"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"    ;; dir ... --> ..."
0 0 17 29 1 #"\n"
0 0 17 3 19 #"    ;; Purpose: ..."
0 0 17 29 1 #"\n"
0 0 17 3 32 #"    (define (f-on-dir a-dir ...)"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"      (cond  [(eq? a-dir 'right) ...]"
0 0 17 29 1 #"\n"
0 0 17 3 36 #"             [(eq? a-dir 'left) ...]"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"             [else ...]))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 59
#"    ;; Sample instances --> not needed for enumerated types"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 38 #"    ;; Sample expressions for f-on-dir"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"    (define DIR-VAL1 ...)"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"    (define DIR-VAL2 ...)"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"    (define DIR-VAL3 ...)"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"       ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 51 #"    ;; Tests using sample computations for f-on-dir"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"    (check-expect (f-on-dir ...) DIR-VAL1)"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"    (check-expect (f-on-dir ...) DIR-VAL2)"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"    (check-expect (f-on-dir ...) DIR-VAL3)"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"       ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 45 #"    ;; Tests using sample values for f-on-dir"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"    (check-expect (f-on-dir ...) ...)"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"       ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 55 #"    A world is a structure, (make-world r a d), where r"
0 0 17 29 1 #"\n"
0 0 17 3 53 #"    is a rocket, a is an alien, and d is a direction."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"    ;; world ... --> ..."
0 0 17 29 1 #"\n"
0 0 17 3 19 #"    ;; Purpose: ..."
0 0 17 29 1 #"\n"
0 0 17 3 22 #"    (define (f-on-worl"
0 0 17 3 14 #"d a-world ...)"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"       ...(f-on-rocket (world-rocket a-world) ...)"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"       ...(f-on-alien  (world-alien  a-world) ...)"
0 0 17 29 1 #"\n"
0 0 17 3 51 #"       ...(f-on-dir    (world-dir a-world)    ...))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"    ;; Sample expressions for "
0 0 17 3 10 #"f-on-world"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"    (define WORLD-VAL ...)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"    ;; Tests using sample computations for "
0 0 17 3 10 #"f-on-world"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"    (check-expect ("
0 0 17 3 26 #"f-on-world ...) WORLD-VAL)"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"         ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"    ;; Tests using sample values for f-on-world"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"    (check-expect ("
0 0 17 3 20 #"f-on-world ...) ...)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"    A key is either:"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"      1. \""
0 0 17 3 5 #"right"
0 0 17 3 1 #"\""
0 0 17 29 1 #"\n"
0 0 17 3 10 #"      2. \""
0 0 17 3 4 #"left"
0 0 17 3 1 #"\""
0 0 17 29 1 #"\n"
0 0 17 3 14 #"      3. not \""
0 0 17 3 5 #"right"
0 0 17 3 6 #"\" or \""
0 0 17 3 4 #"left"
0 0 17 3 1 #"\""
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 17 3 18 #";; key ... --> ..."
0 0 17 29 1 #"\n"
0 0 17 3 19 #"    ;; Purpose: ..."
0 0 17 29 1 #"\n"
0 0 17 3 32 #"    (define (f-on-key a-key ...)"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"      (cond [(key=? a-key \""
0 0 17 3 5 #"right"
0 0 17 3 7 #"\") ...]"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"            [(key=? a-key \""
0 0 17 3 4 #"left"
0 0 17 3 7 #"\") ...]"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"            [else ...]))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 38 #"    ;; Sample expressions for f-on-key"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"    (define KEY-RVAL ...\""
0 0 17 3 5 #"right"
0 0 17 3 5 #"\"...)"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"    (define KEY-LVAL ...\""
0 0 17 3 4 #"left"
0 0 17 3 5 #"\"...)"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"    (define KEY-OVAL ...\""
0 0 17 3 6 #"<other"
0 0 17 3 1 #" "
0 0 17 3 4 #"key>"
0 0 17 3 5 #"\"...)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 51 #"    ;; Tests using sample computations for f-on-key"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"    (check-expect (f-on-key \""
0 0 17 3 5 #"right"
0 0 17 3 18 #"\"   ...) KEY-RVAL)"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"    (check-expect (f-on-key \""
0 0 17 3 4 #"left"
0 0 17 3 19 #"\"    ...) KEY-LVAL)"
0 0 17 29 1 #"\n"
0 0 17 3 36 #"    (check-expect (f-on-key \"<other>"
0 0 17 3 16 #"\" ...) KEY-OVAL)"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"         ..."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 45 #"    ;; Tests using sample values for f-on-key"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"    (check-expect (f-on-key ...) ...)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; Structure Definitions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rocket"
0 0 24 3 1 #" "
0 0 14 3 5 #"alien"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; SAMPLE INSTANCES"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"AN-IMG-X"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"AN-IMG-Y"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 18 #"MAX-CHARS-VERTICAL"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"MIN-IMG-Y"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 18 #"MAX-CHARS-VERTICAL"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-ROCKET"
0 0 24 3 2 #"  "
0 0 14 3 8 #"AN-IMG-X"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 8 #"AN-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"INIT-DIR"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INIT-DIR2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INIT-DIR3"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-ROCKET"
0 0 24 3 2 #"  "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 2 #"  "
0 0 14 3 8 #"INIT-DIR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 24 3 1 #" "
0 0 14 3 9 #"INIT-DIR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; image --> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; Purpose: To determine if the given image is a ci"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 1 #" "
0 0 14 3 6 #"an-img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 6 #"an-img"
0 0 24 3 3 #")  "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 6 #"an-img"
0 0 24 3 2 #") "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Sample expressions for ci?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"IS-CI"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 3 #")) "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 3 #")) "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"NOT-CI"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 3 #")) "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 3 #")) "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"NOT-CI2"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 3 #")) "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 3 #")) "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; Tests using sample computations for ci?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 4 #"))  "
0 0 14 3 5 #"IS-CI"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 3 #")) "
0 0 14 3 6 #"NOT-CI"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 3 #")) "
0 0 14 3 7 #"NOT-CI2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Tests using sample values for ci?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 4 #"))  "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"33"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; ALIEN IMAGES"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; color --> image"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; Purpose: Create an alien image of the given color"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-alien-img"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"X\""
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 24 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Sample expressions for mk-alien-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"ALIEN-IMG"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"X\""
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 14 3 11 #"ALIEN-COLOR"
0 0 24 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 14 3 11 #"ALIEN-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ALIEN-IMG2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"X\""
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 14 3 12 #"ALIEN-COLOR2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 14 3 12 #"ALIEN-COLOR2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; Tests using sample computations for mk-alien-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-alien-img"
0 0 24 3 1 #" "
0 0 14 3 11 #"ALIEN-COLOR"
0 0 24 3 2 #") "
0 0 14 3 9 #"ALIEN-IMG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-alien-img"
0 0 24 3 1 #" "
0 0 14 3 12 #"ALIEN-COLOR2"
0 0 24 3 2 #") "
0 0 14 3 10 #"ALIEN-IMG2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 1 #" "
0 0 14 3 9 #"ALIEN-IMG"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 1 #" "
0 0 14 3 10 #"ALIEN-IMG2"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; Tests using sample values for mk-alien-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-alien-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 24 3 6 #")     "
0 6           4 21 261
(8
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 8.5 14.0"
 #" #(struct:text \"X\" 0 1 \"purple\" 25 #f swiss normal normal #f))) "
 #"#(struct:translate 1.0 6.5 #(struct:translate 15/2 15/2 #(struct:ell"
 #"ipse 15 15 0 255 \"purple\")))) #(struct:bb 17.0 28.0 23.0) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-alien-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"lightbrown"
0 0 24 3 2 #") "
0 6           4 21 269
(9
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 8.5 14.0"
 #" #(struct:text \"X\" 0 1 \"lightbrown\" 25 #f swiss normal normal #f"
 #"))) #(struct:translate 1.0 6.5 #(struct:translate 15/2 15/2 #(struct"
 #":ellipse 15 15 0 255 \"lightbrown\")))) #(struct:bb 17.0 28.0 23.0) "
 #"#f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-alien-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 24 3 7 #"))     "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-alien-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"lightbrown"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; SHOT IMAGES"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; color --> image"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; Purpose: Create shot image of the given color"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"mk-shot-img"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"radial-star"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 2 #"  "
0 0 14 3 7 #"a-color"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; Sample expressions for mk-shot-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"SHOT-IMG"
0 0 24 3 2 #" ("
0 0 14 3 11 #"radial-star"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 10 #"SHOT-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"SHOT-IMG2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"radial-star"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 11 #"SHOT-COLOR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; Tests using sample computations for mk-shot-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"mk-shot-img"
0 0 24 3 1 #" "
0 0 14 3 10 #"SHOT-COLOR"
0 0 24 3 2 #") "
0 0 14 3 8 #"SHOT-IMG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"mk-shot-img"
0 0 24 3 1 #" "
0 0 14 3 11 #"SHOT-COLOR2"
0 0 24 3 2 #") "
0 0 14 3 9 #"SHOT-IMG2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 1 #" "
0 0 14 3 8 #"SHOT-IMG"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 1 #" "
0 0 14 3 9 #"SHOT-IMG2"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Tests using sample values for mk-shot-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"mk-shot-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 2 #") "
0 6           4 21 1152
(10
 #"(#(struct:translate -1.0656865448419843 -1.0656865448419879 #(struct"
 #":polygon (#(struct:pulled-point 0 0 15.944543648263005 12.0554563517"
 #"36995 0 0) #(struct:pulled-point 0 0 19.357568053111258 1.0656865448"
 #"419879 0 0) #(struct:pulled-point 0 0 14.0 11.25 0 0) #(struct:pulle"
 #"d-point 0 0 8.642431946888735 1.0656865448419879 0 0) #(struct:pulle"
 #"d-point 0 0 12.055456351736995 12.055456351736995 0 0) #(struct:pull"
 #"ed-point 0 0 1.0656865448419843 8.642431946888745 0 0) #(struct:pull"
 #"ed-point 0 0 11.25 14.0 0 0) #(struct:pulled-point 0 0 1.06568654484"
 #"1986 19.357568053111258 0 0) #(struct:pulled-point 0 0 12.0554563517"
 #"36995 15.944543648263005 0 0) #(struct:pulled-point 0 0 8.6424319468"
 #"88744 26.934313455158012 0 0) #(struct:pulled-point 0 0 14.0 16.75 0"
 #" 0) #(struct:pulled-point 0 0 19.357568053111258 26.934313455158012 "
 #"0 0) #(struct:pulled-point 0 0 15.944543648263005 15.944543648263005"
 #" 0 0) #(struct:pulled-point 0 0 26.934313455158012 19.35756805311125"
 #"8 0 0) #(struct:pulled-point 0 0 67/4 14 0 0) #(struct:pulled-point "
 #"0 0 26.934313455158012 8.642431946888742 0 0)) 255 \"red\")) #(struc"
 #"t:bb 25.868626910316028 25.868626910316024 25.868626910316024) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"mk-shot-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"brown"
0 0 24 3 2 #") "
0 6           4 21 1154
(11
 #"(#(struct:translate -1.0656865448419843 -1.0656865448419879 #(struct"
 #":polygon (#(struct:pulled-point 0 0 15.944543648263005 12.0554563517"
 #"36995 0 0) #(struct:pulled-point 0 0 19.357568053111258 1.0656865448"
 #"419879 0 0) #(struct:pulled-point 0 0 14.0 11.25 0 0) #(struct:pulle"
 #"d-point 0 0 8.642431946888735 1.0656865448419879 0 0) #(struct:pulle"
 #"d-point 0 0 12.055456351736995 12.055456351736995 0 0) #(struct:pull"
 #"ed-point 0 0 1.0656865448419843 8.642431946888745 0 0) #(struct:pull"
 #"ed-point 0 0 11.25 14.0 0 0) #(struct:pulled-point 0 0 1.06568654484"
 #"1986 19.357568053111258 0 0) #(struct:pulled-point 0 0 12.0554563517"
 #"36995 15.944543648263005 0 0) #(struct:pulled-point 0 0 8.6424319468"
 #"88744 26.934313455158012 0 0) #(struct:pulled-point 0 0 14.0 16.75 0"
 #" 0) #(struct:pulled-point 0 0 19.357568053111258 26.934313455158012 "
 #"0 0) #(struct:pulled-point 0 0 15.944543648263005 15.944543648263005"
 #" 0 0) #(struct:pulled-point 0 0 26.934313455158012 19.35756805311125"
 #"8 0 0) #(struct:pulled-point 0 0 67/4 14 0 0) #(struct:pulled-point "
 #"0 0 26.934313455158012 8.642431946888742 0 0)) 255 \"brown\")) #(str"
 #"uct:bb 25.868626910316028 25.868626910316024 25.868626910316024) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"mk-shot-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"mk-shot-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"brown"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; ROCKET IMAGES"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; color --> image"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; Purpose: Create the fuselage image of the given color"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 59
#";(ellipse IMAGE-WIDTH (* 2/3 IMAGE-HEIGHT) 'solid a-color))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/3"
0 0 24 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Sample expressions for mk-fuselage-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"FUSELAGE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/3"
0 0 24 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 14 #"FUSELAGE-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"FUSELAGE2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/3"
0 0 24 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 15 #"FUSELAGE2-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; Test for mk-fuselage-img using sample computations"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 24 3 1 #" "
0 0 14 3 14 #"FUSELAGE-COLOR"
0 0 24 3 2 #") "
0 0 14 3 8 #"FUSELAGE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 24 3 1 #" "
0 0 14 3 15 #"FUSELAGE2-COLOR"
0 0 24 3 2 #") "
0 0 14 3 9 #"FUSELAGE2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Test for mk-fuselage-img using sample values"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"olive"
0 0 24 3 2 #") "
0 6           4 21 90
(12
 #"(#(struct:translate 10 10 #(struct:ellipse 20 20 0 255 \"olive\")) #"
 #"(struct:bb 20 20 20) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"lightgray"
0 0 24 3 2 #") "
0 6           4 21 94
(13
 #"(#(struct:translate 10 10 #(struct:ellipse 20 20 0 255 \"lightgray\""
 #")) #(struct:bb 20 20 20) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"FUSELAGE-W"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 8 #"FUSELAGE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"FUSELAGE-H"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 8 #"FUSELAGE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"FUSELAGE2-W"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 9 #"FUSELAGE2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"FUSELAGE2-H"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 9 #"FUSELAGE2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; color --> image"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Purpose: Create rocket window image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Sample expressions for mk-window-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"WINDOW"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 14 3 12 #"WINDOW-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"WINDOW2"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 14 3 13 #"WINDOW2-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; Tests using sample computations for mk-window-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 24 3 1 #" "
0 0 14 3 12 #"WINDOW-COLOR"
0 0 24 3 2 #") "
0 0 14 3 6 #"WINDOW"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 24 3 1 #" "
0 0 14 3 13 #"WINDOW2-COLOR"
0 0 24 3 2 #") "
0 0 14 3 7 #"WINDOW2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; Tests using sample values for mk-window-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"darkblue"
0 0 24 3 2 #") "
0 6           4 21 91
(14
 #"(#(struct:translate 3/2 5 #(struct:ellipse 3 10 0 255 \"darkblue\"))"
 #" #(struct:bb 3 10 10) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"gray"
0 0 24 3 2 #") "
0 6           4 21 87
(15
 #"(#(struct:translate 3/2 5 #(struct:ellipse 3 10 0 255 \"gray\")) #(s"
 #"truct:bb 3 10 10) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; color --> image"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Purpose: Create single booster image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 10 #"FUSELAGE-W"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Sample expressions for mk-single-booster-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"SINGLE-BOOSTER"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 10 #"FUSELAGE-W"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 14 3 13 #"NACELLE-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"SINGLE-BOOSTER2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 10 #"FUSELAGE-W"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 14 3 14 #"NACELLE2-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; Tests using sample computations for mk-single-booster-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 24 3 1 #" "
0 0 14 3 13 #"NACELLE-COLOR"
0 0 24 3 2 #") "
0 0 14 3 14 #"SINGLE-BOOSTER"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 24 3 1 #" "
0 0 14 3 14 #"NACELLE2-COLOR"
0 0 24 3 2 #") "
0 0 14 3 15 #"SINGLE-BOOSTER2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; Tests using sample values for mk-single-booster-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"darkred"
0 0 24 3 2 #") "
0 6           4 21 300
(16
 #"(#(struct:translate 10.0 8.660254037844387 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0.0 -8.660254037844387 0 0) #(struct:pulled-point"
 #" 0 0 -10.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -5.0000"
 #"00000000002 -0.0 0 0)) 255 \"darkred\")) #(struct:bb 10.0 8.66025403"
 #"7844387 8.660254037844387) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"gold"
0 0 24 3 2 #") "
0 6           4 21 297
(17
 #"(#(struct:translate 10.0 8.660254037844387 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0.0 -8.660254037844387 0 0) #(struct:pulled-point"
 #" 0 0 -10.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -5.0000"
 #"00000000002 -0.0 0 0)) 255 \"gold\")) #(struct:bb 10.0 8.66025403784"
 #"4387 8.660254037844387) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; image --> image"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Purpose: Create booster image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"mk-booster-img"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-sb-img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-sb-img"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-sb-img"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"BOOSTER"
0 0 24 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 14 #"SINGLE-BOOSTER"
0 0 24 3 1 #" "
0 0 14 3 14 #"SINGLE-BOOSTER"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"BOOSTER2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 15 #"SINGLE-BOOSTER2"
0 0 24 3 1 #" "
0 0 14 3 15 #"SINGLE-BOOSTER2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; Tests using sample computations for mk-booster-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"mk-booster-img"
0 0 24 3 1 #" "
0 0 14 3 14 #"SINGLE-BOOSTER"
0 0 24 3 2 #") "
0 0 14 3 7 #"BOOSTER"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"mk-booster-img"
0 0 24 3 1 #" "
0 0 14 3 15 #"SINGLE-BOOSTER2"
0 0 24 3 2 #") "
0 0 14 3 8 #"BOOSTER2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Tests using sample values for mk-booster-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"mk-booster-img"
0 0 24 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"darkred"
0 0 24 3 3 #")) "
0 6           4 21 613
(18
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 10.0 8.6"
 #"60254037844387 #(struct:polygon (#(struct:pulled-point 0 0 0.0 -8.66"
 #"0254037844387 0 0) #(struct:pulled-point 0 0 -10.0 -8.66025403784438"
 #"7 0 0) #(struct:pulled-point 0 0 -"
 #"5.000000000000002 -0.0 0 0)) 255 \"darkred\"))) #(struct:translate 1"
 #"0.0 0.0 #(struct:translate 10.0 8.660254037844387 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0.0 -8.660254037844387 0 0) #(struct:pulle"
 #"d-point 0 0 -10.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 "
 #"-5.000000000000002 -0.0 0 0)) 255 \"darkred\")))) #(struct:bb 20.0 8"
 #".660254037844387 8.660254037844387) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"mk-booster-img"
0 0 24 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"gold"
0 0 24 3 3 #")) "
0 6           4 21 607
(19
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 10.0 8.6"
 #"60254037844387 #(struct:polygon (#(struct:pulled-point 0 0 0.0 -8.66"
 #"0254037844387 0 0) #(struct:pulled-point 0 0 -10.0 -8.66025403784438"
 #"7 0 0) #(struct:pulled-point 0 0 -"
 #"5.000000000000002 -0.0 0 0)) 255 \"gold\"))) #(struct:translate 10.0"
 #" 0.0 #(struct:translate 10.0 8.660254037844387 #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 0.0 -8.660254037844387 0 0) #(struct:pulled-p"
 #"oint 0 0 -10.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -5."
 #"000000000000002 -0.0 0 0)) 255 \"gold\")))) #(struct:bb 20.0 8.66025"
 #"4037844387 8.660254037844387) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; image image image --> image"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; Purpose: Create the main rocket image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-window"
0 0 24 3 1 #" "
0 0 14 3 10 #"a-fuselage"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-booster"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-window"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 10 #"a-fuselage"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 10 #"a-fuselage"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 5 #"above"
0 0 24 3 1 #" "
0 0 14 3 10 #"a-fuselage"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-booster"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Sample expressions for mk-rocket-main-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 6 #"WINDOW"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 8 #"FUSELAGE"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 8 #"FUSELAGE"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 5 #"above"
0 0 24 3 1 #" "
0 0 14 3 8 #"FUSELAGE"
0 0 24 3 1 #" "
0 0 14 3 7 #"BOOSTER"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 7 #"WINDOW2"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 9 #"FUSELAGE2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 9 #"FUSELAGE2"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 5 #"above"
0 0 24 3 1 #" "
0 0 14 3 9 #"FUSELAGE2"
0 0 24 3 1 #" "
0 0 14 3 8 #"BOOSTER2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; Tests using sample computations for mk-rocket-main-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 24 3 1 #" "
0 0 14 3 6 #"WINDOW"
0 0 24 3 1 #" "
0 0 14 3 8 #"FUSELAGE"
0 0 24 3 1 #" "
0 0 14 3 7 #"BOOSTER"
0 0 24 3 2 #") "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 24 3 1 #" "
0 0 14 3 7 #"WINDOW2"
0 0 24 3 1 #" "
0 0 14 3 9 #"FUSELAGE2"
0 0 24 3 1 #" "
0 0 14 3 8 #"BOOSTER2"
0 0 24 3 2 #") "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; Tests using sample computations for mk-rocket-main-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"black"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 14 #"mk-booster-img"
0 0 24 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 1036
(20
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 20.0 0) #(struct:"
 #"point 20.0 28.66025403784439) #(struct:point 0 28.66025403784439)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 17/2 0 #(s"
 #"truct:translate 3/2 5 #(struct:ellipse 3 10 0 255 \"black\"))) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 10 10 #(struct:ellipse 20 20 0 255 \"yellow\"))) #(struct:t"
 #"ranslate 0.0 20 #(struct:overlay #(struct:translate 0 0 #(struct:tra"
 #"nslate 10.0 8.660254037844387 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -10.0 -8"
 #".660254037844387 0 0) #(struct:pulled-point 0 0 -5.000000000000002 -"
 #"0.0 0 0)) 255 \"yellow\"))) #(struct:translate 10.0 0.0 #(struct:tra"
 #"nslate 10.0 8.660254037844387 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -10.0 -8"
 #".660254037844387 0 0) #(struct:pulled-point 0 0 -5.000000000000002 -"
 #"0.0 0 0)) 255 \"yellow\")))))))))) #(struct:bb 20.0 28.6602540378443"
 #"9 28.66025403784439) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"skyblue"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 14 #"mk-booster-img"
0 0 24 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"lightred"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 1041
(21
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 20.0 0) #(struct:"
 #"point 20.0 28.66025403784439) #(struct:point 0 28.66025403784439)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 17/2 0 #(s"
 #"truct:translate 3/2 5 #(struct:ellipse 3 10 0 255 \"green\"))) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 10 10 #(struct:ellipse 20 20 0 255 \"skyblue\"))) #(struct:"
 #"translate 0.0 20 #(struct:overlay #(struct:translate 0 0 #(struct:tr"
 #"anslate 10.0 8.660254037844387 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -10.0 -"
 #"8.660254037844387 0 0) #(struct:pulled-point 0 0 -5.000000000000002 "
 #"-0.0 0 0)) 255 \"lightred\"))) #(struct:translate 10.0 0.0 #(struct:"
 #"translate 10.0 8.660254037844387 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -10.0"
 #" -8.660254037844387 0 0) #(struct:pulled-point 0 0 -5.00000000000000"
 #"2 -0.0 0 0)) 255 \"lightred\")))))))))) #(struct:bb 20.0 28.66025403"
 #"784439 28.66025403784439) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; image color --> image"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Purpose: Create a rocket nacelle image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"mk-nacelle-img"
0 0 24 3 1 #" "
0 0 14 3 17 #"a-rocket-main-img"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 17 #"a-rocket-main-img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 17 #"a-rocket-main-img"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 7 #"a-color"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; Sample expressions for mk-nacelle-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"NACELLE"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 14 3 13 #"NACELLE-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"NACELLE2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 1 #" "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 14 #"NACELLE2-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; Tests using sample computations for mk-nacelle-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"mk-nacelle-img"
0 0 24 3 1 #" "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 24 3 1 #" "
0 0 14 3 13 #"NACELLE-COLOR"
0 0 24 3 2 #") "
0 0 14 3 7 #"NACELLE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"mk-nacelle-img"
0 0 24 3 1 #" "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 24 3 1 #" "
0 0 14 3 14 #"NACELLE2-COLOR"
0 0 24 3 2 #") "
0 0 14 3 8 #"NACELLE2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Tests using sample values for mk-nacelle-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"mk-nacelle-img"
0 0 24 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 14 #"mk-booster-img"
0 0 24 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 21 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 235
(22
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0"
 #" 0 20 29/4 0 0) #(struct:pulled-p"
 #"oint 0 0 0 29/4 0 0)) 255 \"yellow\")) #(struct:bb 20 29/4 29/4) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"mk-nacelle-img"
0 0 24 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 14 #"mk-booster-img"
0 0 24 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"lightorange"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 21 3 1 #"'"
0 0 14 3 11 #"lightorange"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 240
(23
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0"
 #" 0 20 29/4 0 0) #(struct:pulled-point 0 0 0 29/4 0 0)) 255 \"lightor"
 #"ange\")) #(struct:bb 20 29/4 29/4) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; image image --> ci"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; Purpose: Create a rocket ci"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-rocket-ci"
0 0 24 3 1 #" "
0 0 14 3 17 #"a-rocket-main-img"
0 0 24 3 1 #" "
0 0 14 3 13 #"a-nacelle-img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 13 #"a-nacelle-img"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #"  "
0 0 14 3 17 #"a-rocket-main-img"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.7"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 17 #"a-rocket-main-img"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 17 #"a-rocket-main-img"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ROCKET-IMG"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 7 #"NACELLE"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #"  "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.7"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ROCKET-IMG2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 8 #"NACELLE2"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #"  "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.7"
0 0 24 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 24 3 1 #" "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; Tests using sample computations for mk-rocket-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-rocket-ci"
0 0 24 3 1 #" "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 24 3 1 #" "
0 0 14 3 7 #"NACELLE"
0 0 24 3 2 #") "
0 0 14 3 10 #"ROCKET-IMG"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-rocket-ci"
0 0 24 3 1 #" "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 24 3 1 #" "
0 0 14 3 8 #"NACELLE2"
0 0 24 3 2 #") "
0 0 14 3 11 #"ROCKET-IMG2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 1 #" "
0 0 14 3 10 #"ROCKET-IMG"
0 0 24 3 3 #")  "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 24 3 1 #" "
0 0 14 3 11 #"ROCKET-IMG2"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; Tests using sample values for mk-rocket-img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-rocket-ci"
0 0 24 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 14 #"mk-booster-img"
0 0 24 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 14 #"mk-nacelle-img"
0 0 24 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 14 #"mk-booster-img"
0 0 24 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 21 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 1469
(24
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 20.0 0) #(struct:"
 #"point 20.0 28.66025403784439) #(struct:point 0 28.66025403784439)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 667/40 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0"
 #" 20 29/4 0 0) #(struct:pulled-point 0 0 0 29/4 0 0)) 255 \"yellow\")"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 20.0 0) #(struct:point 20.0 28.66025403784439) #(struct:poin"
 #"t 0 28.66025403784439)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 17/2 0 #(struct:translate 3/2 5 #(struct:ellipse 3 10"
 #" 0 255 \"blue\"))) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:translate 10 10 #(struct:ellipse 20 20 0 255 "
 #"\"green\"))) #(struct:translate 0.0 20 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 10.0 8.660254037844387 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0.0 -8.660254037844387 0 0) #(struct:pu"
 #"lled-point 0 0 -10.0 -8.660254037844387 0 0) #(struct:pulled-point 0"
 #" 0 -5.000000000000002 -0.0 0 0)) 255 \"yellow\"))) #(struct:translat"
 #"e 10.0 0.0 #(struct:translate 10.0 8.660254037844387 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0.0 -8.660254037844387 0 0) #(struct:pu"
 #"lled-point 0 0 -10.0 -8.660254037844387 0 0) #(struct:pulled-point 0"
 #" 0 -5.000000000000002 -0.0 0 0)) 255 \"yellow\")))))))))))))) #(stru"
 #"ct:bb 20.0 28.66025403784439 28.66025403784439) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-rocket-ci"
0 0 24 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"white"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 14 #"mk-booster-img"
0 0 24 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"lightred"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 14 #"mk-nacelle-img"
0 0 24 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"white"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 14 #"mk-booster-img"
0 0 24 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"lightred"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 21 3 1 #"'"
0 0 14 3 8 #"lightred"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 1475
(25
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 20.0 0) #(struct:"
 #"point 20.0 28.66025403784439) #(struct:point 0 28.66025403784439)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 667/40 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0"
 #" 20 29/4 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 29/4 0 0)) 255 \"lightred\"))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 20.0 0) #(struct:point "
 #"20.0 28.66025403784439) #(struct:point 0 28.66025403784439)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 17/2 0 #(struct:"
 #"translate 3/2 5 #(struct:ellipse 3 10 0 255 \"white\"))) #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 10 10 #(struct:ellipse 20 20 0 255 \"blue\"))) #(struct:translate"
 #" 0.0 20 #(struct:overlay #(struct:translate 0 0 #(struct:translate 1"
 #"0.0 8.660254037844387 #(struct:polygon (#(struct:pulled-point 0 0 0."
 #"0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -10.0 -8.6602540"
 #"37844387 0 0) #(struct:pulled-point 0 0 -5.000000000000002 -0.0 0 0)"
 #") 255 \"lightred\"))) #(struct:translate 10.0 0.0 #(struct:translate"
 #" 10.0 8.660254037844387 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -10.0 -8.66025"
 #"4037844387 0 0) #(struct:pulled-point 0 0 -5.000000000000002 -0.0 0 "
 #"0)) 255 \"lightred\")))))))))))))) #(struct:bb 20.0 28.6602540378443"
 #"9 28.66025403784439) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; DRAWING FUNCTIONS"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; image-x --> pixel-x"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; Purpose: To translate the given image-x to a pixel-x"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"image-x->pix-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"ix"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 2 #"ix"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Sample Expressions for x->pix-x"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"PIX-X5"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"PIX-X12"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Tests using sample computations for x->pix-x"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"image-x->pix-x"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 14 3 6 #"PIX-X5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"image-x->pix-x"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 14 3 7 #"PIX-X12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Tests using sample values for x->pix-x"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"image-x->pix-x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"image-x->pix-x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 3 #")) "
0 0 21 3 3 #"585"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; image-y --> pixel-y"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; Purpose: To translate the given image-y to a pixel-y"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"image-y->pix-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"iy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 2 #"iy"
0 0 24 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Sample expressions for y->pix-y"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"PIX-Y1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"PIX-Y6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Tests using sample computations for y->pix-y"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"image-y->pix-y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 6 #"PIX-Y1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"image-y->pix-y"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 6 #"PIX-Y6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Tests using sample values for y->pix-y"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"image-y->pix-y"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"image-y->pix-y"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 18 #"MAX-CHARS-VERTICAL"
0 0 24 3 3 #")) "
0 0 21 3 3 #"435"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; image image-x image-y image --> image"
0 0 24 29 1 #"\n"
0 0 17 3 97
(26
 #";; Purpose: Place the first given image in the seocond given image a"
 #"t the given image coordinates"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"draw-ci"
0 0 24 3 1 #" "
0 0 14 3 8 #"char-img"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-img-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-img-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"scn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 8 #"char-img"
0 0 24 3 2 #" ("
0 0 14 3 14 #"image-x->pix-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-img-x"
0 0 24 3 3 #") ("
0 0 14 3 14 #"image-y->pix-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-img-y"
0 0 24 3 2 #") "
0 0 14 3 3 #"scn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; Sample expressions for draw-ci"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ROCKET-SCN"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 10 #"ROCKET-IMG"
0 0 24 3 2 #" ("
0 0 14 3 14 #"image-x->pix-x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"image-y->pix-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"ROCKET-Y"
0 0 24 3 2 #") "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"ALIEN-SCN"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 9 #"ALIEN-IMG"
0 0 24 3 2 #" ("
0 0 14 3 14 #"image-x->pix-x"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 14 #"image-y->pix-y"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"SHOT-SCN"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 8 #"SHOT-IMG"
0 0 24 3 2 #" ("
0 0 14 3 14 #"image-x->pix-x"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 3 #") ("
0 0 14 3 14 #"image-y->pix-y"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 2 #") "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; Tests using sample computations for draw-ci"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"draw-ci"
0 0 24 3 1 #" "
0 0 14 3 10 #"ROCKET-IMG"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 8 #"ROCKET-Y"
0 0 24 3 1 #" "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 2 #") "
0 0 14 3 10 #"ROCKET-SCN"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"draw-ci"
0 0 24 3 1 #" "
0 0 14 3 9 #"ALIEN-IMG"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 2 #") "
0 0 14 3 9 #"ALIEN-SCN"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"draw-ci"
0 0 24 3 1 #" "
0 0 14 3 8 #"SHOT-IMG"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 2 #") "
0 0 14 3 8 #"SHOT-SCN"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; Tests using sample values for draw-ci"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"draw-ci"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"green"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 1068
(27
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 250 250 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 10 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 600 0) #(struct:point 600 45"
 #"0) #(struct:point 0 450)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #("
 #"struct:pulled-point 0 0 600 450 0 0) #(struct:pulled-point 0 0 0 450"
 #" 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(stru"
 #"ct:pulled-point 0 0 600 450 0 0) #(struct:pulled-point 0 0 0 450 0 0"
 #")) 255 \"pink\")))))))))) #(struct:bb 600 450 450) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"draw-ci"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"black"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 21 3 2 #"11"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 21 3 2 #"12"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 936
(28
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 335 360 #(struct:translate 10 15 #(struc"
 #"t:ellipse 20 30 0 outline \"black\"))) #(struct:translate 0 0 #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:point 60"
 #"0 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0"
 #") #(struct:pulled-point 0 0 600 450 0 0) #(struct:pulled-point 0 0 0"
 #" 450 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #("
 #"struct:pulled-point 0 0 600 450 0 0) #(struct:pulled-point 0 0 0 450"
 #" 0 0)) 255 \"pink\")))))))))) #(struct:bb 600 450 450) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; alien scene --> scene"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; Purpose: Draw the given alien in the given scene"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-alien"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 1 #" "
0 0 14 3 3 #"scn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"draw-ci"
0 0 24 3 1 #" "
0 0 14 3 9 #"ALIEN-IMG"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 3 #"scn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Sample expressions for draw-alien"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ALIEN-VAL1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"draw-ci"
0 0 24 3 1 #" "
0 0 14 3 9 #"ALIEN-IMG"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"ALIEN-VAL2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"draw-ci"
0 0 24 3 1 #" "
0 0 14 3 9 #"ALIEN-IMG"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 8 #"E-SCENE2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; Tests using sample computations for draw-alien"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-alien"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 2 #"  "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 3 #")  "
0 0 14 3 10 #"ALIEN-VAL1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-alien"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 24 3 1 #" "
0 0 14 3 8 #"E-SCENE2"
0 0 24 3 2 #") "
0 0 14 3 10 #"ALIEN-VAL2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; Tests using sample values for draw-alien"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-alien"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 24 3 1 #" "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 1047
(29
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 96.5 421.0 #(struct:overlay #(struct:tra"
 #"nslate 8.5 14.0 #(struct:text \"X\" 0 1 \"black\" 25 #f swiss normal"
 #" normal #f)) #(struct:translate 8.5 14.0 #(struct:ellipse 15 15 0 25"
 #"5 \"black\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 600 0) #(struct:point 600 450) #(struct:point 0"
 #" 450)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(struct:pulled-point"
 #" 0 0 600 450 0 0) #(struct:pulled-point 0 0 0 450 0 0)) outline #(st"
 #"ruct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(struct:pulled-point 0 0"
 #" 600 450 0 0) #(struct:pulled-point 0 0 0 450 0 0)) 255 \"pink\"))))"
 #")))))) #(struct:bb 600 450 450.0) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; rocket --> scene"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; Purpose: To draw the rocket in the given scene"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-rocket"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-scene"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"draw-ci"
0 0 24 3 1 #" "
0 0 14 3 10 #"ROCKET-IMG"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 24 3 1 #" "
0 0 14 3 8 #"ROCKET-Y"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-scene"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; Sample expressions for draw-rocket"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"RSCN3"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"draw-ci"
0 0 24 3 1 #" "
0 0 14 3 10 #"ROCKET-IMG"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 8 #"ROCKET-Y"
0 0 24 3 1 #" "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"RSCN12"
0 0 24 3 2 #" ("
0 0 14 3 7 #"draw-ci"
0 0 24 3 1 #" "
0 0 14 3 10 #"ROCKET-IMG"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 14 3 8 #"ROCKET-Y"
0 0 24 3 1 #" "
0 0 14 3 8 #"E-SCENE2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; Tests using sample computations for draw-rocket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-rocket"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"  "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 2 #") "
0 0 14 3 5 #"RSCN3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-rocket"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 14 3 8 #"E-SCENE2"
0 0 24 3 2 #") "
0 0 14 3 6 #"RSCN12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Tests using sample values for draw-rocket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-rocket"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 1905
(30
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 5.0 420.6698729810778 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 20.0 0) #(struct:point 20.0 28.66025"
 #"403784439) #(struct:point 0 28.66025403784439)) #(struct:overlay #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 667/40 0 0) #(struct:pull"
 #"ed-point 0 0 20 667/40 0 0) #(struct:pulled-point 0 0 20 957/40 0 0)"
 #" #(struct:pulled-point 0 0 0 957/40 0 0)) 255 \"red\") #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 20.0 0) #(struct:point 20.0 28."
 #"66025403784439) #(struct:point 0 28.66025403784439)) #(struct:overla"
 #"y #(struct:overlay #(struct:overlay #(struct:translate 10 5 #(struct"
 #":ellipse 3 10 0 255 \"darkgray\")) #(struct:translate 10 10 #(struct"
 #":ellipse 20 20 0 255 \"green\"))) #(struct:polygon (#(struct:pulled-"
 #"point 0 0 10.0 20.0 0 0) #(struct:pulled-point 0 0 0.0 20.0 0 0) #(s"
 #"truct:pulled-point 0 0 4.999999999999998 28.66025403784439 0 0)) 255"
 #" \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 20.0 20.0 0 0"
 #") #(struct:pulled-point 0 0 10.0 20.0 0 0) #(struct:pulled-point 0 0"
 #" 14.999999999999998 28.66025403784439 0 0)) 255 \"red\")))))) #(stru"
 #"ct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 6"
 #"00 0) #(struct:point 600 450) #(struct:point 0 450)) #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0) #(st"
 #"ruct:pulled-point 0 0 0 450 0 0)) outline #(struct:pen \"black\" 2 s"
 #"olid round round)))) #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0) #(struct"
 #":pulled-point 0 0 0 450 0 0)) 255 \"pink\")))))))))) #(struct:bb 600"
 #" 450 450.0) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-rocket"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 2 #") "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 1907
(31
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 575.0 420.6698729810778 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 20.0 0) #(struct:point 20.0 28.660"
 #"25403784439) #(struct:point 0 28.66025403784439)) #(struct:overlay #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 667/40 0 0) #(struct:pu"
 #"lled-point 0 0 20 667/40 0 0) #(struct:pulled-point 0 0 20 957/40 0 "
 #"0) #(struct:pulled-point 0 0 0 957/40 0 0)) 255 \"red\") #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 20.0 0) #(struct:point 20.0 2"
 #"8.66025403784439) #(struct:point 0 28.66025403784439)) #(struct:over"
 #"lay #(struct:overlay #(struct:overlay #(struct:translate 10 5 #(stru"
 #"ct:ellipse 3 10 0 255 \"darkgray\")) #(struct:translate 10 10 #(stru"
 #"ct:ellipse 20 20 0 255 \"green\"))) #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 10.0 20.0 0 0) #(struct:pulled-point 0 0 0.0 20.0 0 0) #"
 #"(struct:pulled-point 0 0 4.999999999999998 28.66025403784439 0 0)) 2"
 #"55 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 20.0 20.0 0"
 #" 0) #(struct:pulled-point 0 0 10.0 20.0 0 0) #(struct:pulled-point 0"
 #" 0 14.999999999999998 28.66025403784439 0 0)) 255 \"red\")))))) #(st"
 #"ruct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point"
 #" 600 0) #(struct:point 600 450) #(struct:point 0 450)) #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0) #("
 #"struct:pulled-point 0 0 0 450 0 0)) outline #(struct:pen \"black\" 2"
 #" solid round round)))) #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0) #(stru"
 #"ct:pulled-point 0 0 0 450 0 0)) 255 \"pink\")))))))))) #(struct:bb 6"
 #"00 450 450.0) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; world --> scene"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; Purpose: To draw the world in E-SCENE"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"draw-alien"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-alien"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"draw-rocket"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Sample expressions for draw-world"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"WORLD-SCN1"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"draw-alien"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-alien"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 11 #"draw-rocket"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"WORLD-SCN2"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"draw-alien"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-alien"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 11 #"draw-rocket"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 14 3 7 #"E-SCENE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; Tests using sample computations for draw-world"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 3 #")  "
0 0 14 3 10 #"WORLD-SCN1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 24 3 2 #") "
0 0 14 3 10 #"WORLD-SCN2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; Tests using sample computations for draw-world"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 2282
(32
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 306.5 1.0 #(struct:overlay #(struct:tran"
 #"slate 8.5 14.0 #(struct:text \"X\" 0 1 \"black\" 25 #f swiss normal "
 #"normal #f)) #(struct:translate 8.5 14.0 #(struct:ellipse 15 15 0 255"
 #" \"black\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 600 0) #(struct:point 600 450) #(struct:point 0 "
 #"450)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 455"
 #".0 420.6698729810778 #(struct:crop (#(struct:point 0 0) #(struct:poi"
 #"nt 20.0 0) #(struct:point 20.0 28.66025403784439) #(struct:point 0 2"
 #"8.66025403784439)) #(struct:overlay #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 667/40 0 0) #(struct:pulled-point 0 0 20 667/40 0 0) #"
 #"(struct:pulled-point 0 0 20 957/40 0 0) #(struct:pulled-point 0 0 0 "
 #"957/40 0 0)) 255 \"red\") #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 20.0 0) #(struct:point 20.0 28.66025403784439) #(struct:poin"
 #"t 0 28.66025403784439)) #(struct:overlay #(struct:overlay #(struct:o"
 #"verlay #(struct:translate 10 5 #(struct:ellipse 3 10 0 255 \"darkgra"
 #"y\")) #(struct:translate 10 10 #(s"
 #"truct:ellipse 20 20 0 255 \"green\"))) #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 10.0 20.0 0 0) #(struct:pulled-point 0 0 0.0 20.0 0 0"
 #") #(struct:pulled-point 0 0 4.999999999999998 28.66025403784439 0 0)"
 #") 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 20.0 20."
 #"0 0 0) #(struct:pulled-point 0 0 10.0 20.0 0 0) #(struct:pulled-poin"
 #"t 0 0 14.999999999999998 28.66025403784439 0 0)) 255 \"red\")))))) #"
 #"(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 600 0) #(struct:point 600 450) #(struct:point 0 450)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0)"
 #" #(struct:pulled-point 0 0 0 450 "
 #"0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(struc"
 #"t:pulled-point 0 0 600 450 0 0) #(struct:pulled-point 0 0 0 450 0 0)"
 #") 255 \"pink\")))))))))))))) #(struct:bb 600 450 450.0) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-ROCKET"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 2283
(33
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 96.5 421.0 #(struct:overlay #(struct:tra"
 #"nslate 8.5 14.0 #(struct:text \"X\" 0 1 \"black\" 25 #f swiss normal"
 #" normal #f)) #(struct:translate 8.5 14.0 #(struct:ellipse 15 15 0 25"
 #"5 \"black\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 600 0) #(struct:point 600 450) #(struct:point 0"
 #" 450)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 30"
 #"5.0 420.6698729810778 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 20.0 0) #(struct:point 20.0 28.66025403784439) #(struct:point 0 "
 #"28.66025403784439)) #(struct:overlay #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 667/40 0 0) #(struct:pulled-point 0 0 20 667/40 0 0) "
 #"#(struct:pulled-point 0 0 20 957/40 0 0) #(struct:pulled-point 0 0 0"
 #" 957/40 0 0)) 255 \"red\") #(struct:crop (#(struct:point 0 0) #(stru"
 #"ct:point 20.0 0) #(struct:point 20.0 28.66025403784439) #(struct:poi"
 #"nt 0 28.66025403784439)) #(struct:overlay #(struct:overlay #(struct:"
 #"overlay #(struct:translate 10 5 #(struct:ellipse 3 10 0 255 \"darkgr"
 #"ay\")) #(struct:translate 10 10 #(struct:ellipse 20 20 0 255 \"green"
 #"\"))) #(struct:polygon (#(struct:pulled-point 0 0 10.0 20.0 0 0) #(s"
 #"truct:pulled-point 0 0 0.0 20.0 0 0) #(struct:pulled-point 0 0 4.999"
 #"999999999998 28.66025403784439 0 0)) 255 \"red\")) #(struct:polygon "
 #"(#(struct:pulled-point 0 0 20.0 20.0 0 0) #(struct:pulled-point 0 0 "
 #"10.0 20.0 0 0) #(struct:pulled-point 0 0 14.999999999999998 28.66025"
 #"403784439 0 0)) 255 \"red\")))))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 600 0) #(struct:point 600 450"
 #") #(struct:point 0 450)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(s"
 #"truct:pulled-point 0 0 600 450 0 0) #(struct:pulled-point 0 0 0 450 "
 #"0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(struc"
 #"t:pulled-point 0 0 600 450 0 0) #(struct:pulled-point 0 0 0 450 0 0)"
 #") 255 \"pink\")))))))))))))) #(struct:bb 600 450 450.0) #f)"
) 0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Key Processing Functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; rocket --> rocket"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Purpose: Move the given rocket right"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-rckt-right"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 8 #"a-rocket"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Sample expressions for move-rckt-right"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ROCKET-VAL3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"ROCKET-VALMAX"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 54 #";; Tests using sample computations for move-rckt-right"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-rckt-right"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 11 #"ROCKET-VAL3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-rckt-right"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 3 #")) "
0 0 14 3 13 #"ROCKET-VALMAX"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 48 #";; Tests using sample values for move-rckt-right"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-rckt-right"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-rckt-right"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #") "
0 0 21 3 2 #"16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; rocket --> rocket"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Purpose: Move the given rocket left"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-rckt-left"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 8 #"a-rocket"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; Sample expressions for move-rckt-left"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ROCKET-VAL7"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ROCKET-VAL0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 53 #";; Tests using sample computations for move-rckt-left"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-rckt-left"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 14 3 11 #"ROCKET-VAL7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-rckt-left"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 47 #";; Tests using sample values for move-rckt-left"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-rckt-left"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-rckt-left"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 2 #") "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; world key --> world"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; Purpose: Process a key event to return next world"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-rckt-right"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 11 #"world-alien"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"world-dir"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-rckt-left"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 11 #"world-alien"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"world-dir"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; Sample expressions for process-key"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"KEY-RVAL"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-rckt-right"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 11 #"world-alien"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 9 #"world-dir"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"KEY-LVAL"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-rckt-left"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 11 #"world-alien"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 9 #"world-dir"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"KEY-OVAL"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 50 #";; Tests using sample computations for process-key"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 2 #"  "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #") "
0 0 14 3 8 #"KEY-RVAL"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 2 #"  "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #")  "
0 0 14 3 8 #"KEY-LVAL"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"m\""
0 0 24 3 6 #")     "
0 0 14 3 8 #"KEY-OVAL"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 44 #";; Tests using sample values for process-key"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 19 3 3 #"\"o\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 24 3 1 #" "
0 0 19 3 3 #"\";\""
0 0 24 3 2 #") "
0 0 14 3 11 #"INIT-WORLD2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; TICK PROCESSING"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 22 #";; image-x --> image-x"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 40 #";; Purpose: Move the given image-x right"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 51 #";; ASSUMPTION: Given image-x is less than MAX-IMG-X"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"move-right-image-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-img-x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-img-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-img-x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Ooops...\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 44 #";; Sample expressions for move-right-image-x"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"IMGX-VALR1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"IMGX-VALR2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 64
#";; Sample tests using sample computations for move-right-image-x"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"move-right-image-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 24 3 2 #") "
0 0 14 3 10 #"IMGX-VALR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"move-right-image-x"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 9 #")        "
0 0 14 3 10 #"IMGX-VALR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 64
#";; Sample tests using sample computations for move-right-image-x"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 18 #"move-right-image-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"Ooops...\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 22 #";; image-x --> image-x"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 39 #";; Purpose: Move the given image-x left"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"move-left-image-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-img-x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-img-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-img-x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Ooops...\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 43 #";; Sample expressions for move-left-image-x"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"IMGX-VALL1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 8 #"AN-IMG-X"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"IMGX-VALL2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 63
#";; Sample tests using sample computations for move-left-image-x"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"move-left-image-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"AN-IMG-X"
0 0 24 3 3 #")  "
0 0 14 3 10 #"IMGX-VALL1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"move-left-image-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 2 #") "
0 0 14 3 10 #"IMGX-VALL2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 63
#";; Sample tests using sample computations for move-left-image-x"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 17 #"move-left-image-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"Ooops...\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 22 #";; image-y --> image-y"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 42 #";; Purpose: To move the given image-y down"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"move-down-image-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-img-y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-img-y"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-img-y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Ooops...\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 43 #";; Sample expressions for move-down-image-y"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"IMG-Y1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 9 #"MIN-IMG-Y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"IMG-Y2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 8 #"AN-IMG-Y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 58
#";; Sample tests using sample computations for f-on-image-y"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"move-down-image-y"
0 0 24 3 1 #" "
0 0 14 3 9 #"MIN-IMG-Y"
0 0 24 3 2 #") "
0 0 14 3 6 #"IMG-Y1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"move-down-image-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"AN-IMG-Y"
0 0 24 3 3 #")  "
0 0 14 3 6 #"IMG-Y2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 58
#";; Sample tests using sample computations for f-on-image-y"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 17 #"move-down-image-y"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"Ooops...\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 22 #";; alien dir --> alien"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 47 #";; Purpose: Move given alien in given direction"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-dir"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 18 #"move-right-image-x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-dir"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 17 #"move-left-image-x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 17 #"move-down-image-y"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 36 #";; Sample expressions for move-alien"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"MALIEN-VAL1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 18 #"move-right-image-x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"MALIEN-VAL2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 17 #"move-left-image-x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"MALIEN-VAL3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 17 #"move-down-image-y"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 49 #";; Tests using sample computations for move-alien"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 6 #")     "
0 0 14 3 11 #"MALIEN-VAL1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 7 #")      "
0 0 14 3 11 #"MALIEN-VAL2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #") "
0 0 14 3 11 #"MALIEN-VAL3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 43 #";; Tests using sample values for move-alien"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 20 #";; alien --> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 60
#";; Purpose: Determine if he given alien is at the right edge"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 2 #") "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 46 #";; Sample expressions for alien-at-right-edge?"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"REDGE-VAL1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 2 #") "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"REDGE-VAL2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #")) "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 59
#";; Tests using sample computations for alien-at-right-edge?"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 2 #") "
0 0 14 3 10 #"REDGE-VAL1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #")) "
0 0 14 3 10 #"REDGE-VAL2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 53 #";; Tests using sample values for alien-at-right-edge?"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 20 #";; alien --> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 59
#";; Purpose: Determine if he given alien is at the left edge"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 2 #") "
0 0 14 3 9 #"MIN-IMG-X"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 45 #";; Sample expressions for alien-at-left-edge?"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"LEDGE-VAL1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 2 #") "
0 0 14 3 9 #"MIN-IMG-X"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"LEDGE-VAL2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #")) "
0 0 14 3 9 #"MIN-IMG-X"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 58
#";; Tests using sample computations for alien-at-left-edge?"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 2 #") "
0 0 14 3 10 #"LEDGE-VAL1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #")) "
0 0 14 3 10 #"LEDGE-VAL2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 52 #";; Tests using sample values for alien-at-left-edge?"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 20 #";; alien --> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 54 #";; Purpose: Deterime if the given alien is at any edge"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"alien-at-any-edge?"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 44 #";; Sample expressions for alien-at-any-edge?"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ALIEN-EVAL1"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ALIEN-EVAL2"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 57 #";; Tests using sample computations for alien-at-any-edge?"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"alien-at-any-edge?"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 2 #") "
0 0 14 3 11 #"ALIEN-EVAL1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"alien-at-any-edge?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 11 #"ALIEN-EVAL2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 51 #";; Tests using sample values for alien-at-any-edge?"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"alien-at-any-edge?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 20 #";; alien dir --> dir"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 38 #";; Purpose: Return new alien direction"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 1 #" "
0 0 14 3 7 #"old-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 18 #"alien-at-any-edge?"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"old-dir"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"old-dir"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"old-dir"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 7 #"old-dir"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 44 #";; Sample expressions for new-dir-after-tick"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 35 #";; Same as Sample instances for dir"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 57 #";; Tests using sample computations for new-dir-after-tick"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 51 #";; Tests using sample values for new-dir-after-tick"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 18 #";; world --> world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 49 #";; Purpose: Create a new world after a clock tick"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"process-tick"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"move-alien"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-alien"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-dir"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-alien"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-dir"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 9 #"world-dir"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 36 #";; Sample expressions for f-on-world"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"AFTER-TICK-WORLD1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"move-alien"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-alien"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                      ("
0 0 14 3 9 #"world-dir"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-alien"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 71
(34
 #"                                                                    "
 #"  ("
) 0 0 14 3 9 #"world-dir"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 9 #"world-dir"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"AFTER-TICK-WORLD2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"move-alien"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-alien"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                      ("
0 0 14 3 9 #"world-dir"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 24 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-alien"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 71 34 0 0 14 3 9 #"world-dir"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 9 #"world-dir"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 49 #";; Tests using sample computations for f-on-world"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"process-tick"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 3 #")  "
0 0 14 3 17 #"AFTER-TICK-WORLD1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"process-tick"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 24 3 2 #") "
0 0 14 3 17 #"AFTER-TICK-WORLD2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 43 #";; Tests using sample values for f-on-world"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"process-tick"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-ROCKET"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-ROCKET"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"process-tick"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                       "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"process-tick"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; GAME OVER"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 20 #";; alien --> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 54 #";; Purpose: Determine if the given alien reached earth"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 24 3 2 #") "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 46 #";; Sample expressions for alien-reached-earth?"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"ALIEN-EARTH1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 2 #") "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"ALIEN-EARTH2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 24 3 3 #")) "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 59
#";; Tests using sample computations for alien-reached-earth?"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 24 3 2 #") "
0 0 14 3 12 #"ALIEN-EARTH1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 24 3 3 #")) "
0 0 14 3 12 #"ALIEN-EARTH2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 53 #";; Tests using sample values for alien-reached-earth?"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 24 3 4 #"))  "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 20 #";; world --> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 38 #";; Purpose: Detect if the game is over"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-alien"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 36 #";; Sample expressions for game-over?"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"WORLD-OVER"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 11 #"world-alien"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-ROCKET"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                 "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"WORLD-NOT-OVER"
0 0 24 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-alien"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 49 #";; Tests using sample computations for game-over?"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"INIT-ROCKET"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 10 #"WORLD-OVER"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 3 2 #") "
0 0 14 3 14 #"WORLD-NOT-OVER"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 43 #";; Tests using sample values for game-over?"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; string --> world"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; Purpose: To run the game"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 7 #"on-draw"
0 0 24 3 1 #" "
0 0 14 3 10 #"draw-world"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-name"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"process-key"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 12 #"process-tick"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.25"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 9 #"stop-when"
0 0 24 3 1 #" "
0 0 14 3 10 #"game-over?"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0           0
