#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 1708 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 0 0 0 0 -1
-1 2 37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 128 0 0 0 0 -1
-1 2 42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 128 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
47 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
49 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 100 149 237
0 0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 79 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 185 220 113
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 155 255 155
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 116 116
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 18 67 155 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 30 70 190 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 135 185 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 176 208 208
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 116 116 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 125 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 143 15 223 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 141 19 5 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 244 194 71 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 127
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 86 86 86 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 31 31 -1 -1 78 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 30 3
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
0 31 31 -1 -1 79 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 79 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 79 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
184 134 11 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
184 134 11 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
184 134 11 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
184 134 11 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
184 134 11 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 155 255 155
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 155 255 155
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 155 255 155
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 155 255 155
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 116 116
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 116 116
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 116 116
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 155 255 155
184 134 11 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 155 255 155
184 134 11 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 155 255 155
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 155 255 155
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 155 255 155
184 134 11 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 2 1 #"\0"
1 54 140 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
1 55 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 4 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 191 255 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 191 255 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 220 113
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 185 220 113
0 0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 158 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 211 72 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 150 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
255 255 255 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 176 48 96 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 38 #"drscheme:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 31 #"drscheme:check-syntax:imported\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 41 #"profj:syntax-colors:scheme:block-comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 37 #"profj:syntax-colors:scheme:prim-type\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 38 #"profj:syntax-colors:scheme:identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 34 #"profj:syntax-colors:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:literal\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 33 #"profj:syntax-colors:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 35 #"profj:syntax-colors:scheme:default\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"profj:syntax-colors:scheme:uncovered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 35 #"profj:syntax-colors:scheme:covered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 8 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 8 24 #"drscheme:text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 8 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 8 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 28 #"drscheme:check-syntax:set!d\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 107 142 35 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 100 149 237
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 130 180 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 47 79 79 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 139 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 0 130 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 128 114
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 134 11 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 19 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 15 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 15 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 14 #"Html Standard\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 304 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 304 1 #"\0"
0 70 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 304 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 304 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 304 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 304 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 304 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 304 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 304 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 304 1 #"\0"
0 -1 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 304 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 304 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 304 1 #"\0"
0 70 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 304 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 3 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 0 1 #"\0"
0 70 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 173
216 230 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 173
216 230 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 16 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 16 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 26 #" Bitstream Vera Sans Mono\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 90 22 0
0 0 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 97 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 130 72 32 0
0 0 -1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 25 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 304 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 304 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 9 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 9 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 194 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 253 2 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 134 247 253
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 119 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 204 204
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 144 179 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 192
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 144 179 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 221 170
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 178 178 0
0 0 -1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 221 170
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 136 17 17 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 34 119 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 119 34 119 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 184 113
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 64 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 255 128
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 128
0 0 0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 19 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 22 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
128 64 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 255 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 64 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 192 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 178 178 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 128 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 160 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 192 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 64 128 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 192 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 194 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 115 115 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 179 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 160 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 28 181 142 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 181 0 90 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 162 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 6 75 159 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 189 189 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 64 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 64 0 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 128 0 64 199
163 196 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 128 0 64 198
166 200 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 194 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 192 192
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 128
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 192
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 64 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 194 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 9 91 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0
255 255 255 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 224
255 255 -1 -1 4 1 #"\0"
0 70 1 #"\0"
0.0 0 90 90 90 90 0 0 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0 0
0 0 1 #"\0"
0 70 1 #"\0"
0.0 0 90 90 90 90 0 0 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0 0
0 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 6 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 40 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 7 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 12 #"Inconsolata\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 128
0 0 0 -1 -1 0 1 #"\0"
0 75 22 #"Arial Rounded MT Bold\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
49 50 53 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 131 6 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 192
192 192 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 255 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 255 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 128
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 196 196 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 255 0
0 0 -1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 7 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 6 #"Arial\0"
0.0 12 92 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 77 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 25 15 3 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 102 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 27 13 0
0 0 -1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 26 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 22 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 24 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 12 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 70 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 26 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 14 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 26 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 22 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 16 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 31 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 31 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 31 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 18 1 #"\0"
0 -1 1 #"\0"
0.0 0 90 90 90 90 0 0 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0 0
0 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 137 0 17 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 181 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 25 15 3 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 24 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #" Liberation Mono\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 53 31 7 0 0
0 -1 -1 4 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 304 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 40 #"framework:syntax-coloring:scheme:symbol\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 41 #"framework:syntax-coloring:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 41 #"framework:syntax-coloring:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 40 #"framework:syntax-coloring:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 42 #"framework:syntax-coloring:scheme:constant\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 45 #"framework:syntax-coloring:scheme:parenthesis\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 39 #"framework:syntax-coloring:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 39 #"framework:syntax-coloring:scheme:other\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 49 #"drscheme:check-syntax:lexically-bound-identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 42 #"drscheme:check-syntax:imported-identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 37 #"profj:syntax-coloring:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 36 #"profj:syntax-coloring:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 37 #"profj:syntax-coloring:scheme:literal\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 37 #"profj:syntax-coloring:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 35 #"profj:syntax-coloring:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 40 #"profj:syntax-coloring:scheme:identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 37 #"profj:syntax-coloring:scheme:default\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 94 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 662 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 658 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 657 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 661 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 662 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 657 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 661 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 662 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 658 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 657 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 661 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 659 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 659 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 659 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 659 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 658 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 20 64 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 80 248 0
0 0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 80 248 0
0 0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 2 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 40 25 15 0 0
0 -1 -1 2 30 #"drscheme:check-syntax:keyword\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 40 25 15 0 0
0 -1 -1 2 39 #"drscheme:check-syntax:unbound-variable\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 20 64 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 2 37 #"drscheme:check-syntax:bound-variable\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 2 32 #"drscheme:check-syntax:primitive\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 135 39 0
0 0 -1 -1 2 31 #"drscheme:check-syntax:constant\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 135 39 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 2 32 #"drscheme:check-syntax:tail-call\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 2 27 #"drscheme:check-syntax:base\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 80 248 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 2 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 80 248 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
2 -1 0 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
2 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 20 64 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 153 0 0 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.2000000476837158 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0
1.0 0 0 0 0 0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.2000000476837158 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 0 0 255 0 0 0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 64 108 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 2 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
0.800000011920929 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 0 0 255 0 0 0 0 -1 2 1 #"\0"
0 70 1 #"\0"
0.6000000238418579 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 0 0 255 0 0 0 0 -1 2 1 #"\0"
0 75 1 #"\0"
1.2000000476837158 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 132 60 36 0 0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
0.75 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
0.800000011920929 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 132 60 36 0 0 0 0 -1 2 1 #"\0"
0 70 1 #"\0"
0.800000011920929 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0
1.0 0 0 0 0 0 0 0 -1 2 1 #"\0"
0 75 1 #"\0"
0.800000011920929 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 36 36 140 0 0 0 0 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 19 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 35 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 25 175 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 25 175 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 175 220 40 0
0 0 -1 -1 10 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 8 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 15 #"-adobe-courier\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 25 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 204 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 255 102
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 111 207
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 103 15 16 0
0 0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 1 0.0 0.0 0.0 0.0 0.0 0.0 169 169 169
169 169 169 -1 -1 0 1 #"\0"
0 75 8 #"Candara\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 10 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 204 102
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 204 204
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 14 #"Menlo Regular\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 9 #"Pragmata\0"
0.0 9 90 -1 90 -1 2 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 12 #"Pragmata TT\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 16 #"Liberation Mono\0"
0.0 9 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 10 90 -1 90 -1 2 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 23 #"Letter Gothic Std Bold\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 13 #" Andale Mono\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 156 66 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 7 12 94 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 255 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 183 183 183
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 40 130 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 128
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 64 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 64 64 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 224
255 255 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 19 #"Courier New Italic\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 234 74 131 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 120 96 191 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 12 165 160 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 4 142 142 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 90 202 23 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 239 199 39 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 51 51 0 0
0 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 18 #" DejaVu Sans Mono\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 24 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 12 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 77 1 #"\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 12 111 49 0
0 0 -1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 23 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 51 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 28 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 74 99 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 91 125 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 55 122 196 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 103 156 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 124 41 87 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 180 73 177 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 43 100 100 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 0 128
255 255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 64 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 1 61 84 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 5 104 154 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 124 84 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 64 0 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 128 0 64 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 1 61 84 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 5 104 154 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 5 104 154 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 128 0 64 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 14 73 122 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 64 0 0 0
-1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 196 49 169 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 15 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 78 143 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 255 0
0 0 -1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 124 84 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 3 1 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 217 144 74 0
0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 7 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 16 14 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 5 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 179 13 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 37 0 136 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 64 0 128 128
128 255 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.2000000476837158 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 0.0 0.0
0.0 0 0 0 0 0 0 0 0 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 157 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 82 46 7 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 30 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 78 143 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 126 71 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 149 188 143
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 145 146 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 212 139 103
0 0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 15 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 49 94 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 95 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 32 146 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 116 149 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 145 146 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 145 145 145
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 176 221
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 165 197 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 147 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 78 136 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 0 1 #"\0"
0 75 14 #"Comic Sans MS\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Arial\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 173 102 27 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0 0
0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 141 90 183 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 131 63 56 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 141 90 183 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 131 63 56 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 87 117 189 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 165 67 139 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 189 132
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 131 75 115 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Andale Mono\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 129 37 123 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 189 113
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 37 116 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 147 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 13 #"Miriam Fixed\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 64 128 128 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 23 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 0 0
0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 24 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 29 47 78 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 9 45 140 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 83 113 64 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 18 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 18 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 234 142 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 20 9 2 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 155 192 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 108 48 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 111 71 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 255 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 162 0 58 0 0
0 -1 -1 660 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 660 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 660 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 657 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 63
111 150 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 63
111 150 -1 -1 0 1 #"\0"
0 75 14 #"Lucida Grande\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0 0
0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 22 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 25 #"Bitstream Vera Sans Mono\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 131 146 150
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 42 161 152 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 220 50 47 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 131 148 150
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 133 153 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 147 161 161
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 99 114 114 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 42 161 152 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 211 54 130 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 203 75 22 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 88 110 117 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 147 161 161
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 107 142 35
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 100 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 139 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 107 142 35
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 139 0 0 255
228 225 -1 -1 0 1 #"\0"
0 75 19 #"Prestige Elite Std\0"
0.0 15 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 32 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Calibri\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 77 14 #"Lucida Grande\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Inconsolata\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 223 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 8 #"Calibri\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 255 0
0 0 -1 -1 0 1 #"\0"
0 75 13 #"Miriam Fixed\0"
0.0 10 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 128 0 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 14 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 14 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 14 #"Anonymous Pro\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 214 214 214
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 192 192
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 64 64 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 174 174 174
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 128
0 0 0 -1 -1 0 1 #"\0"
0 75 16 #"Source Code Pro\0"
0.0 10 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 16 #"Droid Sans Mono\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 33 33 100 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 100 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 154 80 45 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 107 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 91 38 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 33 33 127 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 100 0 0
0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 154 80 45 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 2 3 1 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 106 3 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 160 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 160 0 0 0
0 -1 -1 0 1 #"\0"
0 75 28 #"HelveticaNeueLT Com 33 ThEx\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 109 219 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 64 128 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 232 116 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 58 187 55 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 24 79 23 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 242 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 26 #"HelveticaNeueLT Com 45 Lt\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 146 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 4 74 181 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 206 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 30 91 28 0 0
0 -1 -1 0 1 #"\0"
0 75 28 #"HelveticaNeueLT Com 33 ThEx\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 2 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 57 26 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 9 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 137 103 71 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 181 91 148 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 181 91 148 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 127 156 99 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 119 141 194
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 161 111 63 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 182 91 149 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 223 103 179
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 111 86 63 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 223 103 179
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 38 98 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 137 103 71 0
0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 26 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 88 18 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 0 255
255 255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 255 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 255 0
0 0 -1 -1 0 1 #"\0"
0 75 13 #"Miriam Fixed\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 23 #"Lucida Sans Typewriter\0"
0.0 12 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 134 150 216
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 133 133 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 135 135 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 206 92 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 112 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 142 6 194 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 128
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 194 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 192
192 192 -1 -1 0 1 #"\0"
0 75 6 #"KaiTi\0"
0.0 10 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 8 90 -1 90 -1 0 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 28 #"HelveticaNeueLT Com 33 ThEx\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 19 70 17 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 22 78 20 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 84 36 19 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 27 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 58 191 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 59 192 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 94 253 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 246 150 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 243 150 44 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 100 233 233
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 59 193 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 245 149 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 182 235 235
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 209 28 81 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 252 171 180
0 0 0 -1 -1 0 1 #"\0"
0 75 16 #"Source Code Pro\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 14 90 -1 90 -1 2 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 1 30 140 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 45 142 0
0 0 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 19 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 11 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Calibri\0"
0.0 11 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 9 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 102 70 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 209 28 81 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 160 0 0 0
0 -1 -1 0 1 #"\0"
0 75 17 #"Monotype Corsiva\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 16 90 -1 90 -1 2 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 122 107 167
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 29 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 34 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 98 54 14 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 31 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 122 70 22 0
0 0 -1 -1 0 1 #"\0"
0 75 6 #"KaiTi\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 32 226 108 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 157 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 181 0 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 33 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 23 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 212 120
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 117 213 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 114 252 213
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 64 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 141 249 0 0
0 0 -1 -1 0 1 #"\0"
0 75 8 #"PT Mono\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 54 62 0
0 0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Helvetica\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 75
75 75 -1 -1 0 1 #"\0"
0 75 12 #"Ubuntu Mono\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 185 185 185
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 254 129 129
0 0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 47 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 3 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 58
58 58 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Ubuntu Mono\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 19 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #"Courier New Bold\0"
0.0 24 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #"Courier New Bold\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 18 #" DejaVu Sans Mono\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 186 0 25 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 55 43 0
0 0 -1 -1 0 1 #"\0"
0 75 17 #"Courier New Bold\0"
0.0 25 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 14 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Inconsolata\0"
0.0 14 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #"Courier New Bold\0"
0.0 28 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 15 #"-adobe-courier\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 15 #"-adobe-courier\0"
0.0 24 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 15 #"-adobe-courier\0"
0.0 22 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 117 25 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 21 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 127 12 0 0 0
0 -1 -1 0 1 #"\0"
0 75 15 #"-adobe-courier\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 29 #"lucidasanstypewriter-bold-18\0"
0.0 24 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 18 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 16 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 14 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 19 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 127 220
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 199 0 255 0
0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 13 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Verdana\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 76 15 207 0
0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 11 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 14 #"Lucida Grande\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 245
255 245 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 29 29 97 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 101 27 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 32 102 30 0
0 0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 36 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 208 200 198
59 50 40 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 210 139 113
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 203 96 119 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 138 179 181
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 168 155 185
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 126 112 90 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 181 91 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 208 200 198
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 123 189 164
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 175 173
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 244 188 135
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 187 149 132
0 0 0 -1 -1 0 1 #"\0"
0 75 10 #"Open Sans\0"
0.0 11 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 233 233 233
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 170 170 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 252 252 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 221 221 221
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 17 #"DejaVu Sans Mono\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Inconsolata\0"
0.0 10 90 -1 90 -1 2 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 211 208 200
45 45 45 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 153 204
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 222 16 68 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 211 208 200
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 3 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 211 208 200 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 116 115 105
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 153 204 153
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 153 204 153
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 145 87 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 153 204
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 211 208 200
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 222 16 68 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 211 208 200
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 145 87 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 102 153 204
57 57 57 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 196 214 196
110 110 110 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 156 186 170
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 186 149 132
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 196 214 196
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 226 205 188
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 229 174 125
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 158 204 213
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 171 166 173
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 175 99 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 165 181 166
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 186 157 156
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 201 132 121
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 213 214 192
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 203 183 171
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 178 189
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 156 174 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 186 150 135
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 174 226 237
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 203 183 171
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 135 174 159
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 107 159 138
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 166 166
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 159 159 159
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 203 183 171
111 92 93 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 172 172 172
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 203 171 170
116 97 97 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 197 215 197
110 110 110 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 247 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 225 204 188
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 228 174 126
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 157 204 212
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 171 164 174
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 174 98 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 164 179 166
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 186 157 157
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 212 213 191
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 203 182 172
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 247 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 247 255 255
105 94 88 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 247 255 255
149 134 126 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 163 158 155
47 30 46 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 155 21 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 239 97 85 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 6 182 239 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 129 91 164 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 119 110 113
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 72 182 133 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 163 158 155
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 91 196 191 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 141 134 135
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 254 196 24 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 233 107 168
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 197 200 198
29 31 33 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 106 56 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 52 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 113 237 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 163 106 199
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 152 150
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 25 136 68 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 197 200 198
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 180 183 180
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 251 169 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 248 248 242
39 40 34 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 253 151 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 38 114 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 217 239
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 156 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 174 129 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 181 166 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 226 46 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 248 242
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 253 151 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 180 240 231
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 165 159 133
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 248 242
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 161 239 228
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 226 46 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 174 129 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 244 191 117
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 102 51 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Ubuntu Mono\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0 0
0 0 1 #"\0"
0 75 24 #"Prestige Elite Std Bold\0"
0.0 15 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 61 61 215 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 242 106 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 66 213 61 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 209 60 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 213 96 58 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 140
169 236 -1 -1 0 1 #"\0"
0 77 9 #"Segoe UI\0"
0.0 12 90 -1 90 -1 3 -1 0 1 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 247 255 255
105 94 88 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 247 255 255
149 134 126 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 23 #"Lucida Sans Typewriter\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
30 30 30 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 208 196 191
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 137 192 234
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 126 191 100
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 44 206 89 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 206 31 38 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 16 90 -1 90 -1 2 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
0 0 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 255 0
0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 10 90 -1 90 -1 0 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 16 #"Liberation Mono\0"
0.0 13 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 81 82 83 242
230 223 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 230 85 13 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 227 26 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 49 130 189 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 117 107 177
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 115 116 117
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 49 163 84 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 82 83 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 177 211
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 177 89 40 0
0 0 -1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 11 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 81 82 83 252
253 254 -1 -1 0 1 #"\0"
0 75 16 #"Liberation Mono\0"
0.0 12 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 192 197 206
43 48 59 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 208 135 112
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 191 97 106 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 143 161 179
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 180 142 173
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 101 115 126
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 163 190 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 197 206
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 181 180
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 167 173 186
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 235 203 139
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 171 121 103
0 0 0 -1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 13 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 81 82 83 243
234 224 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 2 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 201 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 255 167 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 171 171 171
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 224 148 72 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 233 47 47 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 59 72 227 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 171 171 171
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 35 237 218 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 14 216 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 150 226
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 221 221 19 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 105 84 45 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 52 52 52 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 85 85 85 0 0
0 -1 -1 32 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0
255 255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 247 247 241
39 40 34 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 226 13 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 154 253 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 155 254 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 173 128 254
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 180 165 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 165 225 46 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 247 247 241
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 252 150 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 179 239 230
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 164 158 132
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 38 114 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 38 114 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 35 255 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 230 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 64 0 128 128
128 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 64 0 128 255
128 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 64 0 128 255
128 0 -1 -1 0 1 #"\0"
0 75 11 #"Chalkboard\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #"Chalkboard\0"
0.0 22 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 9 90 -1 90 -1 2 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 2 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
27 27 27 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 166 166
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 255 128
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0
255 255 255 -1 -1 0 1 #"\0"
0 75 12 #"Ubuntu Mono\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Ubuntu Mono\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
0 0 0 1 #"\0"
0 75 12 #"SimSun-ExtB\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"SimSun-ExtB\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"SimSun-ExtB\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"SimSun-ExtB\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 254
255 255 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 0 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
-1 0 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
0 0 2 1 #"\0"
0 -1 1 #"\0"
0.0 15 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
0 0 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 22 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 0 0 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 199 204 209
28 32 35 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 199 199 149
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 199 174 149
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 174 149 199
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 199 149 174
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 116 124 132
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 149 199 174
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 199 204 209
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 149 174 199
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 173 179 186
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 174 199 149
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 199 149 149
0 0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 5 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 255 0
0 0 -1 -1 0 1 #"\0"
0 75 16 #"Source Code Pro\0"
0.0 12 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 255
0 0 0 -1 -1 0 1 #"\0"
0 75 16 #"Source Code Pro\0"
0.0 13 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Inconsolata\0"
0.0 12 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Inconsolata\0"
0.0 13 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Inconsolata\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Inconsolata\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 19 #"Proxima Nova Cn Lt\0"
0.0 12 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 16 #"Proxima Nova Lt\0"
0.0 12 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 16 #"Source Code Pro\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 70 75 80 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 168 105
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 207 106 76 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 117 135 166
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 155 133 157
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 95 90 96 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 143 157 106
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 75 80 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 175 196 219
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 155 112 63 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 55 59 65 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 222 147 95 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 102 102
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 129 162 190
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 148 187
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 135 137 135
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 181 189 104
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 55 59 65 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 138 190 183
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 163 104 90 0
0 0 -1 -1 0 1 #"\0"
0 75 16 #"Source Code Pro\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 16 #"Source Code Pro\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 119 126 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 219 12 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 64 230 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 241 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 179 24 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 254 254 252
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 2 39 198 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 199 204 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 253 206 179
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 141 178 255
0 0 0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 29 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 30 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 90 90 90 0 0 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0 0
0 0 1 #"\0"
0 75 11 #"Input Mono\0"
0.0 12 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92
255 255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 229
254 247 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 101 123 131
253 246 227 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 108 113 196
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 220 50 47 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 139 210 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 101 123 131
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 133 153 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 181 137 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 254 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
254 255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 0 128
192 192 192 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 128
192 192 192 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier Std\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 24 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 90 0 0 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0 0
0 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 180 108 29 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 158 175 254
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 128 0
0 128 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 128
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 255 255
0 0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 65 181 250 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 255 128
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 146 94 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 192
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 146 94 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 64 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 255 128
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 192 192
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 255 128
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 128 128 255
0 0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 91 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 254 254 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 163 221 48 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 117 115 102
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 230 219 116
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 171 127 206
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 130 144 243
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 124 130 215
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 209 208 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 170 54 248 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 128
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 128 128 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 255 64 64
0 64 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 238
232 236 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 3 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 163 221 48 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 2 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0 0
0 -1 -1 0 1 #"\0"
0 75 6 #"Arial\0"
0.0 11 92 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 150 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 143 143 228
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 215 94 244 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 192 192
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 215 94 244 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 127 127 127
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 241 46 100 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 144 179 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 143 143 228
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 241 46 100
227 231 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 48 48 48 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 253 137 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 134 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 55 119 230 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 173 0 161 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 80 80 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 201 24 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 31 170 170 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 128
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 15 240 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 128 128
255 128 128 -1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 25 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 26 #" Bitstream Vera Sans Mono\0"
0.0 19 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 26 #" Bitstream Vera Sans Mono\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 26 #" Bitstream Vera Sans Mono\0"
0.0 9 90 -1 90 -1 2 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 219 0 116 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 23 #"Lucida Sans Typewriter\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 10 91 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 39 114 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 228 156 156
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 64 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 179 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 92 152 163 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 140 73 0
0 0 -1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 183 198
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 62 139 187 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 179 88 198 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 128
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 66 155 77 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 164 87 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 158 41 39 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 3 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 128 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 0 81 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 66 4 117 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 11 166 154 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 5 166 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 0 151 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 89 0 89 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
198 121 249 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
128 128 192 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 192
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 15 #"OCR A Extended\0"
0.0 10 92 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 15 #"OCR A Extended\0"
0.0 11 92 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Arial\0"
0.0 10 92 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 15 #"OCR A Extended\0"
0.0 14 92 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 179 88 198 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 0 1 #"\0"
0 75 15 #"Lucida Console\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 14 #"IBM Plex Mono\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 245 245 245
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 64 0
0 0 -1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 11 92 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"NSimSun\0"
0.0 9 92 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 75 8 #"NSimSun\0"
0.0 10 92 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 178 178
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 197 110 195
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 224 33 29 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 79 151 215 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 79 151 215 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 42 161 174 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 45 149 116 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 164 91 173 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 205 92 92 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 104 104 104
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 220 117 47 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 242 36 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 163 29 177 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 40 222 240 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 103 177 29 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 177 149 29 0
0 0 -1 -1 0 1 #"\0"
0 75 15 #"OCR A Extended\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 64 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 192 192
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 62 139 187 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 179 88 198 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 128
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 63 170 69 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 122 123 204
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 0 31
31 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 228 158 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 241 46 100
227 231 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 255 0
0 0 0 0 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 0 0
0 -1 -1           0 12209 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 91
(6
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e aliens-attack-v5) (read-c"
) 0 0 4 3 262
(7
 #"ase-sensitive #t) (teachpacks ((lib \"image.rkt\" \"teachpack\" \"2h"
 #"tdp\") (lib \"universe.rkt\" \"teachpack\" \"2htdp\"))) (htdp-settin"
 #"gs #(#t constructor repeating-decimal #f #t none #f ((lib \"image.rk"
 #"t\" \"teachpack\" \"2htdp\") (lib \"universe.rkt\" \"teachpack\" \"2"
 #"htdp\")) #f)))"
) 0 0 4 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 7 #"require"
0 0 27 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 7 #"require"
0 0 27 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 30 #";; Video Game Image Dimensions"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 1 #" "
0 0 23 3 2 #"30"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 27 3 1 #" "
0 0 23 3 2 #"30"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"TICK-RATE"
0 0 27 3 1 #" "
0 0 23 3 3 #"1/4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; Color Constants"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"SHOT-COLOR"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"SHOT-COLOR2"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"skyblue"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"ALIEN-COLOR"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"black"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"ALIEN-COLOR2"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"WINDOW-COLOR"
0 0 27 3 3 #"   "
0 0 23 3 1 #"'"
0 0 14 3 8 #"darkgray"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"WINDOW2-COLOR"
0 0 27 3 3 #"   "
0 0 23 3 1 #"'"
0 0 14 3 5 #"white"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"FUSELAGE-COLOR"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"green"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 15 #"FUSELAGE2-COLOR"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"NACELLE-COLOR"
0 0 27 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 3 #"red"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"NACELLE2-COLOR"
0 0 27 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 5 #"brown"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 20 #";; E-SCENE Constants"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 27 3 1 #" "
0 0 23 3 2 #"20"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 18 #"MAX-CHARS-VERTICAL"
0 0 27 3 1 #" "
0 0 23 3 2 #"15"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-W"
0 0 27 3 2 #" ("
0 0 14 3 1 #"*"
0 0 27 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 27 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-H"
0 0 27 3 2 #" ("
0 0 14 3 1 #"*"
0 0 27 3 1 #" "
0 0 14 3 18 #"MAX-CHARS-VERTICAL"
0 0 27 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"E-SCENE2-COLOR"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 8 #"darkgray"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"E-SCENE2"
0 0 27 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-W"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-H"
0 0 27 3 1 #" "
0 0 14 3 14 #"E-SCENE2-COLOR"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 19 #";; Rocket Constants"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"ROCKET-Y"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 18 #"MAX-CHARS-VERTICAL"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 16 #";; Key Constants"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"RA-KEY"
0 0 27 3 1 #" "
0 0 20 3 7 #"\"right\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"LA-KEY"
0 0 27 3 1 #" "
0 0 20 3 6 #"\"left\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 5 #"O-KEY"
0 0 27 3 2 #"  "
0 0 20 3 3 #"\"m\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 17 #";; Shot Constants"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"no-shot"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 7 #"#| DATA"
0 0 18 3 1 #" "
0 0 18 3 34 #"DEFINITIONS AND FUNCTION TEMPLATES"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 52 #"    A character image (ci) is at most 30 x 30 pixels"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 64
#"    An image-x is an integer in [0..(sub1 MAX-CHARS-HORIZONTAL)]"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"    ;; image-x ... --> ..."
0 0 18 29 1 #"\n"
0 0 18 3 19 #"    ;; Purpose: ..."
0 0 18 29 1 #"\n"
0 0 18 3 39 #"    (define (f-on-image-x an-img-x ...)"
0 0 18 29 1 #"\n"
0 0 18 3 21 #"      ...an-img-x...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 33 #"    ;; Sample intances of image-x"
0 0 18 29 1 #"\n"
0 0 18 3 23 #"    (define IMG-X1 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"         ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 42 #"    ;; Sample expressions for f-on-image-x"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"    (define IMGX-VAL1 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"         ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 55 #"    ;; Tests using sample computations for f-on-image-x"
0 0 18 29 1 #"\n"
0 0 18 3 47 #"    (check-expect (f-on-image-x ...) IMGX-VAL1)"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"         ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 3 51 #";; Tests using sample computations for f-on-image-x"
0 0 18 29 1 #"\n"
0 0 18 3 41 #"    (check-expect (f-on-image-x ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 9 #"        A"
0 0 18 3 82
(8
 #"n image-x > MIN-IMG-X, image-x>min, is an integer in [(add1 MIN-IMG-"
 #"X)..MAX-IMG-X]"
) 0 0 18 29 1 #"\n"
0 0 18 3 5 #"     "
0 0 18 29 1 #"\n"
0 0 18 3 43 #"        ;; image-x>min \\dotss \\arrow \\dotss"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"        ;; Purpose: \\dotss"
0 0 18 29 1 #"\n"
0 0 18 3 50 #"        (define (f-on-image-x an-img-x>min \\dotss)"
0 0 18 29 1 #"\n"
0 0 18 3 32 #"          \\dotssan-img-x\\dotss) "
0 0 18 29 1 #"\n"
0 0 18 3 8 #"        "
0 0 18 29 1 #"\n"
0 0 18 3 41 #"        ;; Sample intances of image-x>min"
0 0 18 29 1 #"\n"
0 0 18 3 34 #"        (define IMG-X>MIN1 \\dotss)"
0 0 18 29 1 #"\n"
0 0 18 3 19 #"             \\dotss"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"        ;; Sam"
0 0 18 3 32 #"ple expressions for f-on-image-x"
0 0 18 29 1 #"\n"
0 0 18 3 37 #"        (define IMGX>MIN-VAL1 \\dotss)"
0 0 18 29 1 #"\n"
0 0 18 3 16 #"          \\dotss"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 59
#"        ;; Tests using sample computations for f-on-image-x"
0 0 18 29 1 #"\n"
0 0 18 3 62
#"        (check-expect (f-on-image-x>min \\dotss) IMGX>MIN-VAL1)"
0 0 18 29 1 #"\n"
0 0 18 3 19 #"             \\dotss"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 59
#"        ;; Tests using sample computations for f-on-image-x"
0 0 18 29 1 #"\n"
0 0 18 3 55 #"        (check-expect (f-on-image-x>min \\dotss) \\dotss)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 9 #"        A"
0 0 18 3 82
(9
 #"n image-x < MAX-IMG-X, image-x<max, is an integer in [MIN-IMG-X..(su"
 #"b1 MAX-IMG-X)]"
) 0 0 18 29 1 #"\n"
0 0 18 3 5 #"     "
0 0 18 29 1 #"\n"
0 0 18 3 43 #"        ;; image-x<max \\dotss \\arrow \\dotss"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"        ;; Purpose: \\dotss"
0 0 18 29 1 #"\n"
0 0 18 3 50 #"        (define (f-on-image-x an-img-x>min \\dotss)"
0 0 18 29 1 #"\n"
0 0 18 3 32 #"          \\dotssan-img-x\\dotss) "
0 0 18 29 1 #"\n"
0 0 18 3 8 #"        "
0 0 18 29 1 #"\n"
0 0 18 3 41 #"        ;; Sample intances of image-x<max"
0 0 18 29 1 #"\n"
0 0 18 3 34 #"        (define IMG-X<MAX1 \\dotss)"
0 0 18 29 1 #"\n"
0 0 18 3 19 #"             \\dotss"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"        ;; Sam"
0 0 18 3 36 #"ple expressions for f-on-image-x<max"
0 0 18 29 1 #"\n"
0 0 18 3 37 #"        (define IMGX<MAX-VAL1 \\dotss)"
0 0 18 29 1 #"\n"
0 0 18 3 16 #"          \\dotss"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 63
#"        ;; Tests using sample computations for f-on-image-x<max"
0 0 18 29 1 #"\n"
0 0 18 3 62
#"        (check-expect (f-on-image-x<max \\dotss) IMGX<MAX-VAL1)"
0 0 18 29 1 #"\n"
0 0 18 3 19 #"             \\dotss"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 63
#"        ;; Tests using sample computations for f-on-image-x<max"
0 0 18 29 1 #"\n"
0 0 18 3 55 #"        (check-expect (f-on-image-x<max \\dotss) \\dotss)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 61
#"    A image-y is an integer in [0..(sub1 MAX-CHARS-VERTICAL)]"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 3 22 #";; image-y ... --> ..."
0 0 18 29 1 #"\n"
0 0 18 3 19 #"    ;; Purpose: ..."
0 0 18 29 1 #"\n"
0 0 18 3 12 #"    (define "
0 0 18 3 1 #"("
0 0 18 3 12 #"f-on-image-y"
0 0 18 3 9 #" an-img-y"
0 0 18 3 5 #" ...)"
0 0 18 29 1 #"\n"
0 0 18 3 21 #"      ...an-img-y...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 33 #"    ;; Sample intances of image-y"
0 0 18 29 1 #"\n"
0 0 18 3 23 #"    (define IMG-Y1 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"         ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"    ;; Sample "
0 0 18 3 1 #"e"
0 0 18 3 27 #"xpressions for f-on-image-y"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"    (define IMGY-VAL1 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"         ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 55 #"    ;; Tests using sample computations for f-on-image-y"
0 0 18 29 1 #"\n"
0 0 18 3 31 #"    (check-expect (f-on-image-y"
0 0 18 3 16 #" ...) IMGY-VAL1)"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"         ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 3 28 #";; Tests using sample values"
0 0 18 3 17 #" for f-on-image-y"
0 0 18 29 1 #"\n"
0 0 18 3 31 #"    (check-expect (f-on-image-y"
0 0 18 3 10 #" ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 64
#"    A image-y<max is an integer in [MIN-IMG-Y..(sub1 MAX-IMG-Y)]"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 33 #"    ;; Sample intances of image-y"
0 0 18 29 1 #"\n"
0 0 18 3 22 #"    (define IMG-Y<MAX1"
0 0 18 3 5 #" ...)"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"         ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 3 26 #";; image-y<max ... --> ..."
0 0 18 29 1 #"\n"
0 0 18 3 19 #"    ;; Purpose: ..."
0 0 18 29 1 #"\n"
0 0 18 3 47 #"    (define (f-on-image-y<max an-img-y<max ...)"
0 0 18 29 1 #"\n"
0 0 18 3 25 #"      ...an-img-y<max...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"    ;; Sample expressions for f-on-image-y<max"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"    (define IMGY<MAX-VAL1 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"         ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 40 #"    ;; Tests using sample computations f"
0 0 18 3 1 #"o"
0 0 18 3 18 #"r f-on-image-y<max"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"    (check-expect (f-on-image-"
0 0 18 3 25 #"y<max ...) IMGY<MAX-VAL1)"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"         ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 3 28 #";; Tests using sample values"
0 0 18 3 21 #" for f-on-image-y<max"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"    (check-expect (f-on-image-y<max ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 18 #"    A image-y>min "
0 0 18 3 35 #"is an integer in [(add1 MIN-IMG-Y)."
0 0 18 3 2 #".M"
0 0 18 3 9 #"AX-IMG-Y]"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 3 33 #";; Sample intances of image-y>min"
0 0 18 29 1 #"\n"
0 0 18 3 27 #"    (define IMG-Y>MIN1 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"         ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 3 26 #";; image-y>min ... --> ..."
0 0 18 29 1 #"\n"
0 0 18 3 19 #"    ;; Purpose: ..."
0 0 18 29 1 #"\n"
0 0 18 3 47 #"    (define (f-on-image-y>min an-img-y>min ...)"
0 0 18 29 1 #"\n"
0 0 18 3 25 #"      ...an-img-y>min...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"    ;; Sample expressions for f-on-image-y>min"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"    (define IMGY>MIN-VAL1 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"         ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 40 #"    ;; Tests using sample computations f"
0 0 18 3 1 #"o"
0 0 18 3 18 #"r f-on-image-y>min"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"    (check-expect (f-on-image-"
0 0 18 3 18 #"y>min IMG-Y>MIN1 ."
0 0 18 3 18 #"..) IMGY>MIN-VAL1)"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"         ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 3 28 #";; Tests using sample values"
0 0 18 3 21 #" for f-on-image-y>min"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"    (check-expect (f-on-image-y>min ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 74
(10
 #"    A scene is a (MAX-CHARS-HORIZONTAL * IMAGE-WIDTH) x (MAX-CHARS-V"
 #"ERTICA"
) 0 0 18 3 1 #"L"
0 0 18 3 22 #" * IMAGE-HEIGHT) image"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 55 #"    A pixel-x coordinate (pix-x-coord) is an integer in"
0 0 18 29 1 #"\n"
0 0 18 3 47 #"    [0..(MAX-CHARS-HORIZONTAL * IMAGE-WIDTH)-1]"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 3 51 #"A pixel-y coordinate (pix-y-coord) is an integer in"
0 0 18 29 1 #"\n"
0 0 18 3 8 #"    [0.."
0 0 18 3 18 #"(MAX-CHARS-VERTICA"
0 0 18 3 20 #"L * IMAGE-HEIGHT)-1]"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"    A rocket is an image-x"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 25 #"    ;; rocket ... --> ..."
0 0 18 29 1 #"\n"
0 0 18 3 19 #"    ;; Purpose: ..."
0 0 18 29 1 #"\n"
0 0 18 3 38 #"    (define (f-on-rocket a-rocket ...)"
0 0 18 29 1 #"\n"
0 0 18 3 42 #"       ...(f-on-image-x a-rocket ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 41 #"    ;; Sample expressions for f-on-rocket"
0 0 18 29 1 #"\n"
0 0 18 3 50 #"    (define ROCKET-VAL (f-on-rocket a-rocket ...))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 54 #"    ;; Tests using sample computations for f-on-rocket"
0 0 18 29 1 #"\n"
0 0 18 3 47 #"    (check-expect (f-on-rocket ...) ROCKET-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"         ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 48 #"    ;; Tests using sample values for f-on-rocket"
0 0 18 29 1 #"\n"
0 0 18 3 40 #"    (check-expect (f-on-rocket ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"         ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 21 #"     A key is either:"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"       1. \"right\""
0 0 18 29 1 #"\n"
0 0 18 3 16 #"       2. \"left\""
0 0 18 29 1 #"\n"
0 0 18 3 13 #"       3. \" \""
0 0 18 29 1 #"\n"
0 0 18 3 31 #"       4. not \"right\" or \"left\""
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 31 #"     ;; Sample instances of key"
0 0 18 29 1 #"\n"
0 0 18 3 22 #"     (define KEY1 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 22 #"     (define KEY2 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 22 #"     (define KEY3 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 22 #"     (define KEY4 ...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 37 #"     ;; key \\(\\ldots\\) --> \\(\\ldots\\)"
0 0 18 29 1 #"\n"
0 0 18 3 27 #"     ;; Purpose: \\(\\ldots\\)"
0 0 18 29 1 #"\n"
0 0 18 3 40 #"     (define (f-on-key a-key \\(\\ldots\\))"
0 0 18 29 1 #"\n"
0 0 18 3 47 #"       (cond [(key=? a-key \"right\") \\(\\ldots\\)]"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"             [(key=? a-key \"left\") \\(\\ldots\\)]"
0 0 18 29 1 #"\n"
0 0 18 3 43 #"             [(key=? a-key \" \") \\(\\ldots\\)]"
0 0 18 29 1 #"\n"
0 0 18 3 32 #"             [else \\(\\ldots\\)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 39 #"     ;; Sample expressions for f-on-key"
0 0 18 29 1 #"\n"
0 0 18 3 22 #"     (define KEY1-VAL "
0 0 18 3 27 #"\\(\\ldots\\) KEY1 \\(\\ldots\\))"
0 0 18 29 1 #"\n"
0 0 18 3 49 #"     (define KEY2-VAL \\(\\ldots\\) KEY2 \\(\\ldots\\))"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"     (define KEY3-VAL \\(\\ldots\\) KEY3 \\(\\ldots"
0 0 18 3 1 #"\\"
0 0 18 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 3 49 #"     (define KEY4-VAL \\(\\ldots\\) KEY4 \\(\\ldots\\))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 52 #"     ;; Tests using sample computations for f-on-key"
0 0 18 29 1 #"\n"
0 0 18 3 55
#"     (check-expect (f-on-key KEY1 \\(\\ldots\\)) KEY1-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 55
#"     (check-expect (f-on-key KEY2 \\(\\ldots\\)) KEY2-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 55
#"     (check-expect (f-on-key KEY3 \\(\\ldots\\)) KEY3-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 55
#"     (check-expect (f-on-key KEY4 \\(\\ldots\\)) KEY4-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 20 #"          \\(\\ldots\\)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"     ;; Tests using sample values for f-on-key"
0 0 18 29 1 #"\n"
0 0 18 3 52
#"     (check-expect (f-on-key \\(\\ldots\\)) \\(\\ldots\\))"
0 0 18 29 1 #"\n"
0 0 18 3 20 #"          \\(\\ldots\\)"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 51 #"    An alien is a posn: (make-posn image-x image-y)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 24 #"    ;; alien ... --> ..."
0 0 18 29 1 #"\n"
0 0 18 3 19 #"    ;; Purpose: ..."
0 0 18 29 1 #"\n"
0 0 18 3 37 #"    (define (f-on-alien an-alien ...)"
0 0 18 29 1 #"\n"
0 0 18 3 43 #"      ...(f-on-image-x (posn-x an-alien)..."
0 0 18 29 1 #"\n"
0 0 18 3 44 #"      ...(f-on-image-y (posn-y an-alien)...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 23 #"    ;; Sample instances"
0 0 18 29 1 #"\n"
0 0 18 3 39 #"    (define ALIEN1 (make-posn ... ...))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 40 #"    ;; Sample expressions for f-on-alien"
0 0 18 29 1 #"\n"
0 0 18 3 27 #"    (define ALIEN-VAL1 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 10 #"       ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 53 #"    ;; Tests using sample computations for f-on-alien"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"    (check-expect (f-on-alien ...) ALIEN-VAL1)"
0 0 18 29 1 #"\n"
0 0 18 3 10 #"       ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 47 #"    ;; Tests using sample values for f-on-alien"
0 0 18 29 1 #"\n"
0 0 18 3 39 #"    (check-expect (f-on-alien ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 3 10 #"       ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 32 #"    A direction (dir) is either:"
0 0 18 29 1 #"\n"
0 0 18 3 15 #"      1. 'right"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"      2. 'left"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"      3. 'down"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 22 #"    ;; dir ... --> ..."
0 0 18 29 1 #"\n"
0 0 18 3 19 #"    ;; Purpose: ..."
0 0 18 29 1 #"\n"
0 0 18 3 32 #"    (define (f-on-dir a-dir ...)"
0 0 18 29 1 #"\n"
0 0 18 3 37 #"      (cond  [(eq? a-dir 'right) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 36 #"             [(eq? a-dir 'left) ...]"
0 0 18 29 1 #"\n"
0 0 18 3 25 #"             [else ...]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"    ;; Sample instances of dir"
0 0 18 29 1 #"\n"
0 0 18 3 21 #"    (define DIR1 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 21 #"    (define DIR2 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 21 #"    (define DIR3 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 38 #"    ;; Sample expressions for f-on-dir"
0 0 18 29 1 #"\n"
0 0 18 3 25 #"    (define DIR-VAL1 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 25 #"    (define DIR-VAL2 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 25 #"    (define DIR-VAL3 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 10 #"       ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 51 #"    ;; Tests using sample computations for f-on-dir"
0 0 18 29 1 #"\n"
0 0 18 3 42 #"    (check-expect (f-on-dir ...) DIR-VAL1)"
0 0 18 29 1 #"\n"
0 0 18 3 42 #"    (check-expect (f-on-dir ...) DIR-VAL2)"
0 0 18 29 1 #"\n"
0 0 18 3 42 #"    (check-expect (f-on-dir ...) DIR-VAL3)"
0 0 18 29 1 #"\n"
0 0 18 3 10 #"       ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"    ;; Tests using sample values for f-on-dir"
0 0 18 29 1 #"\n"
0 0 18 3 37 #"    (check-expect (f-on-dir ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 3 10 #"       ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 22 #"     A shot is either:"
0 0 18 29 1 #"\n"
0 0 18 3 16 #"      1. NO-SHOT"
0 0 18 29 1 #"\n"
0 0 18 3 48 #"      2. A structure (make-posn image-x image-y)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 32 #"     ;; Sample instances of shot"
0 0 18 29 1 #"\n"
0 0 18 3 23 #"     (define SHOT1 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 24 #"     (define SHOT2 ...) "
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 24 #"     ;; shot ... --> ..."
0 0 18 29 1 #"\n"
0 0 18 3 20 #"     ;; Purpose: ..."
0 0 18 29 1 #"\n"
0 0 18 3 35 #"     (define (f-on-shot a-shot ...)"
0 0 18 29 1 #"\n"
0 0 18 3 31 #"       (if (eq? a-shot NO-SHOT)"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"           ..."
0 0 18 29 1 #"\n"
0 0 18 3 83
(11
 #"           ...(f-on-image-x (posn-x a-shot))...(f-on-image-y (posn-y"
 #" a-shot))...)))"
) 0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 29 1 #"\n"
0 0 18 3 40 #"     ;; Sample expressions for f-on-shot"
0 0 18 29 1 #"\n"
0 0 18 3 27 #"     (define SHOT1-VAL ...)"
0 0 18 29 1 #"\n"
0 0 18 3 27 #"     (define SHOT2-VAL ...)"
0 0 18 29 1 #"\n"
0 0 18 3 11 #"        ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 53 #"     ;; Tests using sample computations for f-on-shot"
0 0 18 29 1 #"\n"
0 0 18 3 51 #"     (check-expect (f-on-shot SHOT1 ...) SHOT1-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 51 #"     (check-expect (f-on-shot SHOT2 ...) SHOT2-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 11 #"        ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 47 #"     ;; Tests using sample values for f-on-shot"
0 0 18 29 1 #"\n"
0 0 18 3 39 #"     (check-expect (f-on-shot ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 3 11 #"        ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 38 #"     A list of aliens (loa) is  either"
0 0 18 29 1 #"\n"
0 0 18 3 13 #"       1. '()"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"       2. (cons alien loa)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 5 #"     "
0 0 18 3 26 #";; Sample instances of loa"
0 0 18 29 1 #"\n"
0 0 18 3 22 #"     (define LOA1 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 23 #"     (define LOA2 ...) "
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 23 #"     ;; loa ... --> ..."
0 0 18 29 1 #"\n"
0 0 18 3 20 #"     ;; Purpose: ..."
0 0 18 29 1 #"\n"
0 0 18 3 33 #"     (define (f-on-loa a-loa ...)"
0 0 18 29 1 #"\n"
0 0 18 3 25 #"       (if (empty? a-loa)"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"           ..."
0 0 18 29 1 #"\n"
0 0 18 3 72
(12
 #"           ...(f-on-alien (first a-loa))...(f-on-loa (rest a-loa)).."
 #".)))"
) 0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 29 1 #"\n"
0 0 18 3 39 #"     ;; Sample expressions for f-on-loa"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"     (define LOA1-VAL ...)"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"     (define LOA2-VAL ...)"
0 0 18 29 1 #"\n"
0 0 18 3 11 #"        ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 52 #"     ;; Tests using sample computations for f-on-loa"
0 0 18 29 1 #"\n"
0 0 18 3 48 #"     (check-expect (f-on-loa LOA1 ...) LOA1-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 48 #"     (check-expect (f-on-loa LOA2 ...) LOA2-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 11 #"        ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"     ;; Tests using sample values for f-on-loa"
0 0 18 29 1 #"\n"
0 0 18 3 38 #"     (check-expect (f-on-loa ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 3 11 #"        ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 37 #"     A list of shots (los) is  either"
0 0 18 29 1 #"\n"
0 0 18 3 13 #"       1. '()"
0 0 18 29 1 #"\n"
0 0 18 3 25 #"       2. (cons shot loa)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 31 #"     ;; Sample instances of los"
0 0 18 29 1 #"\n"
0 0 18 3 22 #"     (define LOS1 ...)"
0 0 18 29 1 #"\n"
0 0 18 3 23 #"     (define LOS2 ...) "
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 23 #"     ;; los ... --> ..."
0 0 18 29 1 #"\n"
0 0 18 3 20 #"     ;; Purpose: ..."
0 0 18 29 1 #"\n"
0 0 18 3 33 #"     (define (f-on-los a-los ...)"
0 0 18 29 1 #"\n"
0 0 18 3 25 #"       (if (empty? a-los)"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"           ..."
0 0 18 29 1 #"\n"
0 0 18 3 71
(13
 #"           ...(f-on-shot (first a-los))...(f-on-los (rest a-los))..."
 #")))"
) 0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 29 1 #"\n"
0 0 18 3 39 #"     ;; Sample expressions for f-on-los"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"     (define LOS1-VAL ...)"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"     (define LOS2-VAL ...)"
0 0 18 29 1 #"\n"
0 0 18 3 11 #"        ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 52 #"     ;; Tests using sample computations for f-on-los"
0 0 18 29 1 #"\n"
0 0 18 3 48 #"     (check-expect (f-on-los LOS1 ...) LOS1-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 48 #"     (check-expect (f-on-los LOS2 ...) LOS2-VAL)"
0 0 18 29 1 #"\n"
0 0 18 3 11 #"        ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"     ;; Tests using sample values for f-on-los"
0 0 18 29 1 #"\n"
0 0 18 3 38 #"     (check-expect (f-on-los ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 3 11 #"        ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 60
#"    A world is a structure: (make-world rocket loa dir los)."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 24 #"    ;; world ... --> ..."
0 0 18 29 1 #"\n"
0 0 18 3 19 #"    ;; Purpose: ..."
0 0 18 29 1 #"\n"
0 0 18 3 36 #"    (define (f-on-world a-world ...)"
0 0 18 29 1 #"\n"
0 0 18 3 50 #"       ...(f-on-rocket (world-rocket a-world) ...)"
0 0 18 29 1 #"\n"
0 0 18 3 51 #"       ...(f-on-loa    (world-aliens  a-world) ...)"
0 0 18 29 1 #"\n"
0 0 18 3 50 #"       ...(f-on-dir    (world-dir a-world)    ...)"
0 0 18 29 1 #"\n"
0 0 18 3 52 #"       ...(f-on-los    (world-shots a-world)   ...))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 33 #"    ;; Sample instances for world"
0 0 18 29 1 #"\n"
0 0 18 3 36 #"    (define WORLD1 (make-world ...))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"    ;; Sample expressions for "
0 0 18 3 10 #"f-on-world"
0 0 18 29 1 #"\n"
0 0 18 3 27 #"    (define WORLD-VAL1 ...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 43 #"    ;; Tests using sample computations for "
0 0 18 3 10 #"f-on-world"
0 0 18 29 1 #"\n"
0 0 18 3 19 #"    (check-expect ("
0 0 18 3 34 #"f-on-world WORLD1 ...) WORLD-VAL1)"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"         ..."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 47 #"    ;; Tests using sample values for f-on-world"
0 0 18 29 1 #"\n"
0 0 18 3 39 #"    (check-expect (f-on-world ...) ...)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 2 #"|#"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 24 #";; Structure Definitions"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 13 #"define-struct"
0 0 27 3 1 #" "
0 0 14 3 5 #"world"
0 0 27 3 2 #" ("
0 0 14 3 6 #"rocket"
0 0 27 3 1 #" "
0 0 14 3 6 #"aliens"
0 0 27 3 1 #" "
0 0 14 3 3 #"dir"
0 0 27 3 1 #" "
0 0 14 3 5 #"shots"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 19 #";; SAMPLE INSTANCES"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"AN-IMG-X"
0 0 27 3 2 #" ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"AN-IMG-Y"
0 0 27 3 2 #" ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 18 #"MAX-CHARS-VERTICAL"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-Y"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 18 #"MAX-CHARS-VERTICAL"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"IMG-Y>MIN1"
0 0 27 3 1 #" "
0 0 14 3 8 #"AN-IMG-Y"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"IMG-Y>MIN2"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ROCKET"
0 0 27 3 2 #"  "
0 0 14 3 8 #"AN-IMG-X"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 27 3 1 #" "
0 0 23 3 2 #"15"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 26 #";; Sample instances of key"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"KEY1"
0 0 27 3 1 #" "
0 0 20 3 7 #"\"right\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"KEY2"
0 0 27 3 1 #" "
0 0 20 3 6 #"\"left\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"KEY3"
0 0 27 3 1 #" "
0 0 20 3 3 #"\"m\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"KEY4"
0 0 27 3 1 #" "
0 0 20 3 3 #"\" \""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 8 #"AN-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"ALIEN3"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 15 #"LEFT-EDGE-ALIEN"
0 0 27 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 16 #"RIGHT-EDGE-ALIEN"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"ALIEN-8-0"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-DIR"
0 0 27 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"DIR2"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"DIR3"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"INIT-SHOT"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT2"
0 0 27 3 6 #"     ("
0 0 14 3 9 #"make-posn"
0 0 27 3 2 #" ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #") ("
0 0 14 3 1 #"/"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 18 #"MAX-CHARS-VERTICAL"
0 0 27 3 2 #") "
0 0 23 3 1 #"2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT3"
0 0 27 3 6 #"     ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT4"
0 0 27 3 6 #"     ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"14"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-Y"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 3 #"())"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"12"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"13"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 24 #"                       ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"12"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"13"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 24 #"                       ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"12"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"13"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"EDGE-LOA"
0 0 27 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 9 #"ALIEN-8-0"
0 0 27 3 2 #"  "
0 0 14 3 15 #"LEFT-EDGE-ALIEN"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"EDGE-LOA2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 2 #") "
0 0 14 3 16 #"RIGHT-EDGE-ALIEN"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 17 #"EARTH-REACHED-LOA"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOA3"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOA4"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"     "
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 3 #"())"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOS2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ROCKET"
0 0 27 3 2 #"  "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"  "
0 0 14 3 8 #"INIT-DIR"
0 0 27 3 2 #"  "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 27 3 2 #") "
0 0 14 3 4 #"DIR2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"WORLD3"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #")) "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 1 #"#"
0 0 18 3 1 #"|"
0 0 18 29 1 #"\n"
0 0 18 3 3 #"The"
0 0 18 3 2 #" ("
0 0 18 3 1 #"0"
0 0 18 3 1 #" "
0 0 18 3 1 #"6"
0 0 18 3 2 #") "
0 0 18 3 5 #"alien"
0 0 18 3 1 #" "
0 0 18 3 5 #"moves"
0 0 18 3 1 #" "
0 0 18 3 4 #"down"
0 0 18 3 1 #" "
0 0 18 3 2 #"to"
0 0 18 3 2 #" ("
0 0 18 3 1 #"0"
0 0 18 3 1 #" "
0 0 18 3 1 #"7"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 32 #"The (0 8) shot moves up to (0 7)"
0 0 18 29 1 #"\n"
0 0 18 3 18 #"new-dir-after-tick"
0 0 18 3 11 #" is called:"
0 0 18 29 1 #"\n"
0 0 18 3 43 #"  removing the hit (0 7) alien from the loa"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"  dir = down"
0 0 18 29 1 #"\n"
0 0 18 3 55 #"Since, there is no alien at left edge dir becomes left."
0 0 18 29 1 #"\n"
0 0 18 3 61
#"  (testing if alien at left edge is false -> new dir is left)"
0 0 18 29 1 #"\n"
0 0 18 3 58
#"Aliens continue to move left as if none reached left edge."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 3 #"The"
0 0 18 3 12 #" (MAX-IMG-X "
0 0 18 3 1 #"6"
0 0 18 3 2 #") "
0 0 18 3 5 #"alien"
0 0 18 3 1 #" "
0 0 18 3 5 #"moves"
0 0 18 3 1 #" "
0 0 18 3 4 #"down"
0 0 18 3 1 #" "
0 0 18 3 2 #"to"
0 0 18 3 12 #" (MAX-IMG-X "
0 0 18 3 1 #"7"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 48 #"The (MAX-IMG-X 8) shot moves up to (MAX-IMG-X 7)"
0 0 18 29 1 #"\n"
0 0 18 3 18 #"new-dir-after-tick"
0 0 18 3 11 #" is called:"
0 0 18 29 1 #"\n"
0 0 18 3 51 #"  removing the hit (MAX-IMG-X 7) alien from the loa"
0 0 18 29 1 #"\n"
0 0 18 3 12 #"  dir = down"
0 0 18 29 1 #"\n"
0 0 18 3 55 #"Since, there is no alien at left edge dir becomes left."
0 0 18 29 1 #"\n"
0 0 18 3 61
#"  (testing if alien at left edge is false -> new dir is left)"
0 0 18 29 1 #"\n"
0 0 18 3 54 #"Aliens start to move left as if one reached left edge."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 72
(14
 #"Summary: On the left side: down to left ignoring alien that reached "
 #"left"
) 0 0 18 29 1 #"\n"
0 0 18 3 77
(15
 #"         On the right side: down to left not ignoring alien that rea"
 #"ched left"
) 0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 65
#"*** Solves bug by not removing hit aliens to compute new dir. ***"
0 0 18 29 1 #"\n"
0 0 18 3 2 #"|#"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"BUG-WORLD"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 29 1 #"\n"
0 0 27 3 19 #"                   "
0 0 23 3 2 #"10"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 4 #"list"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 19 #"                   "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 3 #"SW2"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 29 1 #"\n"
0 0 27 3 25 #"                        ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 24 #"                        "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 29 1 #"\n"
0 0 27 3 25 #"                        ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 20 #";; image --> Boolean"
0 0 27 29 1 #"\n"
0 0 18 3 51 #";; Purpose: To determine if the given image is a ci"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 1 #" "
0 0 14 3 6 #"an-img"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 2 #"<="
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 1 #" "
0 0 14 3 6 #"an-img"
0 0 27 3 3 #")  "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 2 #"<="
0 0 27 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 27 3 1 #" "
0 0 14 3 6 #"an-img"
0 0 27 3 2 #") "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 29 #";; Sample expressions for ci?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 5 #"IS-CI"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 2 #"<="
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"red"
0 0 27 3 3 #")) "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                   ("
0 0 14 3 2 #"<="
0 0 27 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 27 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"red"
0 0 27 3 3 #")) "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"NOT-CI"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 2 #"<="
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 3 #"  ("
0 0 14 3 6 #"square"
0 0 27 3 1 #" "
0 0 23 3 2 #"40"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 27 3 3 #")) "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 2 #"<="
0 0 27 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 27 3 2 #" ("
0 0 14 3 6 #"square"
0 0 27 3 1 #" "
0 0 23 3 2 #"40"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 27 3 3 #")) "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"NOT-CI2"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 2 #"<="
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 27 3 1 #" "
0 0 23 3 2 #"20"
0 0 27 3 1 #" "
0 0 23 3 2 #"40"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 27 3 3 #")) "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 2 #"<="
0 0 27 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 27 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 27 3 1 #" "
0 0 23 3 2 #"20"
0 0 27 3 1 #" "
0 0 23 3 2 #"40"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 27 3 3 #")) "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 42 #";; Tests using sample computations for ci?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"red"
0 0 27 3 4 #"))  "
0 0 14 3 5 #"IS-CI"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 2 #" ("
0 0 14 3 6 #"square"
0 0 27 3 1 #" "
0 0 23 3 2 #"40"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 27 3 3 #")) "
0 0 14 3 6 #"NOT-CI"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 27 3 1 #" "
0 0 23 3 2 #"20"
0 0 27 3 1 #" "
0 0 23 3 2 #"40"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 27 3 3 #")) "
0 0 14 3 7 #"NOT-CI2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 36 #";; Tests using sample values for ci?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 2 #"22"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"green"
0 0 27 3 4 #"))  "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 2 #"33"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 27 3 3 #")) "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 15 #";; ALIEN IMAGES"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; color --> image"
0 0 27 29 1 #"\n"
0 0 18 3 52 #";; Purpose: Create an alien image of the given color"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 12 #"mk-alien-img"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 27 3 2 #" ("
0 0 14 3 4 #"text"
0 0 27 3 1 #" "
0 0 20 3 3 #"\"X\""
0 0 27 3 1 #" "
0 0 23 3 2 #"25"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 27 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 27 3 2 #" ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 38 #";; Sample expressions for mk-alien-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"ALIEN-IMG"
0 0 27 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 27 3 2 #" ("
0 0 14 3 4 #"text"
0 0 27 3 1 #" "
0 0 20 3 3 #"\"X\""
0 0 27 3 1 #" "
0 0 23 3 2 #"25"
0 0 27 3 1 #" "
0 0 14 3 11 #"ALIEN-COLOR"
0 0 27 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 27 3 2 #" ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 14 3 11 #"ALIEN-COLOR"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"ALIEN-IMG2"
0 0 27 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 27 3 2 #" ("
0 0 14 3 4 #"text"
0 0 27 3 1 #" "
0 0 20 3 3 #"\"X\""
0 0 27 3 1 #" "
0 0 23 3 2 #"25"
0 0 27 3 1 #" "
0 0 14 3 12 #"ALIEN-COLOR2"
0 0 27 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 27 3 2 #" ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 14 3 12 #"ALIEN-COLOR2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 51 #";; Tests using sample computations for mk-alien-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"mk-alien-img"
0 0 27 3 1 #" "
0 0 14 3 11 #"ALIEN-COLOR"
0 0 27 3 2 #") "
0 0 14 3 9 #"ALIEN-IMG"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"mk-alien-img"
0 0 27 3 1 #" "
0 0 14 3 12 #"ALIEN-COLOR2"
0 0 27 3 2 #") "
0 0 14 3 10 #"ALIEN-IMG2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 1 #" "
0 0 14 3 9 #"ALIEN-IMG"
0 0 27 3 2 #") "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 1 #" "
0 0 14 3 10 #"ALIEN-IMG2"
0 0 27 3 2 #") "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 45 #";; Tests using sample values for mk-alien-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"mk-alien-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 27 3 6 #")     "
0 6           4 23 261
(16
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 8.5 14.0"
 #" #(struct:text \"X\" 0 1 \"purple\" 25 #f swiss normal normal #f))) "
 #"#(struct:translate 1.0 6.5 #(struct:translate 15/2 15/2 #(struct:ell"
 #"ipse 15 15 0 255 \"purple\")))) #(struct:bb 17.0 28.0 23.0) #f)"
) 0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"mk-alien-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 10 #"lightbrown"
0 0 27 3 2 #") "
0 6           4 23 269
(17
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 8.5 14.0"
 #" #(struct:text \"X\" 0 1 \"lightbrown\" 25 #f swiss normal normal #f"
 #"))) #(struct:translate 1.0 6.5 #(struct:translate 15/2 15/2 #(struct"
 #":ellipse 15 15 0 255 \"lightbrown\")))) #(struct:bb 17.0 28.0 23.0) "
 #"#f)"
) 0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 2 #" ("
0 0 14 3 12 #"mk-alien-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 27 3 7 #"))     "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 2 #" ("
0 0 14 3 12 #"mk-alien-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 10 #"lightbrown"
0 0 27 3 3 #")) "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 14 #";; SHOT IMAGES"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; color --> image"
0 0 27 29 1 #"\n"
0 0 18 3 48 #";; Purpose: Create shot image of the given color"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 11 #"mk-shot-img"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 11 #"radial-star"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 2 #" ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 3 #") ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 2 #"  "
0 0 14 3 7 #"a-color"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 37 #";; Sample expressions for mk-shot-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"SHOT-IMG"
0 0 27 3 2 #" ("
0 0 14 3 11 #"radial-star"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 14 3 10 #"SHOT-COLOR"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"SHOT-IMG2"
0 0 27 3 2 #" ("
0 0 14 3 11 #"radial-star"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                               ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                               ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                               "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                               "
0 0 14 3 11 #"SHOT-COLOR2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 50 #";; Tests using sample computations for mk-shot-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"mk-shot-img"
0 0 27 3 1 #" "
0 0 14 3 10 #"SHOT-COLOR"
0 0 27 3 2 #") "
0 0 14 3 8 #"SHOT-IMG"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"mk-shot-img"
0 0 27 3 1 #" "
0 0 14 3 11 #"SHOT-COLOR2"
0 0 27 3 2 #") "
0 0 14 3 9 #"SHOT-IMG2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 1 #" "
0 0 14 3 8 #"SHOT-IMG"
0 0 27 3 2 #") "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 1 #" "
0 0 14 3 9 #"SHOT-IMG2"
0 0 27 3 2 #") "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 44 #";; Tests using sample values for mk-shot-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"mk-shot-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"red"
0 0 27 3 2 #") "
0 6           4 23 1152
(18
 #"(#(struct:translate -1.0656865448419843 -1.0656865448419879 #(struct"
 #":polygon (#(struct:pulled-point 0 0 15.944543648263005 12.0554563517"
 #"36995 0 0) #(struct:pulled-point 0 0 19.357568053111258 1.0656865448"
 #"419879 0 0) #(struct:pulled-point 0 0 14.0 11.25 0 0) #(struct:pulle"
 #"d-point 0 0 8.642431946888735 1.0656865448419879 0 0) #(struct:pulle"
 #"d-point 0 0 12.055456351736995 12.055456351736995 0 0) #(struct:pull"
 #"ed-point 0 0 1.0656865448419843 8.642431946888745 0 0) #(struct:pull"
 #"ed-point 0 0 11.25 14.0 0 0) #(struct:pulled-point 0 0 1.06568654484"
 #"1986 19.357568053111258 0 0) #(struct:pulled-point 0 0 12.0554563517"
 #"36995 15.944543648263005 0 0) #(struct:pulled-point 0 0 8.6424319468"
 #"88744 26.934313455158012 0 0) #(struct:pulled-point 0 0 14.0 16.75 0"
 #" 0) #(struct:pulled-point 0 0 19.357568053111258 26.934313455158012 "
 #"0 0) #(struct:pulled-point 0 0 15.944543648263005 15.944543648263005"
 #" 0 0) #(struct:pulled-point 0 0 26.934313455158012 19.35756805311125"
 #"8 0 0) #(struct:pulled-point 0 0 67/4 14 0 0) #(struct:pulled-point "
 #"0 0 26.934313455158012 8.642431946888742 0 0)) 255 \"red\")) #(struc"
 #"t:bb 25.868626910316028 25.868626910316024 25.868626910316024) #f)"
) 0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"mk-shot-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"brown"
0 0 27 3 2 #") "
0 6           4 23 1154
(19
 #"(#(struct:translate -1.0656865448419843 -1.0656865448419879 #(struct"
 #":polygon (#(struct:pulled-point 0 0 15.944543648263005 12.0554563517"
 #"36995 0 0) #(struct:pulled-point 0 0 19.357568053111258 1.0656865448"
 #"419879 0 0) #(struct:pulled-point 0 0 14.0 11.25 0 0) #(struct:pulle"
 #"d-point 0 0 8.642431946888735 1.0656865448419879 0 0) #(struct:pulle"
 #"d-point 0 0 12.055456351736995 12.055456351736995 0 0) #(struct:pull"
 #"ed-point 0 0 1.0656865448419843 8.642431946888745 0 0) #(struct:pull"
 #"ed-point 0 0 11.25 14.0 0 0) #(struct:pulled-point 0 0 1.06568654484"
 #"1986 19.357568053111258 0 0) #(struct:pulled-point 0 0 12.0554563517"
 #"36995 15.944543648263005 0 0) #(struct:pulled-point 0 0 8.6424319468"
 #"88744 26.934313455158012 0 0) #(struct:pulled-point 0 0 14.0 16.75 0"
 #" 0) #(struct:pulled-point 0 0 19.357568053111258 26.934313455158012 "
 #"0 0) #(struct:pulled-point 0 0 15.944543648263005 15.944543648263005"
 #" 0 0) #(struct:pulled-point 0 0 26.934313455158012 19.35756805311125"
 #"8 0 0) #(struct:pulled-point 0 0 67/4 14 0 0) #(struct:pulled-point "
 #"0 0 26.934313455158012 8.642431946888742 0 0)) 255 \"brown\")) #(str"
 #"uct:bb 25.868626910316028 25.868626910316024 25.868626910316024) #f)"
) 0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 2 #" ("
0 0 14 3 11 #"mk-shot-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"red"
0 0 27 3 3 #")) "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 2 #" ("
0 0 14 3 11 #"mk-shot-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"brown"
0 0 27 3 3 #")) "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 16 #";; ROCKET IMAGES"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; color --> image"
0 0 27 29 1 #"\n"
0 0 18 3 56 #";; Purpose: Create the fuselage image of the given color"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 2 #"  "
0 0 18 3 59
#";(ellipse IMAGE-WIDTH (* 2/3 IMAGE-HEIGHT) 'solid a-color))"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 6 #"circle"
0 0 27 3 2 #" ("
0 0 14 3 1 #"*"
0 0 27 3 1 #" "
0 0 23 3 3 #"1/3"
0 0 27 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 41 #";; Sample expressions for mk-fuselage-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"FUSELAGE"
0 0 27 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 27 3 2 #" ("
0 0 14 3 1 #"*"
0 0 27 3 1 #" "
0 0 23 3 3 #"1/3"
0 0 27 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 25 #"                         "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 29 1 #"\n"
0 0 27 3 25 #"                         "
0 0 14 3 14 #"FUSELAGE-COLOR"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"FUSELAGE2"
0 0 27 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 27 3 2 #" ("
0 0 14 3 1 #"*"
0 0 27 3 1 #" "
0 0 23 3 3 #"1/3"
0 0 27 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 14 3 15 #"FUSELAGE2-COLOR"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 53 #";; Test for mk-fuselage-img using sample computations"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 27 3 1 #" "
0 0 14 3 14 #"FUSELAGE-COLOR"
0 0 27 3 2 #") "
0 0 14 3 8 #"FUSELAGE"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 27 3 1 #" "
0 0 14 3 15 #"FUSELAGE2-COLOR"
0 0 27 3 2 #") "
0 0 14 3 9 #"FUSELAGE2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 47 #";; Test for mk-fuselage-img using sample values"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"olive"
0 0 27 3 2 #") "
0 6           4 23 90
(20
 #"(#(struct:translate 10 10 #(struct:ellipse 20 20 0 255 \"olive\")) #"
 #"(struct:bb 20 20 20) #f)"
) 0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 9 #"lightgray"
0 0 27 3 2 #") "
0 6           4 23 94
(21
 #"(#(struct:translate 10 10 #(struct:ellipse 20 20 0 255 \"lightgray\""
 #")) #(struct:bb 20 20 20) #f)"
) 0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"FUSELAGE-W"
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 1 #" "
0 0 14 3 8 #"FUSELAGE"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"FUSELAGE-H"
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 1 #" "
0 0 14 3 8 #"FUSELAGE"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"FUSELAGE2-W"
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 1 #" "
0 0 14 3 9 #"FUSELAGE2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"FUSELAGE2-H"
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 1 #" "
0 0 14 3 9 #"FUSELAGE2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; color --> image"
0 0 27 29 1 #"\n"
0 0 18 3 38 #";; Purpose: Create rocket window image"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 7 #"ellipse"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 39 #";; Sample expressions for mk-window-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"WINDOW"
0 0 27 3 3 #"  ("
0 0 14 3 7 #"ellipse"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 14 3 12 #"WINDOW-COLOR"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"WINDOW2"
0 0 27 3 3 #"  ("
0 0 14 3 7 #"ellipse"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 14 3 13 #"WINDOW2-COLOR"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 52 #";; Tests using sample computations for mk-window-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 27 3 1 #" "
0 0 14 3 12 #"WINDOW-COLOR"
0 0 27 3 2 #") "
0 0 14 3 6 #"WINDOW"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 27 3 1 #" "
0 0 14 3 13 #"WINDOW2-COLOR"
0 0 27 3 2 #") "
0 0 14 3 7 #"WINDOW2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 46 #";; Tests using sample values for mk-window-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 8 #"darkblue"
0 0 27 3 2 #") "
0 6           4 23 91
(22
 #"(#(struct:translate 3/2 5 #(struct:ellipse 3 10 0 255 \"darkblue\"))"
 #" #(struct:bb 3 10 10) #f)"
) 0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"gray"
0 0 27 3 2 #") "
0 6           4 23 87
(23
 #"(#(struct:translate 3/2 5 #(struct:ellipse 3 10 0 255 \"gray\")) #(s"
 #"truct:bb 3 10 10) #f)"
) 0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; color --> image"
0 0 27 29 1 #"\n"
0 0 18 3 39 #";; Purpose: Create single booster image"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 6 #"rotate"
0 0 27 3 1 #" "
0 0 23 3 3 #"180"
0 0 27 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 27 3 2 #" ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 10 #"FUSELAGE-W"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 47 #";; Sample expressions for mk-single-booster-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"SINGLE-BOOSTER"
0 0 27 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 27 3 1 #" "
0 0 23 3 3 #"180"
0 0 27 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 27 3 2 #" ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 10 #"FUSELAGE-W"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 14 3 13 #"NACELLE-COLOR"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 15 #"SINGLE-BOOSTER2"
0 0 27 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 27 3 1 #" "
0 0 23 3 3 #"180"
0 0 27 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 27 3 2 #" ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 10 #"FUSELAGE-W"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 3 1 #" "
0 0 14 3 14 #"NACELLE2-COLOR"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 60
#";; Tests using sample computations for mk-single-booster-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 27 3 1 #" "
0 0 14 3 13 #"NACELLE-COLOR"
0 0 27 3 2 #") "
0 0 14 3 14 #"SINGLE-BOOSTER"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 27 3 1 #" "
0 0 14 3 14 #"NACELLE2-COLOR"
0 0 27 3 2 #") "
0 0 14 3 15 #"SINGLE-BOOSTER2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 54 #";; Tests using sample values for mk-single-booster-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"darkred"
0 0 27 3 2 #") "
0 6           4 23 300
(24
 #"(#(struct:translate 10.0 8.660254037844387 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0.0 -8.660254037844387 0 0) #(struct:pulled-point"
 #" 0 0 -10.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -5.0000"
 #"00000000002 -0.0 0 0)) 255 \"darkred\")) #(struct:bb 10.0 8.66025403"
 #"7844387 8.660254037844387) #f)"
) 0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"gold"
0 0 27 3 2 #") "
0 6           4 23 297
(25
 #"(#(struct:translate 10.0 8.660254037844387 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0.0 -8.660254037844387 0 0) #(struct:pulled-point"
 #" 0 0 -10.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -5.0000"
 #"00000000002 -0.0 0 0)) 255 \"gold\")) #(struct:bb 10.0 8.66025403784"
 #"4387 8.660254037844387) #f)"
) 0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; image --> image"
0 0 27 29 1 #"\n"
0 0 18 3 32 #";; Purpose: Create booster image"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 14 #"mk-booster-img"
0 0 27 3 1 #" "
0 0 14 3 8 #"a-sb-img"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 6 #"beside"
0 0 27 3 1 #" "
0 0 14 3 8 #"a-sb-img"
0 0 27 3 1 #" "
0 0 14 3 8 #"a-sb-img"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"BOOSTER"
0 0 27 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 27 3 1 #" "
0 0 14 3 14 #"SINGLE-BOOSTER"
0 0 27 3 1 #" "
0 0 14 3 14 #"SINGLE-BOOSTER"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"BOOSTER2"
0 0 27 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 27 3 1 #" "
0 0 14 3 15 #"SINGLE-BOOSTER2"
0 0 27 3 1 #" "
0 0 14 3 15 #"SINGLE-BOOSTER2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 53 #";; Tests using sample computations for mk-booster-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"mk-booster-img"
0 0 27 3 1 #" "
0 0 14 3 14 #"SINGLE-BOOSTER"
0 0 27 3 2 #") "
0 0 14 3 7 #"BOOSTER"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"mk-booster-img"
0 0 27 3 1 #" "
0 0 14 3 15 #"SINGLE-BOOSTER2"
0 0 27 3 2 #") "
0 0 14 3 8 #"BOOSTER2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 47 #";; Tests using sample values for mk-booster-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"mk-booster-img"
0 0 27 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"darkred"
0 0 27 3 3 #")) "
0 6           4 23 613
(26
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 10.0 8.6"
 #"60254037844387 #(struct:polygon (#(struct:pulled-point 0 0 0.0 -8.66"
 #"0254037844387 0 0) #(struct:pulled-point 0 0 -10.0 -8.66025403784438"
 #"7 0 0) #(struct:pulled-point 0 0 -"
 #"5.000000000000002 -0.0 0 0)) 255 \"darkred\"))) #(struct:translate 1"
 #"0.0 0.0 #(struct:translate 10.0 8.660254037844387 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0.0 -8.660254037844387 0 0) #(struct:pulle"
 #"d-point 0 0 -10.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 "
 #"-5.000000000000002 -0.0 0 0)) 255 \"darkred\")))) #(struct:bb 20.0 8"
 #".660254037844387 8.660254037844387) #f)"
) 0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"mk-booster-img"
0 0 27 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"gold"
0 0 27 3 3 #")) "
0 6           4 23 607
(27
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 10.0 8.6"
 #"60254037844387 #(struct:polygon (#(struct:pulled-point 0 0 0.0 -8.66"
 #"0254037844387 0 0) #(struct:pulled-point 0 0 -10.0 -8.66025403784438"
 #"7 0 0) #(struct:pulled-point 0 0 -"
 #"5.000000000000002 -0.0 0 0)) 255 \"gold\"))) #(struct:translate 10.0"
 #" 0.0 #(struct:translate 10.0 8.660254037844387 #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 0.0 -8.660254037844387 0 0) #(struct:pulled-p"
 #"oint 0 0 -10.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -5."
 #"000000000000002 -0.0 0 0)) 255 \"gold\")))) #(struct:bb 20.0 8.66025"
 #"4037844387 8.660254037844387) #f)"
) 0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 30 #";; image image image --> image"
0 0 27 29 1 #"\n"
0 0 18 3 40 #";; Purpose: Create the main rocket image"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 27 3 1 #" "
0 0 14 3 8 #"a-window"
0 0 27 3 1 #" "
0 0 14 3 10 #"a-fuselage"
0 0 27 3 1 #" "
0 0 14 3 9 #"a-booster"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 27 3 1 #" "
0 0 14 3 8 #"a-window"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 1 #"/"
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 1 #" "
0 0 14 3 10 #"a-fuselage"
0 0 27 3 2 #") "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 1 #"/"
0 0 27 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 27 3 1 #" "
0 0 14 3 10 #"a-fuselage"
0 0 27 3 2 #") "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 5 #"above"
0 0 27 3 1 #" "
0 0 14 3 10 #"a-fuselage"
0 0 27 3 1 #" "
0 0 14 3 9 #"a-booster"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 44 #";; Sample expressions for mk-rocket-main-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 27 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 27 3 1 #" "
0 0 14 3 6 #"WINDOW"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 1 #"/"
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 1 #" "
0 0 14 3 8 #"FUSELAGE"
0 0 27 3 2 #") "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 1 #"/"
0 0 27 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 27 3 1 #" "
0 0 14 3 8 #"FUSELAGE"
0 0 27 3 2 #") "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 5 #"above"
0 0 27 3 1 #" "
0 0 14 3 8 #"FUSELAGE"
0 0 27 3 1 #" "
0 0 14 3 7 #"BOOSTER"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 27 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 27 3 1 #" "
0 0 14 3 7 #"WINDOW2"
0 0 27 29 1 #"\n"
0 0 27 3 35 #"                                  ("
0 0 14 3 1 #"/"
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 1 #" "
0 0 14 3 9 #"FUSELAGE2"
0 0 27 3 2 #") "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 35 #"                                  ("
0 0 14 3 1 #"/"
0 0 27 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 27 3 1 #" "
0 0 14 3 9 #"FUSELAGE2"
0 0 27 3 2 #") "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 35 #"                                  ("
0 0 14 3 5 #"above"
0 0 27 3 1 #" "
0 0 14 3 9 #"FUSELAGE2"
0 0 27 3 1 #" "
0 0 14 3 8 #"BOOSTER2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 57 #";; Tests using sample computations for mk-rocket-main-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 27 3 1 #" "
0 0 14 3 6 #"WINDOW"
0 0 27 3 1 #" "
0 0 14 3 8 #"FUSELAGE"
0 0 27 3 1 #" "
0 0 14 3 7 #"BOOSTER"
0 0 27 3 2 #") "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 27 3 1 #" "
0 0 14 3 7 #"WINDOW2"
0 0 27 3 1 #" "
0 0 14 3 9 #"FUSELAGE2"
0 0 27 3 1 #" "
0 0 14 3 8 #"BOOSTER2"
0 0 27 3 2 #") "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 57 #";; Tests using sample computations for mk-rocket-main-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 27 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"black"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 35 #"                                  ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 35 #"                                  ("
0 0 14 3 14 #"mk-booster-img"
0 0 27 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 6           4 23 1036
(28
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 20.0 0) #(struct:"
 #"point 20.0 28.66025403784439) #(struct:point 0 28.66025403784439)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 17/2 0 #(s"
 #"truct:translate 3/2 5 #(struct:ellipse 3 10 0 255 \"black\"))) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 10 10 #(struct:ellipse 20 20 0 255 \"yellow\"))) #(struct:t"
 #"ranslate 0.0 20 #(struct:overlay #(struct:translate 0 0 #(struct:tra"
 #"nslate 10.0 8.660254037844387 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -10.0 -8"
 #".660254037844387 0 0) #(struct:pulled-point 0 0 -5.000000000000002 -"
 #"0.0 0 0)) 255 \"yellow\"))) #(struct:translate 10.0 0.0 #(struct:tra"
 #"nslate 10.0 8.660254037844387 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -10.0 -8"
 #".660254037844387 0 0) #(struct:pulled-point 0 0 -5.000000000000002 -"
 #"0.0 0 0)) 255 \"yellow\")))))))))) #(struct:bb 20.0 28.6602540378443"
 #"9 28.66025403784439) #f)"
) 0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 27 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"green"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 35 #"                                  ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 7 #"skyblue"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 35 #"                                  ("
0 0 14 3 14 #"mk-booster-img"
0 0 27 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 8 #"lightred"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 6           4 23 1041
(29
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 20.0 0) #(struct:"
 #"point 20.0 28.66025403784439) #(struct:point 0 28.66025403784439)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 17/2 0 #(s"
 #"truct:translate 3/2 5 #(struct:ellipse 3 10 0 255 \"green\"))) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 10 10 #(struct:ellipse 20 20 0 255 \"skyblue\"))) #(struct:"
 #"translate 0.0 20 #(struct:overlay #(struct:translate 0 0 #(struct:tr"
 #"anslate 10.0 8.660254037844387 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -10.0 -"
 #"8.660254037844387 0 0) #(struct:pulled-point 0 0 -5.000000000000002 "
 #"-0.0 0 0)) 255 \"lightred\"))) #(struct:translate 10.0 0.0 #(struct:"
 #"translate 10.0 8.660254037844387 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -10.0"
 #" -8.660254037844387 0 0) #(struct:pulled-point 0 0 -5.00000000000000"
 #"2 -0.0 0 0)) 255 \"lightred\")))))))))) #(struct:bb 20.0 28.66025403"
 #"784439 28.66025403784439) #f)"
) 0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 24 #";; image color --> image"
0 0 27 29 1 #"\n"
0 0 18 3 41 #";; Purpose: Create a rocket nacelle image"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 14 #"mk-nacelle-img"
0 0 27 3 1 #" "
0 0 14 3 17 #"a-rocket-main-img"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-color"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 1 #" "
0 0 14 3 17 #"a-rocket-main-img"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 1 #"/"
0 0 27 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 27 3 1 #" "
0 0 14 3 17 #"a-rocket-main-img"
0 0 27 3 2 #") "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 14 3 7 #"a-color"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 40 #";; Sample expressions for mk-nacelle-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"NACELLE"
0 0 27 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 1 #" "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                           ("
0 0 14 3 1 #"/"
0 0 27 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 27 3 1 #" "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 27 3 2 #") "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                           "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                           "
0 0 14 3 13 #"NACELLE-COLOR"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"NACELLE2"
0 0 27 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 1 #" "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 1 #"/"
0 0 27 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 27 3 1 #" "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 27 3 2 #") "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                            "
0 0 23 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                            "
0 0 14 3 14 #"NACELLE2-COLOR"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 53 #";; Tests using sample computations for mk-nacelle-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"mk-nacelle-img"
0 0 27 3 1 #" "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 27 3 1 #" "
0 0 14 3 13 #"NACELLE-COLOR"
0 0 27 3 2 #") "
0 0 14 3 7 #"NACELLE"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"mk-nacelle-img"
0 0 27 3 1 #" "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 27 3 1 #" "
0 0 14 3 14 #"NACELLE2-COLOR"
0 0 27 3 2 #") "
0 0 14 3 8 #"NACELLE2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 47 #";; Tests using sample values for mk-nacelle-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"mk-nacelle-img"
0 0 27 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 27 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 51 #"                                                  ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"green"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 51 #"                                                  ("
0 0 14 3 14 #"mk-booster-img"
0 0 27 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 23 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 6           4 23 235
(30
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0"
 #" 0 20 29/4 0 0) #(struct:pulled-p"
 #"oint 0 0 0 29/4 0 0)) 255 \"yellow\")) #(struct:bb 20 29/4 29/4) #f)"
) 0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"mk-nacelle-img"
0 0 27 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 27 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 51 #"                                                  ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"green"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 51 #"                                                  ("
0 0 14 3 14 #"mk-booster-img"
0 0 27 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 11 #"lightorange"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 23 3 1 #"'"
0 0 14 3 11 #"lightorange"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 6           4 23 240
(31
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0"
 #" 0 20 29/4 0 0) #(struct:pulled-point 0 0 0 29/4 0 0)) 255 \"lightor"
 #"ange\")) #(struct:bb 20 29/4 29/4) #f)"
) 0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 21 #";; image image --> ci"
0 0 27 29 1 #"\n"
0 0 18 3 30 #";; Purpose: Create a rocket ci"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 12 #"mk-rocket-ci"
0 0 27 3 1 #" "
0 0 14 3 17 #"a-rocket-main-img"
0 0 27 3 1 #" "
0 0 14 3 13 #"a-nacelle-img"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 27 3 1 #" "
0 0 14 3 13 #"a-nacelle-img"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 1 #"/"
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 2 #"  "
0 0 14 3 17 #"a-rocket-main-img"
0 0 27 3 2 #") "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 1 #"*"
0 0 27 3 1 #" "
0 0 23 3 3 #"0.7"
0 0 27 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 27 3 1 #" "
0 0 14 3 17 #"a-rocket-main-img"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"               "
0 0 14 3 17 #"a-rocket-main-img"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"ROCKET-IMG"
0 0 27 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 27 3 1 #" "
0 0 14 3 7 #"NACELLE"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                ("
0 0 14 3 1 #"/"
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 2 #"  "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 27 3 2 #") "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                ("
0 0 14 3 1 #"*"
0 0 27 3 1 #" "
0 0 23 3 3 #"0.7"
0 0 27 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 27 3 1 #" "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                                "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"ROCKET-IMG2"
0 0 27 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 27 3 1 #" "
0 0 14 3 8 #"NACELLE2"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 1 #"/"
0 0 27 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 27 3 2 #"  "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 27 3 2 #") "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 1 #"*"
0 0 27 3 1 #" "
0 0 23 3 3 #"0.7"
0 0 27 3 2 #" ("
0 0 14 3 12 #"image-height"
0 0 27 3 1 #" "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                 "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 52 #";; Tests using sample computations for mk-rocket-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"mk-rocket-ci"
0 0 27 3 1 #" "
0 0 14 3 11 #"ROCKET-MAIN"
0 0 27 3 1 #" "
0 0 14 3 7 #"NACELLE"
0 0 27 3 2 #") "
0 0 14 3 10 #"ROCKET-IMG"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"mk-rocket-ci"
0 0 27 3 1 #" "
0 0 14 3 12 #"ROCKET-MAIN2"
0 0 27 3 1 #" "
0 0 14 3 8 #"NACELLE2"
0 0 27 3 2 #") "
0 0 14 3 11 #"ROCKET-IMG2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 1 #" "
0 0 14 3 10 #"ROCKET-IMG"
0 0 27 3 3 #")  "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 3 #"ci?"
0 0 27 3 1 #" "
0 0 14 3 11 #"ROCKET-IMG2"
0 0 27 3 2 #") "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 46 #";; Tests using sample values for mk-rocket-img"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"mk-rocket-ci"
0 0 27 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 27 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 49 #"                                                ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"green"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 49 #"                                                ("
0 0 14 3 14 #"mk-booster-img"
0 0 27 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 14 #"mk-nacelle-img"
0 0 27 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 27 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 65
#"                                                                ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"green"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 65
#"                                                                ("
0 0 14 3 14 #"mk-booster-img"
0 0 27 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 44 #"                                            "
0 0 23 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 6           4 23 1469
(32
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 20.0 0) #(struct:"
 #"point 20.0 28.66025403784439) #(struct:point 0 28.66025403784439)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 667/40 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0"
 #" 20 29/4 0 0) #(struct:pulled-point 0 0 0 29/4 0 0)) 255 \"yellow\")"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 20.0 0) #(struct:point 20.0 28.66025403784439) #(struct:poin"
 #"t 0 28.66025403784439)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 17/2 0 #(struct:translate 3/2 5 #(struct:ellipse 3 10"
 #" 0 255 \"blue\"))) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:translate 10 10 #(struct:ellipse 20 20 0 255 "
 #"\"green\"))) #(struct:translate 0.0 20 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 10.0 8.660254037844387 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0.0 -8.660254037844387 0 0) #(struct:pu"
 #"lled-point 0 0 -10.0 -8.660254037844387 0 0) #(struct:pulled-point 0"
 #" 0 -5.000000000000002 -0.0 0 0)) 255 \"yellow\"))) #(struct:translat"
 #"e 10.0 0.0 #(struct:translate 10.0 8.660254037844387 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0.0 -8.660254037844387 0 0) #(struct:pu"
 #"lled-point 0 0 -10.0 -8.660254037844387 0 0) #(struct:pulled-point 0"
 #" 0 -5.000000000000002 -0.0 0 0)) 255 \"yellow\")))))))))))))) #(stru"
 #"ct:bb 20.0 28.66025403784439 28.66025403784439) #f)"
) 0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"mk-rocket-ci"
0 0 27 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 27 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"white"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 49 #"                                                ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 49 #"                                                ("
0 0 14 3 14 #"mk-booster-img"
0 0 27 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 8 #"lightred"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 14 #"mk-nacelle-img"
0 0 27 3 2 #" ("
0 0 14 3 18 #"mk-rocket-main-img"
0 0 27 3 2 #" ("
0 0 14 3 13 #"mk-window-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"white"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 65
#"                                                                ("
0 0 14 3 15 #"mk-fuselage-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 65
#"                                                                ("
0 0 14 3 14 #"mk-booster-img"
0 0 27 3 2 #" ("
0 0 14 3 21 #"mk-single-booster-img"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 8 #"lightred"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 44 #"                                            "
0 0 23 3 1 #"'"
0 0 14 3 8 #"lightred"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 6           4 23 1475
(33
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 20.0 0) #(struct:"
 #"point 20.0 28.66025403784439) #(struct:point 0 28.66025403784439)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 667/40 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0"
 #" 20 29/4 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 29/4 0 0)) 255 \"lightred\"))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 20.0 0) #(struct:point "
 #"20.0 28.66025403784439) #(struct:point 0 28.66025403784439)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 17/2 0 #(struct:"
 #"translate 3/2 5 #(struct:ellipse 3 10 0 255 \"white\"))) #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 10 10 #(struct:ellipse 20 20 0 255 \"blue\"))) #(struct:translate"
 #" 0.0 20 #(struct:overlay #(struct:translate 0 0 #(struct:translate 1"
 #"0.0 8.660254037844387 #(struct:polygon (#(struct:pulled-point 0 0 0."
 #"0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -10.0 -8.6602540"
 #"37844387 0 0) #(struct:pulled-point 0 0 -5.000000000000002 -0.0 0 0)"
 #") 255 \"lightred\"))) #(struct:translate 10.0 0.0 #(struct:translate"
 #" 10.0 8.660254037844387 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0.0 -8.660254037844387 0 0) #(struct:pulled-point 0 0 -10.0 -8.66025"
 #"4037844387 0 0) #(struct:pulled-point 0 0 -5.000000000000002 -0.0 0 "
 #"0)) 255 \"lightred\")))))))))))))) #(struct:bb 20.0 28.6602540378443"
 #"9 28.66025403784439) #f)"
) 0 0 27 3 3 #" ) "
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 20 #";; DRAWING FUNCTIONS"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 1 #"#"
0 0 18 3 1 #"|"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 34 #";; Sample Expressions for x->pix-x"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 6 #"PIX-X5"
0 0 18 3 2 #" ("
0 0 18 3 1 #"+"
0 0 18 3 2 #" ("
0 0 18 3 1 #"*"
0 0 18 3 1 #" "
0 0 18 3 1 #"5"
0 0 18 3 1 #" "
0 0 18 3 11 #"IMAGE-WIDTH"
0 0 18 3 3 #") ("
0 0 18 3 1 #"/"
0 0 18 3 1 #" "
0 0 18 3 11 #"IMAGE-WIDTH"
0 0 18 3 1 #" "
0 0 18 3 1 #"2"
0 0 18 3 3 #")))"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 7 #"PIX-X12"
0 0 18 3 2 #" ("
0 0 18 3 1 #"+"
0 0 18 3 2 #" ("
0 0 18 3 1 #"*"
0 0 18 3 1 #" "
0 0 18 3 2 #"12"
0 0 18 3 1 #" "
0 0 18 3 11 #"IMAGE-WIDTH"
0 0 18 3 3 #") ("
0 0 18 3 1 #"/"
0 0 18 3 1 #" "
0 0 18 3 11 #"IMAGE-WIDTH"
0 0 18 3 1 #" "
0 0 18 3 1 #"2"
0 0 18 3 3 #")))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 47 #";; Tests using sample computations for x->pix-x"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 14 #"image-x->pix-x"
0 0 18 3 1 #" "
0 0 18 3 1 #"5"
0 0 18 3 2 #") "
0 0 18 3 6 #"PIX-X5"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 14 #"image-x->pix-x"
0 0 18 3 1 #" "
0 0 18 3 2 #"12"
0 0 18 3 2 #") "
0 0 18 3 7 #"PIX-X12"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 41 #";; Tests using sample values for x->pix-x"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 14 #"image-x->pix-x"
0 0 18 3 1 #" "
0 0 18 3 1 #"0"
0 0 18 3 3 #") ("
0 0 18 3 1 #"/"
0 0 18 3 1 #" "
0 0 18 3 11 #"IMAGE-WIDTH"
0 0 18 3 1 #" "
0 0 18 3 1 #"2"
0 0 18 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 14 #"image-x->pix-x"
0 0 18 3 2 #" ("
0 0 18 3 4 #"sub1"
0 0 18 3 1 #" "
0 0 18 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 18 3 3 #")) "
0 0 18 3 3 #"585"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 34 #";; Sample expressions for y->pix-y"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 6 #"PIX-Y1"
0 0 18 3 2 #" ("
0 0 18 3 1 #"+"
0 0 18 3 2 #" ("
0 0 18 3 1 #"*"
0 0 18 3 1 #" "
0 0 18 3 1 #"1"
0 0 18 3 1 #" "
0 0 18 3 12 #"IMAGE-HEIGHT"
0 0 18 3 3 #") ("
0 0 18 3 1 #"/"
0 0 18 3 1 #" "
0 0 18 3 12 #"IMAGE-HEIGHT"
0 0 18 3 1 #" "
0 0 18 3 1 #"2"
0 0 18 3 3 #")))"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 6 #"PIX-Y6"
0 0 18 3 2 #" ("
0 0 18 3 1 #"+"
0 0 18 3 2 #" ("
0 0 18 3 1 #"*"
0 0 18 3 1 #" "
0 0 18 3 1 #"6"
0 0 18 3 1 #" "
0 0 18 3 12 #"IMAGE-HEIGHT"
0 0 18 3 3 #") ("
0 0 18 3 1 #"/"
0 0 18 3 1 #" "
0 0 18 3 12 #"IMAGE-HEIGHT"
0 0 18 3 1 #" "
0 0 18 3 1 #"2"
0 0 18 3 3 #")))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 47 #";; Tests using sample computations for y->pix-y"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 14 #"image-y->pix-y"
0 0 18 3 1 #" "
0 0 18 3 1 #"1"
0 0 18 3 2 #") "
0 0 18 3 6 #"PIX-Y1"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 14 #"image-y->pix-y"
0 0 18 3 1 #" "
0 0 18 3 1 #"6"
0 0 18 3 2 #") "
0 0 18 3 6 #"PIX-Y6"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 41 #";; Tests using sample values for y->pix-y"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 14 #"image-y->pix-y"
0 0 18 3 1 #" "
0 0 18 3 1 #"0"
0 0 18 3 3 #") ("
0 0 18 3 1 #"/"
0 0 18 3 1 #" "
0 0 18 3 12 #"IMAGE-HEIGHT"
0 0 18 3 1 #" "
0 0 18 3 1 #"2"
0 0 18 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 14 #"image-y->pix-y"
0 0 18 3 2 #" ("
0 0 18 3 4 #"sub1"
0 0 18 3 1 #" "
0 0 18 3 18 #"MAX-CHARS-VERTICAL"
0 0 18 3 3 #")) "
0 0 18 3 3 #"435"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 40 #";; image image-x image-y image --> image"
0 0 18 29 1 #"\n"
0 0 18 3 97
(34
 #";; Purpose: Place the first given image in the seocond given image a"
 #"t the given image coordinates"
) 0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 10 #" (draw-ci "
0 0 18 3 8 #"char-img"
0 0 18 3 1 #" "
0 0 18 3 8 #"an-img-x"
0 0 18 3 1 #" "
0 0 18 3 8 #"an-img-y"
0 0 18 3 5 #" scn)"
0 0 18 29 1 #"\n"
0 0 18 3 3 #"  ("
0 0 18 3 11 #"place-image"
0 0 18 3 1 #" "
0 0 18 3 8 #"char-img"
0 0 18 3 16 #" (image-x->pix-x"
0 0 18 3 1 #" "
0 0 18 3 8 #"an-img-x"
0 0 18 3 3 #") ("
0 0 18 3 14 #"image-y->pix-y"
0 0 18 3 1 #" "
0 0 18 3 15 #"an-img-y) scn))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 33 #";; Sample expressions for draw-ci"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 10 #"ROCKET-SCN"
0 0 18 3 2 #" ("
0 0 18 3 11 #"place-image"
0 0 18 3 1 #" "
0 0 18 3 10 #"ROCKET-IMG"
0 0 18 3 2 #" ("
0 0 18 3 14 #"image-x->pix-x"
0 0 18 3 2 #" ("
0 0 18 3 1 #"/"
0 0 18 3 1 #" "
0 0 18 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 18 3 1 #" "
0 0 18 3 1 #"2"
0 0 18 3 4 #")) ("
0 0 18 3 14 #"image-y->pix-y"
0 0 18 3 1 #" "
0 0 18 3 8 #"ROCKET-Y"
0 0 18 3 11 #") E-SCENE))"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 9 #"ALIEN-SCN"
0 0 18 3 2 #" ("
0 0 18 3 11 #"place-image"
0 0 18 3 1 #" "
0 0 18 3 9 #"ALIEN-IMG"
0 0 18 3 2 #" ("
0 0 18 3 14 #"image-x->pix-x"
0 0 18 3 1 #" "
0 0 18 3 1 #"4"
0 0 18 3 3 #") ("
0 0 18 3 14 #"image-y->pix-y"
0 0 18 3 1 #" "
0 0 18 3 1 #"7"
0 0 18 3 2 #") "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 8 #"SHOT-SCN"
0 0 18 3 2 #" ("
0 0 18 3 11 #"place-image"
0 0 18 3 1 #" "
0 0 18 3 8 #"SHOT-IMG"
0 0 18 3 2 #" ("
0 0 18 3 14 #"image-x->pix-x"
0 0 18 3 1 #" "
0 0 18 3 2 #"17"
0 0 18 3 3 #") ("
0 0 18 3 14 #"image-y->pix-y"
0 0 18 3 1 #" "
0 0 18 3 2 #"13"
0 0 18 3 2 #") "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 46 #";; Tests using sample computations for draw-ci"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 7 #"draw-ci"
0 0 18 3 1 #" "
0 0 18 3 10 #"ROCKET-IMG"
0 0 18 3 2 #" ("
0 0 18 3 1 #"/"
0 0 18 3 1 #" "
0 0 18 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 18 3 1 #" "
0 0 18 3 1 #"2"
0 0 18 3 2 #") "
0 0 18 3 8 #"ROCKET-Y"
0 0 18 3 1 #" "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 2 #") "
0 0 18 3 10 #"ROCKET-SCN"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 7 #"draw-ci"
0 0 18 3 1 #" "
0 0 18 3 9 #"ALIEN-IMG"
0 0 18 3 1 #" "
0 0 18 3 1 #"4"
0 0 18 3 1 #" "
0 0 18 3 1 #"7"
0 0 18 3 1 #" "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 2 #") "
0 0 18 3 9 #"ALIEN-SCN"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 7 #"draw-ci"
0 0 18 3 1 #" "
0 0 18 3 8 #"SHOT-IMG"
0 0 18 3 1 #" "
0 0 18 3 2 #"17"
0 0 18 3 1 #" "
0 0 18 3 2 #"13"
0 0 18 3 1 #" "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 2 #") "
0 0 18 3 8 #"SHOT-SCN"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 40 #";; Tests using sample values for draw-ci"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 7 #"draw-ci"
0 0 18 3 2 #" ("
0 0 18 3 6 #"square"
0 0 18 3 1 #" "
0 0 18 3 2 #"10"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 5 #"solid"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 5 #"green"
0 0 18 3 2 #") "
0 0 18 3 1 #"8"
0 0 18 3 1 #" "
0 0 18 3 1 #"8"
0 0 18 3 1 #" "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"              "
0 6           4 18 1068
(35
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 250 250 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 10 0 0 0) #(struct:pulled-point 0 0 10 10 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 10 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 600 0) #(struct:point 600 45"
 #"0) #(struct:point 0 450)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #("
 #"struct:pulled-point 0 0 600 450 0 0) #(struct:pulled-point 0 0 0 450"
 #" 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(stru"
 #"ct:pulled-point 0 0 600 450 0 0) #(struct:pulled-point 0 0 0 450 0 0"
 #")) 255 \"pink\")))))))))) #(struct:bb 600 450 450) #f)"
) 0 0 18 3 2 #" )"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 7 #"draw-ci"
0 0 18 3 2 #" ("
0 0 18 3 7 #"ellipse"
0 0 18 3 1 #" "
0 0 18 3 2 #"20"
0 0 18 3 1 #" "
0 0 18 3 2 #"30"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 7 #"outline"
0 0 18 3 1 #" "
0 0 18 3 1 #"'"
0 0 18 3 5 #"black"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 23 #"                       "
0 0 18 3 2 #"11"
0 0 18 29 1 #"\n"
0 0 18 3 23 #"                       "
0 0 18 3 2 #"12"
0 0 18 29 1 #"\n"
0 0 18 3 23 #"                       "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"              "
0 6           4 18 936
(36
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 335 360 #(struct:translate 10 15 #(struc"
 #"t:ellipse 20 30 0 outline \"black\"))) #(struct:translate 0 0 #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:point 60"
 #"0 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0"
 #") #(struct:pulled-point 0 0 600 450 0 0) #(struct:pulled-point 0 0 0"
 #" 450 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #("
 #"struct:pulled-point 0 0 600 450 0 0) #(struct:pulled-point 0 0 0 450"
 #" 0 0)) 255 \"pink\")))))))))) #(struct:bb 600 450 450) #f)"
) 0 0 18 3 2 #" )"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 36 #";; Sample expressions for draw-alien"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 10 #"ALIEN-VAL1"
0 0 18 3 2 #" ("
0 0 18 3 7 #"draw-ci"
0 0 18 3 1 #" "
0 0 18 3 9 #"ALIEN-IMG"
0 0 18 29 1 #"\n"
0 0 18 3 29 #"                            ("
0 0 18 3 6 #"posn-x"
0 0 18 3 1 #" "
0 0 18 3 10 #"INIT-ALIEN"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 29 #"                            ("
0 0 18 3 6 #"posn-y"
0 0 18 3 1 #" "
0 0 18 3 10 #"INIT-ALIEN"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 28 #"                            "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 3 28 #"                            "
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 10 #"ALIEN-VAL2"
0 0 18 3 2 #" ("
0 0 18 3 7 #"draw-ci"
0 0 18 3 1 #" "
0 0 18 3 9 #"ALIEN-IMG"
0 0 18 29 1 #"\n"
0 0 18 3 29 #"                            ("
0 0 18 3 6 #"posn-x"
0 0 18 3 1 #" "
0 0 18 3 11 #"INIT-ALIEN2"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 29 #"                            ("
0 0 18 3 6 #"posn-y"
0 0 18 3 1 #" "
0 0 18 3 11 #"INIT-ALIEN2"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 28 #"                            "
0 0 18 3 8 #"E-SCENE2"
0 0 18 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 49 #";; Tests using sample computations for draw-alien"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 10 #"draw-alien"
0 0 18 3 1 #" "
0 0 18 3 10 #"INIT-ALIEN"
0 0 18 3 2 #"  "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 3 #")  "
0 0 18 3 10 #"ALIEN-VAL1"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 10 #"draw-alien"
0 0 18 3 1 #" "
0 0 18 3 11 #"INIT-ALIEN2"
0 0 18 3 1 #" "
0 0 18 3 8 #"E-SCENE2"
0 0 18 3 2 #") "
0 0 18 3 10 #"ALIEN-VAL2"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 43 #";; Tests using sample values for draw-alien"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 10 #"draw-alien"
0 0 18 3 1 #" "
0 0 18 3 11 #"INIT-ALIEN2"
0 0 18 3 1 #" "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"              "
0 6           4 18 1047
(37
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 96.5 421.0 #(struct:overlay #(struct:tra"
 #"nslate 8.5 14.0 #(struct:text \"X\" 0 1 \"black\" 25 #f swiss normal"
 #" normal #f)) #(struct:translate 8.5 14.0 #(struct:ellipse 15 15 0 25"
 #"5 \"black\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 600 0) #(struct:point 600 450) #(struct:point 0"
 #" 450)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(struct:pulled-point"
 #" 0 0 600 450 0 0) #(struct:pulled-point 0 0 0 450 0 0)) outline #(st"
 #"ruct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(struct:pulled-point 0 0"
 #" 600 450 0 0) #(struct:pulled-point 0 0 0 450 0 0)) 255 \"pink\"))))"
 #")))))) #(struct:bb 600 450 450.0) #f)"
) 0 0 18 3 2 #" )"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 37 #";; Sample expressions for draw-rocket"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 5 #"RSCN3"
0 0 18 3 3 #"  ("
0 0 18 3 7 #"draw-ci"
0 0 18 3 1 #" "
0 0 18 3 10 #"ROCKET-IMG"
0 0 18 3 1 #" "
0 0 18 3 1 #"3"
0 0 18 3 1 #" "
0 0 18 3 8 #"ROCKET-Y"
0 0 18 3 1 #" "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 6 #"RSCN12"
0 0 18 3 2 #" ("
0 0 18 3 7 #"draw-ci"
0 0 18 3 1 #" "
0 0 18 3 10 #"ROCKET-IMG"
0 0 18 3 1 #" "
0 0 18 3 2 #"12"
0 0 18 3 1 #" "
0 0 18 3 8 #"ROCKET-Y"
0 0 18 3 1 #" "
0 0 18 3 8 #"E-SCENE2"
0 0 18 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 50 #";; Tests using sample computations for draw-rocket"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 11 #"draw-rocket"
0 0 18 3 1 #" "
0 0 18 3 1 #"3"
0 0 18 3 2 #"  "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 2 #") "
0 0 18 3 5 #"RSCN3"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 11 #"draw-rocket"
0 0 18 3 1 #" "
0 0 18 3 2 #"12"
0 0 18 3 1 #" "
0 0 18 3 8 #"E-SCENE2"
0 0 18 3 2 #") "
0 0 18 3 6 #"RSCN12"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 44 #";; Tests using sample values for draw-rocket"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 11 #"draw-rocket"
0 0 18 3 1 #" "
0 0 18 3 1 #"0"
0 0 18 3 1 #" "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"              "
0 6           4 18 1905
(38
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 5.0 420.6698729810778 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 20.0 0) #(struct:point 20.0 28.66025"
 #"403784439) #(struct:point 0 28.66025403784439)) #(struct:overlay #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 667/40 0 0) #(struct:pull"
 #"ed-point 0 0 20 667/40 0 0) #(struct:pulled-point 0 0 20 957/40 0 0)"
 #" #(struct:pulled-point 0 0 0 957/40 0 0)) 255 \"red\") #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 20.0 0) #(struct:point 20.0 28."
 #"66025403784439) #(struct:point 0 28.66025403784439)) #(struct:overla"
 #"y #(struct:overlay #(struct:overlay #(struct:translate 10 5 #(struct"
 #":ellipse 3 10 0 255 \"darkgray\")) #(struct:translate 10 10 #(struct"
 #":ellipse 20 20 0 255 \"green\"))) #(struct:polygon (#(struct:pulled-"
 #"point 0 0 10.0 20.0 0 0) #(struct:pulled-point 0 0 0.0 20.0 0 0) #(s"
 #"truct:pulled-point 0 0 4.999999999999998 28.66025403784439 0 0)) 255"
 #" \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 20.0 20.0 0 0"
 #") #(struct:pulled-point 0 0 10.0 20.0 0 0) #(struct:pulled-point 0 0"
 #" 14.999999999999998 28.66025403784439 0 0)) 255 \"red\")))))) #(stru"
 #"ct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 6"
 #"00 0) #(struct:point 600 450) #(struct:point 0 450)) #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0) #(st"
 #"ruct:pulled-point 0 0 0 450 0 0)) outline #(struct:pen \"black\" 2 s"
 #"olid round round)))) #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0) #(struct"
 #":pulled-point 0 0 0 450 0 0)) 255 \"pink\")))))))))) #(struct:bb 600"
 #" 450 450.0) #f)"
) 0 0 18 3 2 #" )"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 11 #"draw-rocket"
0 0 18 3 2 #" ("
0 0 18 3 4 #"sub1"
0 0 18 3 1 #" "
0 0 18 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 18 3 2 #") "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"              "
0 6           4 18 1907
(39
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 575.0 420.6698729810778 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 20.0 0) #(struct:point 20.0 28.660"
 #"25403784439) #(struct:point 0 28.66025403784439)) #(struct:overlay #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 667/40 0 0) #(struct:pu"
 #"lled-point 0 0 20 667/40 0 0) #(struct:pulled-point 0 0 20 957/40 0 "
 #"0) #(struct:pulled-point 0 0 0 957/40 0 0)) 255 \"red\") #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 20.0 0) #(struct:point 20.0 2"
 #"8.66025403784439) #(struct:point 0 28.66025403784439)) #(struct:over"
 #"lay #(struct:overlay #(struct:overlay #(struct:translate 10 5 #(stru"
 #"ct:ellipse 3 10 0 255 \"darkgray\")) #(struct:translate 10 10 #(stru"
 #"ct:ellipse 20 20 0 255 \"green\"))) #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 10.0 20.0 0 0) #(struct:pulled-point 0 0 0.0 20.0 0 0) #"
 #"(struct:pulled-point 0 0 4.999999999999998 28.66025403784439 0 0)) 2"
 #"55 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 20.0 20.0 0"
 #" 0) #(struct:pulled-point 0 0 10.0 20.0 0 0) #(struct:pulled-point 0"
 #" 0 14.999999999999998 28.66025403784439 0 0)) 255 \"red\")))))) #(st"
 #"ruct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point"
 #" 600 0) #(struct:point 600 450) #(struct:point 0 450)) #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0) #("
 #"struct:pulled-point 0 0 0 450 0 0)) outline #(struct:pen \"black\" 2"
 #" solid round round)))) #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0) #(stru"
 #"ct:pulled-point 0 0 0 450 0 0)) 255 \"pink\")))))))))) #(struct:bb 6"
 #"00 450 450.0) #f)"
) 0 0 18 3 2 #" )"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 23 #";; shot scene --> scene"
0 0 18 29 1 #"\n"
0 0 18 3 47 #";; Purpose: To draw the shot in the given scene"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 2 #" ("
0 0 18 3 16 #"draw-shot a-shot"
0 0 18 3 1 #" "
0 0 18 3 3 #"scn"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 3 #"  ("
0 0 18 3 2 #"if"
0 0 18 3 2 #" ("
0 0 18 3 3 #"eq?"
0 0 18 3 1 #" "
0 0 18 3 6 #"a-shot"
0 0 18 3 1 #" "
0 0 18 3 8 #"NO-SHOT)"
0 0 18 29 1 #"\n"
0 0 18 3 6 #"      "
0 0 18 3 3 #"scn"
0 0 18 29 1 #"\n"
0 0 18 3 7 #"      ("
0 0 18 3 7 #"draw-ci"
0 0 18 3 1 #" "
0 0 18 3 8 #"SHOT-IMG"
0 0 18 3 2 #" ("
0 0 18 3 6 #"posn-x"
0 0 18 3 1 #" "
0 0 18 3 9 #"a-shot) ("
0 0 18 3 13 #"posn-y a-shot"
0 0 18 3 2 #") "
0 0 18 3 3 #"scn"
0 0 18 3 3 #")))"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 29 1 #"\n"
0 0 18 3 35 #";; Sample expressions for draw-shot"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 13 #"INIT-SHOT-VAL"
0 0 18 3 1 #" "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 9 #"SHOT2-VAL"
0 0 18 3 6 #"     ("
0 0 18 3 7 #"draw-ci"
0 0 18 3 1 #" "
0 0 18 3 8 #"SHOT-IMG"
0 0 18 3 2 #" ("
0 0 18 3 6 #"posn-x"
0 0 18 3 1 #" "
0 0 18 3 5 #"SHOT2"
0 0 18 3 3 #") ("
0 0 18 3 6 #"posn-y"
0 0 18 3 1 #" "
0 0 18 3 5 #"SHOT2"
0 0 18 3 2 #") "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 9 #"SHOT3-VAL"
0 0 18 3 6 #"     ("
0 0 18 3 7 #"draw-ci"
0 0 18 3 1 #" "
0 0 18 3 8 #"SHOT-IMG"
0 0 18 3 2 #" ("
0 0 18 3 6 #"posn-x"
0 0 18 3 1 #" "
0 0 18 3 5 #"SHOT3"
0 0 18 3 3 #") ("
0 0 18 3 6 #"posn-y"
0 0 18 3 1 #" "
0 0 18 3 5 #"SHOT3"
0 0 18 3 2 #") "
0 0 18 3 8 #"E-SCENE2"
0 0 18 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 3 5 #"     "
0 0 18 29 1 #"\n"
0 0 18 3 48 #";; Tests using sample computations for draw-shot"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 9 #"draw-shot"
0 0 18 3 1 #" "
0 0 18 3 9 #"INIT-SHOT"
0 0 18 3 1 #" "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 2 #") "
0 0 18 3 13 #"INIT-SHOT-VAL"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 9 #"draw-shot"
0 0 18 3 1 #" "
0 0 18 3 5 #"SHOT2"
0 0 18 3 5 #"     "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 2 #") "
0 0 18 3 9 #"SHOT2-VAL"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 9 #"draw-shot"
0 0 18 3 1 #" "
0 0 18 3 5 #"SHOT3"
0 0 18 3 5 #"     "
0 0 18 3 8 #"E-SCENE2"
0 0 18 3 2 #") "
0 0 18 3 9 #"SHOT3-VAL"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 19 #"                   "
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 42 #";; Tests using sample values for draw-shot"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 9 #"draw-shot"
0 0 18 3 1 #" "
0 0 18 3 9 #"INIT-SHOT"
0 0 18 3 1 #" "
0 0 18 3 8 #"E-SCENE2"
0 0 18 3 2 #") "
0 0 18 3 8 #"E-SCENE2"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 9 #"draw-shot"
0 0 18 3 1 #" "
0 0 18 3 5 #"SHOT2"
0 0 18 3 1 #" "
0 0 18 3 8 #"E-SCENE2"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"              "
0 6           4 18 1991
(40
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 302.065686544842 212.06568654484198 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 14.878857103421021 10.989769"
 #"806895007 0 0) #(struct:pulled-point 0 0 18.291881508269274 0.0 0 0)"
 #" #(struct:pulled-point 0 0 12.934313455158016 10.184313455158012 0 0"
 #") #(struct:pulled-point 0 0 7.57674540204675 0.0 0 0) #(struct:pulle"
 #"d-point 0 0 10.98976980689501 10.989769806895007 0 0) #(struct:pulle"
 #"d-point 0 0 0.0 7.5767454020467575 0 0) #(struct:pulled-point 0 0 10"
 #".184313455158016 12.934313455158012 0 0) #(struct:pulled-point 0 0 1"
 #".7763568394002505e-015 18.29188150826927 0 0) #(struct:pulled-point "
 #"0 0 10.98976980689501 14.878857103421018 0 0) #(struct:pulled-point "
 #"0 0 7.576745402046759 25.868626910316024 0 0) #(struct:pulled-point "
 #"0 0 12.934313455158016 15.684313455158012 0 0) #(struct:pulled-point"
 #" 0 0 18.291881508269274 25.868626910316024 0 0) #(struct:pulled-poin"
 #"t 0 0 14.878857103421021 14.878857103421018 0 0) #(struct:pulled-poi"
 #"nt 0 0 25.868626910316028 18.29188150826927 0 0) #(struct:pulled-poi"
 #"nt 0 0 15.684313455158016 12.934313455158012 0 0) #(struct:pulled-po"
 #"int 0 0 25.868626910316028 7.576745402046754 0 0)) 255 \"orange\")) "
 #"#(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:p"
 #"oint 600 0) #(struct:point 600 450) #(struct:point 0 450)) #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0"
 #") #(struct:pulled-point 0 0 0 450 0 0)) outline #(struct:pen \"black"
 #"\" 2 solid round round)))) #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0) #("
 #"struct:pulled-point 0 0 0 450 0 0)) 255 \"darkgray\")))))))))) #(str"
 #"uct:bb 600 450 450.0) #f)"
) 0 0 18 3 2 #" )"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 34 #";; Sample expressions for draw-loa"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 8 #"ELOA-VAL"
0 0 18 3 1 #" "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 8 #"ILOA-VAL"
0 0 18 3 2 #" ("
0 0 18 3 10 #"draw-alien"
0 0 18 3 2 #" ("
0 0 18 3 5 #"first"
0 0 18 3 1 #" "
0 0 18 3 8 #"INIT-LOA"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"                             ("
0 0 18 3 8 #"draw-loa"
0 0 18 3 2 #" ("
0 0 18 3 4 #"rest"
0 0 18 3 1 #" "
0 0 18 3 8 #"INIT-LOA"
0 0 18 3 2 #") "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 3 #")))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 47 #";; Tests using sample computations for draw-loa"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 8 #"draw-loa"
0 0 18 3 1 #" "
0 0 18 3 5 #"E-LOA"
0 0 18 3 1 #" "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 9 #")        "
0 0 18 3 8 #"ELOA-VAL"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 8 #"draw-loa"
0 0 18 3 1 #" "
0 0 18 3 8 #"INIT-LOA"
0 0 18 3 1 #" "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 2 #") "
0 0 18 3 8 #"ILOA-VAL"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 41 #";; Tests using sample values for draw-loa"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 8 #"draw-loa"
0 0 18 3 2 #" ("
0 0 18 3 4 #"cons"
0 0 18 3 2 #" ("
0 0 18 3 9 #"make-posn"
0 0 18 3 1 #" "
0 0 18 3 1 #"3"
0 0 18 3 1 #" "
0 0 18 3 1 #"4"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 31 #"                              ("
0 0 18 3 4 #"cons"
0 0 18 3 2 #" ("
0 0 18 3 9 #"make-posn"
0 0 18 3 1 #" "
0 0 18 3 2 #"15"
0 0 18 3 1 #" "
0 0 18 3 1 #"8"
0 0 18 3 2 #") "
0 0 18 3 5 #"empty"
0 0 18 3 2 #"))"
0 0 18 29 1 #"\n"
0 0 18 3 24 #"                        "
0 0 18 3 8 #"E-SCENE2"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"              "
0 6           4 18 1428
(41
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 96.5 121.0 #(struct:overlay #(struct:tra"
 #"nslate 8.5 14.0 #(struct:text \"X\" 0 1 \"black\" 25 #f swiss normal"
 #" normal #f)) #(struct:translate 8.5 14.0 #(struct:ellipse 15 15 0 25"
 #"5 \"black\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 600 0) #(struct:point 600 450) #(struct:point 0"
 #" 450)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 45"
 #"6.5 241.0 #(struct:overlay #(struct:translate 8.5 14.0 #(struct:text"
 #" \"X\" 0 1 \"black\" 25 #f swiss normal normal #f)) #(struct:transla"
 #"te 8.5 14.0 #(struct:ellipse 15 15 0 255 \"black\")))) #(struct:tran"
 #"slate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #"
 #"(struct:point 600 450) #(struct:point 0 450)) #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0) #(struct:pu"
 #"lled-point 0 0 0 450 0 0)) outline #(struct:pen \"black\" 2 solid ro"
 #"und round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0) #(struct:pulled"
 #"-point 0 0 0 450 0 0)) 255 \"darkgray\")))))))))))))) #(struct:bb 60"
 #"0 450 450.0) #f)"
) 0 0 18 3 2 #" )"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 4 #"    "
0 0 18 29 1 #"\n"
0 0 18 3 34 #";; Sample expressions for draw-los"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 8 #"ILOS-VAL"
0 0 18 3 1 #" "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 6 #"define"
0 0 18 3 1 #" "
0 0 18 3 8 #"LOS2-VAL"
0 0 18 3 2 #" ("
0 0 18 3 9 #"draw-shot"
0 0 18 3 2 #" ("
0 0 18 3 5 #"first"
0 0 18 3 1 #" "
0 0 18 3 4 #"LOS2"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 29 #"                            ("
0 0 18 3 8 #"draw-los"
0 0 18 3 2 #" ("
0 0 18 3 4 #"rest"
0 0 18 3 1 #" "
0 0 18 3 4 #"LOS2"
0 0 18 3 2 #") "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 3 #")))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 47 #";; Tests using sample computations for draw-los"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 8 #"draw-los"
0 0 18 3 1 #" "
0 0 18 3 8 #"INIT-LOS"
0 0 18 3 1 #" "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 2 #") "
0 0 18 3 8 #"ILOS-VAL"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 3 1 #"("
0 0 18 3 12 #"check-expect"
0 0 18 3 2 #" ("
0 0 18 3 8 #"draw-los"
0 0 18 3 1 #" "
0 0 18 3 4 #"LOS2"
0 0 18 3 5 #"     "
0 0 18 3 7 #"E-SCENE"
0 0 18 3 2 #") "
0 0 18 3 8 #"LOS2-VAL"
0 0 18 3 1 #")"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 41 #";; Tests using sample values for draw-los"
0 0 18 29 1 #"\n"
0 9         205 18           0 0           0 33 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 8 #"draw-los"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 8 #"makeposn"
0 0 27 3 1 #" "
0 0 23 3 2 #"14"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #") "
0 0 14 3 5 #"empty"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 8 #"E-SCENE2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 19 #"                   "
0 0 14 3 3 #"..."
0 0 27 3 1 #")"
0           0 0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 2 #"|#"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; world --> scene"
0 0 27 29 1 #"\n"
0 0 18 3 40 #";; Purpose: To draw the world in E-SCENE"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 5 #"local"
0 0 27 3 3 #" [("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"E-SCENE-COLOR"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"pink"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"E-SCENE"
0 0 27 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-W"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-H"
0 0 27 3 1 #" "
0 0 14 3 13 #"E-SCENE-COLOR"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 18 3 40 #";; image image-x image-y image --> image"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 18 3 97 34 0 0 27 29 1 #"\n"
0 0 27 3 11 #"          ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 7 #"draw-ci"
0 0 27 3 1 #" "
0 0 14 3 8 #"char-img"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-img-x"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-img-y"
0 0 27 3 1 #" "
0 0 14 3 3 #"scn"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 16 3 5 #"local"
0 0 27 3 2 #" ["
0 0 18 3 22 #";; image-x --> pixel-x"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 55 #";; Purpose: To translate the given image-x to a pixel-x"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 14 #"image-x->pix-x"
0 0 27 3 1 #" "
0 0 14 3 2 #"ix"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 1 #"+"
0 0 27 3 2 #" ("
0 0 14 3 1 #"*"
0 0 27 3 1 #" "
0 0 14 3 2 #"ix"
0 0 27 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 3 #") ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 11 #"IMAGE-WIDTH"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 22 #";; image-y --> pixel-y"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 55 #";; Purpose: To translate the given image-y to a pixel-y"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 14 #"image-y->pix-y"
0 0 27 3 1 #" "
0 0 14 3 2 #"iy"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 1 #"+"
0 0 27 3 2 #" ("
0 0 14 3 1 #"*"
0 0 27 3 1 #" "
0 0 14 3 2 #"iy"
0 0 27 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 27 3 3 #") ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 12 #"IMAGE-HEIGHT"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 40 #";; image image-x image-y image --> image"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 97 34 0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 7 #"draw-ci"
0 0 27 3 1 #" "
0 0 14 3 8 #"char-img"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-img-x"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-img-y"
0 0 27 3 1 #" "
0 0 14 3 3 #"scn"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 11 #"place-image"
0 0 27 3 1 #" "
0 0 14 3 8 #"char-img"
0 0 27 3 2 #" ("
0 0 14 3 14 #"image-x->pix-x"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-img-x"
0 0 27 3 3 #") ("
0 0 14 3 14 #"image-y->pix-y"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-img-y"
0 0 27 3 2 #") "
0 0 14 3 3 #"scn"
0 0 27 3 3 #"))]"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 7 #"draw-ci"
0 0 27 3 1 #" "
0 0 14 3 8 #"char-img"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-img-x"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-img-y"
0 0 27 3 1 #" "
0 0 14 3 3 #"scn"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 18 3 22 #";; los scene --> scene"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 18 3 52 #";; Purpose: To draw the given los in the given scene"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 8 #"draw-los"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 1 #" "
0 0 14 3 3 #"scn"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 16 3 5 #"local"
0 0 27 3 2 #" ["
0 0 18 3 23 #";; shot scene --> scene"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 47 #";; Purpose: To draw the shot in the given scene"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 9 #"draw-shot"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 1 #" "
0 0 14 3 3 #"scn"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 14 3 3 #"scn"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 7 #"draw-ci"
0 0 27 3 1 #" "
0 0 14 3 8 #"SHOT-IMG"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 2 #") "
0 0 14 3 3 #"scn"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 22 #";; los scene --> scene"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 52 #";; Purpose: To draw the given los in the given scene"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 8 #"draw-los"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 1 #" "
0 0 14 3 3 #"scn"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 14 3 3 #"scn"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 9 #"draw-shot"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 38 #"                                     ("
0 0 14 3 8 #"draw-los"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 2 #") "
0 0 14 3 3 #"scn"
0 0 27 3 5 #"))))]"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 8 #"draw-los"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 1 #" "
0 0 14 3 3 #"scn"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 18 3 22 #";; loa scene --> scene"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 18 3 52 #";; Purpose: To draw the given loa in the given scene"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 8 #"draw-loa"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #" "
0 0 14 3 3 #"scn"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 16 3 5 #"local"
0 0 27 3 2 #" ["
0 0 18 3 24 #";; alien scene --> scene"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 51 #";; Purpose: Draw the given alien in the given scene"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 10 #"draw-alien"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 1 #" "
0 0 14 3 3 #"scn"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 7 #"draw-ci"
0 0 27 3 1 #" "
0 0 14 3 9 #"ALIEN-IMG"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                               ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                               ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                               "
0 0 14 3 3 #"scn"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 22 #";; loa scene --> scene"
0 0 27 29 1 #"\n"
0 0 27 3 20 #"                    "
0 0 18 3 52 #";; Purpose: To draw the given loa in the given scene"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 8 #"draw-loa"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #" "
0 0 14 3 3 #"scn"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 14 3 3 #"scn"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 10 #"draw-alien"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 3 #") ("
0 0 14 3 8 #"draw-loa"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #") "
0 0 14 3 3 #"scn"
0 0 27 3 5 #"))))]"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 8 #"draw-loa"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #" "
0 0 14 3 3 #"scn"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 18 3 19 #";; rocket --> scene"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"          "
0 0 18 3 49 #";; Purpose: To draw the rocket in the given scene"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 11 #"draw-rocket"
0 0 27 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-scene"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 7 #"draw-ci"
0 0 27 3 1 #" "
0 0 14 3 10 #"ROCKET-IMG"
0 0 27 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 27 3 1 #" "
0 0 14 3 8 #"ROCKET-Y"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-scene"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"          ("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 8 #"draw-los"
0 0 27 3 2 #" ("
0 0 14 3 11 #"world-shots"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 8 #"draw-loa"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                ("
0 0 14 3 11 #"draw-rocket"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                             "
0 0 14 3 7 #"E-SCENE"
0 0 27 3 5 #"))))]"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"    ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 36 #";; Sample expressions for draw-world"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"WORLD-SCN1"
0 0 27 3 3 #"  ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"WORLD-SCN2"
0 0 27 3 3 #"  ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 49 #";; Tests using sample computations for draw-world"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 3 #")  "
0 0 14 3 10 #"WORLD-SCN1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 2 #") "
0 0 14 3 10 #"WORLD-SCN2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 49 #";; Tests using sample computations for draw-world"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 2 #") "
0 0 14 3 4 #"DIR3"
0 0 27 3 1 #" "
0 0 14 3 5 #"empty"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 6           4 23 2282
(42
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 306.5 1.0 #(struct:overlay #(struct:tran"
 #"slate 8.5 14.0 #(struct:text \"X\" 0 1 \"black\" 25 #f swiss normal "
 #"normal #f)) #(struct:translate 8.5 14.0 #(struct:ellipse 15 15 0 255"
 #" \"black\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 600 0) #(struct:point 600 450) #(struct:point 0 "
 #"450)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 455"
 #".0 420.6698729810778 #(struct:crop (#(struct:point 0 0) #(struct:poi"
 #"nt 20.0 0) #(struct:point 20.0 28.66025403784439) #(struct:point 0 2"
 #"8.66025403784439)) #(struct:overlay #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 667/40 0 0) #(struct:pulled-point 0 0 20 667/40 0 0) #"
 #"(struct:pulled-point 0 0 20 957/40 0 0) #(struct:pulled-point 0 0 0 "
 #"957/40 0 0)) 255 \"red\") #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 20.0 0) #(struct:point 20.0 28.66025403784439) #(struct:poin"
 #"t 0 28.66025403784439)) #(struct:overlay #(struct:overlay #(struct:o"
 #"verlay #(struct:translate 10 5 #(struct:ellipse 3 10 0 255 \"darkgra"
 #"y\")) #(struct:translate 10 10 #(s"
 #"truct:ellipse 20 20 0 255 \"green\"))) #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 10.0 20.0 0 0) #(struct:pulled-point 0 0 0.0 20.0 0 0"
 #") #(struct:pulled-point 0 0 4.999999999999998 28.66025403784439 0 0)"
 #") 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 20.0 20."
 #"0 0 0) #(struct:pulled-point 0 0 10.0 20.0 0 0) #(struct:pulled-poin"
 #"t 0 0 14.999999999999998 28.66025403784439 0 0)) 255 \"red\")))))) #"
 #"(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 600 0) #(struct:point 600 450) #(struct:point 0 450)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0)"
 #" #(struct:pulled-point 0 0 0 450 "
 #"0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 600 0 0 0) #(struc"
 #"t:pulled-point 0 0 600 450 0 0) #(struct:pulled-point 0 0 0 450 0 0)"
 #") 255 \"pink\")))))))))))))) #(struct:bb 600 450 450.0) #f)"
) 0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ROCKET"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 27 3 2 #") "
0 0 14 3 4 #"DIR2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 6           4 23 3599
(43
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:p"
 #"oint 600 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 302.065686544842 212.06568654484198 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 14.878857103421021 10.989769"
 #"806895007 0 0) #(struct:pulled-point 0 0 18.291881508269274 0.0 0 0)"
 #" #(struct:pulled-point 0 0 12.934313455158016 10.184313455158012 0 0"
 #") #(struct:pulled-point 0 0 7.57674540204675 0.0 0 0) #(struct:pulle"
 #"d-point 0 0 10.98976980689501 10.989769806895007 0 0) #(struct:pulle"
 #"d-point 0 0 0.0 7.5767454020467575 0 0) #(struct:pulled-point 0 0 10"
 #".184313455158016 12.934313455158012 0 0) #(struct:pulled-point 0 0 1"
 #".7763568394002505e-015 18.29188150826927 0 0) #(struct:pulled-point "
 #"0 0 10.98976980689501 14.878857103421018 0 0) #(struct:pulled-point "
 #"0 0 7.576745402046759 25.868626910316024 0 0) #(struct:pulled-point "
 #"0 0 12.934313455158016 15.684313455158012 0 0) #(struct:pulled-point"
 #" 0 0 18.291881508269274 25.868626910316024 0 0) #(struct:pulled-poin"
 #"t 0 0 14.878857103421021 14.878857103421018 0 0) #(struct:pulled-poi"
 #"nt 0 0 25.868626910316028 18.29188150826927 0 0) #(struct:pulled-poi"
 #"nt 0 0 15.684313455158016 12.934313455158012 0 0) #(struct:pulled-po"
 #"int 0 0 25.868626910316028 7.576745402046754 0 0)) 255 \"orange\")) "
 #"#(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:p"
 #"oint 600 0) #(struct:point 600 450) #(struct:point 0 450)) #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 96.5 421.0 #(struc"
 #"t:overlay #(struct:translate 8.5 14.0 #(struct:text \"X\" 0 1 \"blac"
 #"k\" 25 #f swiss normal normal #f)) #(struct:translate 8.5 14.0 #(str"
 #"uct:ellipse 15 15 0 255 \"black\")))) #(struct:translate 0 0 #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 600 0) #(struct:point 600"
 #" 450) #(struct:point 0 450)) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 305.0 420.6698729810778 #(struct:crop (#(struct:"
 #"point 0 0) #(struct:point 20.0 0) #(struct:point 20.0 28.66025403784"
 #"439) #(struct:point 0 28.66025403784439)) #(struct:overlay #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 667/40 0 0) #(struct:pulled-poi"
 #"nt 0 0 20 667/40 0 0) #(struct:pulled-point 0 0 20 957/40 0 0) #(str"
 #"uct:pulled-point 0 0 0 957/40 0 0)) 255 \"red\") #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 20.0 0) #(struct:point 20.0 28.660254"
 #"03784439) #(struct:point 0 28.66025403784439)) #(struct:overlay #(st"
 #"ruct:overlay #(struct:overlay #(struct:translate 10 5 #(struct:ellip"
 #"se 3 10 0 255 \"darkgray\")) #(struct:translate 10 10 #(struct:ellip"
 #"se 20 20 0 255 \"green\"))) #(struct:polygon (#(struct:pulled-point "
 #"0 0 10.0 20.0 0 0) #(struct:pulled-point 0 0 0.0 20.0 0 0) #(struct:"
 #"pulled-point 0 0 4.999999999999998 28.66025403784439 0 0)) 255 \"red"
 #"\")) #(struct:polygon (#(struct:pulled-point 0 0 20.0 20.0 0 0) #(st"
 #"ruct:pulled-point 0 0 10.0 20.0 0 0) #(struct:pulled-point 0 0 14.99"
 #"9999999999998 28.66025403784439 0 0)) 255 \"red\")))))) #(struct:tra"
 #"nslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 600 0) "
 #"#(struct:point 600 450) #(struct:point 0 450)) #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0) #(struct:p"
 #"ulled-point 0 0 0 450 0 0)) outline #(struct:pen \"black\" 2 solid r"
 #"ound round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 600 0 0 0) #(struct:pulled-point 0 0 600 450 0 0) #(struct:pulle"
 #"d-point 0 0 0 450 0 0)) 255 \"pink\")))))))))))))))))) #(struct:bb 6"
 #"00 450 450.0) #f)"
) 0 0 27 3 2 #" )"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 27 #";; Key Processing Functions"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 20 #";; rocket --> rocket"
0 0 27 29 1 #"\n"
0 0 18 3 39 #";; Purpose: Move the given rocket right"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 15 #"move-rckt-right"
0 0 27 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 1 #"<"
0 0 27 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 4 #"add1"
0 0 27 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 14 3 8 #"a-rocket"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 41 #";; Sample expressions for move-rckt-right"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"ROCKET-VAL3"
0 0 27 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"ROCKET-VALMAX"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 54 #";; Tests using sample computations for move-rckt-right"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"move-rckt-right"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #") "
0 0 14 3 11 #"ROCKET-VAL3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"move-rckt-right"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 27 3 3 #")) "
0 0 14 3 13 #"ROCKET-VALMAX"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 48 #";; Tests using sample values for move-rckt-right"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"move-rckt-right"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #") "
0 0 23 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"move-rckt-right"
0 0 27 3 1 #" "
0 0 23 3 2 #"15"
0 0 27 3 2 #") "
0 0 23 3 2 #"16"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 20 #";; rocket --> rocket"
0 0 27 29 1 #"\n"
0 0 18 3 38 #";; Purpose: Move the given rocket left"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 14 #"move-rckt-left"
0 0 27 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 1 #">"
0 0 27 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 14 3 8 #"a-rocket"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 40 #";; Sample expressions for move-rckt-left"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"ROCKET-VAL7"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"ROCKET-VAL0"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 53 #";; Tests using sample computations for move-rckt-left"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"move-rckt-left"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 2 #") "
0 0 14 3 11 #"ROCKET-VAL7"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"move-rckt-left"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 2 #") "
0 0 23 3 1 #"0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 47 #";; Tests using sample values for move-rckt-left"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"move-rckt-left"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 27 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 27 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"move-rckt-left"
0 0 27 3 1 #" "
0 0 23 3 2 #"14"
0 0 27 3 2 #") "
0 0 23 3 2 #"13"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 23 #";; shot rocket --> shot"
0 0 27 29 1 #"\n"
0 0 18 3 32 #";; Purpose: To create a new shot"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 16 #"process-shooting"
0 0 27 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 8 #"a-rocket"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 18 3 42 #";; Sample expressions for process-shooting"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"PS-SHOT-VAL1"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ROCKET"
0 0 27 3 2 #"  "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"PS-SHOT2-VAL"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 55 #";; Tests using sample computations for process-shooting"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 16 #"process-shooting"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ROCKET"
0 0 27 3 3 #")  "
0 0 14 3 12 #"PS-SHOT-VAL1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 16 #"process-shooting"
0 0 27 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 27 3 2 #") "
0 0 14 3 12 #"PS-SHOT2-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 49 #";; Tests using sample values for process-shooting"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 16 #"process-shooting"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 4 #")  ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 2 #"  "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 16 #"process-shooting"
0 0 27 3 1 #" "
0 0 23 3 2 #"16"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"16"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 22 #";; world key --> world"
0 0 27 29 1 #"\n"
0 0 18 3 52 #";; Purpose: Process a key event to return next world"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 27 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 27 3 1 #" "
0 0 20 3 7 #"\"right\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"         ("
0 0 14 3 10 #"make-world"
0 0 27 3 2 #" ("
0 0 14 3 15 #"move-rckt-right"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 11 #"world-shots"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 3 #"))]"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 27 3 1 #" "
0 0 20 3 6 #"\"left\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"         ("
0 0 14 3 10 #"make-world"
0 0 27 3 2 #" ("
0 0 14 3 14 #"move-rckt-left"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 11 #"world-shots"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 3 #"))]"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 27 3 1 #" "
0 0 20 3 3 #"\" \""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"         ("
0 0 14 3 10 #"make-world"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 16 #"process-shooting"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                           ("
0 0 14 3 11 #"world-shots"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 8 #")))]    "
0 0 27 3 21 #"                     "
0 0 27 29 1 #"\n"
0 0 27 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 3 #"]))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 37 #";; Sample expressions for process-key"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"KEY-RVAL"
0 0 27 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 27 3 2 #" ("
0 0 14 3 15 #"move-rckt-right"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 11 #"world-shots"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"KEY-LVAL"
0 0 27 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 27 3 2 #" ("
0 0 14 3 14 #"move-rckt-left"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 11 #"world-shots"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"KEY-SVAL"
0 0 27 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 16 #"process-shooting"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 37 #"                                    ("
0 0 14 3 11 #"world-shots"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"KEY-SVAL2"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 16 #"process-shooting"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 37 #"                                    ("
0 0 14 3 11 #"world-shots"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"KEY-OVAL"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #" "
0 0 27 29 1 #"\n"
0 0 18 3 50 #";; Tests using sample computations for process-key"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 2 #"  "
0 0 20 3 7 #"\"right\""
0 0 27 3 2 #") "
0 0 14 3 8 #"KEY-RVAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 2 #"  "
0 0 20 3 6 #"\"left\""
0 0 27 3 3 #")  "
0 0 14 3 8 #"KEY-LVAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 1 #" "
0 0 20 3 3 #"\"m\""
0 0 27 3 6 #")     "
0 0 14 3 8 #"KEY-OVAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 2 #"  "
0 0 20 3 3 #"\" \""
0 0 27 3 2 #") "
0 0 14 3 8 #"KEY-SVAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 1 #" "
0 0 20 3 3 #"\" \""
0 0 27 3 2 #") "
0 0 14 3 9 #"KEY-SVAL2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 44 #";; Tests using sample values for process-key"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                       "
0 0 14 3 8 #"INIT-LOA"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                       "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                       "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                           "
0 0 20 3 7 #"\"right\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 14 3 8 #"INIT-LOA"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                       "
0 0 14 3 8 #"INIT-LOA"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                       "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                       "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                           "
0 0 20 3 6 #"\"left\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 14 3 8 #"INIT-LOA"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                       "
0 0 14 3 8 #"INIT-LOA"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                       "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                       "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                           "
0 0 20 3 3 #"\"o\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 14 3 8 #"INIT-LOA"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 1 #" "
0 0 20 3 3 #"\";\""
0 0 27 3 2 #") "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                       "
0 0 14 3 8 #"INIT-LOA"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                       "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                       "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                           "
0 0 20 3 3 #"\" \""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 14 3 8 #"INIT-LOA"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 5 #"())))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 11 #"process-key"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                       "
0 0 14 3 8 #"INIT-LOA"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                       "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                       ("
0 0 14 3 4 #"cons"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT2"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 4 #"()))"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                           "
0 0 20 3 6 #"\"left\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 14 3 8 #"INIT-LOA"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT2"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 5 #"())))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #" "
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; TICK PROCESSING"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 29 #";; image-x<max \\arrow image-x"
0 0 27 29 1 #"\n"
0 0 18 3 44 #";; Purpose: Move the given image-x<max right"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 18 #"move-right-image-x"
0 0 27 3 1 #" "
0 0 14 3 12 #"an-img-x<max"
0 0 27 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 27 3 1 #" "
0 0 14 3 12 #"an-img-x<max"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 48 #";; Sample expressions for move-right-image-x<max"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"IMGX<MAX-VALR1"
0 0 27 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"IMGX<MAX-VALR2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 64
#";; Sample tests using sample computations for move-right-image-x"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"move-right-image-x"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 2 #") "
0 0 14 3 14 #"IMGX<MAX-VALR1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"move-right-image-x"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 9 #")        "
0 0 14 3 14 #"IMGX<MAX-VALR2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 64
#";; Sample tests using sample computations for move-right-image-x"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"move-right-image-x"
0 0 27 3 1 #" "
0 0 23 3 2 #"12"
0 0 27 3 2 #") "
0 0 23 3 2 #"13"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 29 #";; image-x>min \\arrow image-x"
0 0 27 29 1 #"\n"
0 0 18 3 43 #";; Purpose: Move the given image-x>min left"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 17 #"move-left-image-x"
0 0 27 3 1 #" "
0 0 14 3 12 #"an-img-x>min"
0 0 27 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 12 #"an-img-x>min"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 3 1 #" "
0 0 27 29 1 #"\n"
0 0 18 3 43 #";; Sample expressions for move-left-image-x"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"IMGX>MIN-VALL1"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 8 #"AN-IMG-X"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"IMGX>MIN-VALL2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"   "
0 0 27 3 2 #"  "
0 0 27 29 1 #"\n"
0 0 18 3 56 #";; Tests using sample computations for move-left-image-x"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"move-left-image-x"
0 0 27 3 1 #" "
0 0 14 3 8 #"AN-IMG-X"
0 0 27 3 3 #")  "
0 0 14 3 14 #"IMGX>MIN-VALL1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"move-left-image-x"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 2 #") "
0 0 14 3 14 #"IMGX>MIN-VALL2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 50 #";; Tests using sample values for move-left-image-x"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"move-left-image-x"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 2 #") "
0 0 23 3 1 #"8"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 29 #";; image-y<max \\arrow image-y"
0 0 27 29 1 #"\n"
0 0 18 3 46 #";; Purpose: To move the given image-y<max down"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 17 #"move-down-image-y"
0 0 27 3 1 #" "
0 0 14 3 12 #"an-img-y<max"
0 0 27 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 27 3 1 #" "
0 0 14 3 12 #"an-img-y<max"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 43 #";; Sample expressions for move-down-image-y"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"IMG-Y<MAX1"
0 0 27 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-Y"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"IMG-Y<MAX2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 27 3 1 #" "
0 0 14 3 8 #"AN-IMG-Y"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 56 #";; Tests using sample computations for move-down-image-y"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"move-down-image-y"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-Y"
0 0 27 3 2 #") "
0 0 14 3 10 #"IMG-Y<MAX1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"move-down-image-y"
0 0 27 3 1 #" "
0 0 14 3 8 #"AN-IMG-Y"
0 0 27 3 3 #")  "
0 0 14 3 10 #"IMG-Y<MAX2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 50 #";; Tests using sample values for move-down-image-y"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"move-down-image-y"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #")  "
0 0 23 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 26 #";; image-y>min --> image-y"
0 0 27 29 1 #"\n"
0 0 18 3 44 #";; Purpose: To move the given image-y>min up"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 15 #"move-up-image-y"
0 0 27 3 1 #" "
0 0 14 3 12 #"an-img-y>min"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 12 #"an-img-y>min"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 41 #";; Sample expressions for move-up-image-y"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"IMGY>MIN-VAL1"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 10 #"IMG-Y>MIN1"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"IMGY>MIN-VAL2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 10 #"IMG-Y>MIN2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 54 #";; Tests using sample computations for move-up-image-y"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"move-up-image-y"
0 0 27 3 1 #" "
0 0 14 3 8 #"AN-IMG-Y"
0 0 27 3 3 #")  "
0 0 14 3 13 #"IMGY>MIN-VAL1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"move-up-image-y"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 2 #") "
0 0 14 3 13 #"IMGY>MIN-VAL2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 49 #";; Tests using sample values for f-on-image-y>min"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"move-up-image-y"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 3 #")  "
0 0 23 3 1 #"5"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"move-up-image-y"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 2 #") "
0 0 23 3 2 #"10"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 2 #"  "
0 0 27 3 2 #"  "
0 0 27 29 1 #"\n"
0 0 18 3 22 #";; alien dir --> alien"
0 0 27 29 1 #"\n"
0 0 18 3 47 #";; Purpose: Move given alien in given direction"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-dir"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 27 3 3 #" [("
0 0 14 3 3 #"eq?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-dir"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"         ("
0 0 14 3 9 #"make-posn"
0 0 27 3 2 #" ("
0 0 14 3 18 #"move-right-image-x"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 3 #"))]"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"        [("
0 0 14 3 3 #"eq?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-dir"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"         ("
0 0 14 3 9 #"make-posn"
0 0 27 3 2 #" ("
0 0 14 3 17 #"move-left-image-x"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 3 #"))]"
0 0 27 29 1 #"\n"
0 0 27 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                         ("
0 0 14 3 17 #"move-down-image-y"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 6 #")))]))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 36 #";; Sample expressions for move-alien"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"MALIEN-VAL1-1"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 2 #" ("
0 0 14 3 18 #"move-right-image-x"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"MALIEN-VAL1-2"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 2 #" ("
0 0 14 3 18 #"move-right-image-x"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"MALIEN-VAL2-1"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 2 #" ("
0 0 14 3 17 #"move-left-image-x"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"MALIEN-VAL2-2"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 2 #" ("
0 0 14 3 17 #"move-left-image-x"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"MALIEN-VAL3-1"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 17 #"move-down-image-y"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"MALIEN-VAL3-2"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 17 #"move-down-image-y"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 49 #";; Tests using sample computations for move-alien"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 2 #") "
0 0 14 3 13 #"MALIEN-VAL1-1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 27 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 2 #") "
0 0 14 3 13 #"MALIEN-VAL1-2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 3 #")  "
0 0 14 3 13 #"MALIEN-VAL2-1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 3 #")  "
0 0 14 3 13 #"MALIEN-VAL2-2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 3 #")  "
0 0 14 3 13 #"MALIEN-VAL3-1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 3 #")  "
0 0 14 3 13 #"MALIEN-VAL3-2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 43 #";; Tests using sample values for move-alien"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 27 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 2 #") "
0 0 23 3 1 #"3"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; loa dir --> loa"
0 0 27 29 1 #"\n"
0 0 18 3 50 #";; Purpose: To move the given loa in the given dir"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-loa"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #" "
0 0 14 3 3 #"dir"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 23 3 1 #"'"
0 0 27 3 2 #"()"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #") "
0 0 14 3 3 #"dir"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #") "
0 0 14 3 3 #"dir"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 18 3 34 #";; Sample expressions for move-loa"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"MELOA-VAL"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"MILOA-VAL"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 25 #"                        ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"MILOA-VAL2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                         ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"MILOA-VAL3"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 10 #"move-alien"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                         ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 47 #";; Tests using sample computations for move-loa"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-loa"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 2 #") "
0 0 14 3 9 #"MELOA-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-loa"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 3 #")  "
0 0 14 3 9 #"MILOA-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-loa"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 2 #") "
0 0 14 3 10 #"MILOA-VAL2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-loa"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 3 #")  "
0 0 14 3 10 #"MILOA-VAL3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 41 #";; Tests using sample values for move-loa"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 4 #"()))"
0 0 27 29 1 #"\n"
0 0 27 3 24 #"                        "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 5 #"())))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 4 #"()))"
0 0 27 29 1 #"\n"
0 0 27 3 24 #"                        "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 5 #"())))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 4 #"()))"
0 0 27 29 1 #"\n"
0 0 27 3 24 #"                        "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 8 #"())))   "
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 20 #";; alien --> Boolean"
0 0 27 29 1 #"\n"
0 0 18 3 60
#";; Purpose: Determine if he given alien is at the right edge"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 2 #") "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 46 #";; Sample expressions for alien-at-right-edge?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"REDGE-VAL1"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 2 #") "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"REDGE-VAL2"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 3 #")) "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 59
#";; Tests using sample computations for alien-at-right-edge?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 8 #")       "
0 0 14 3 10 #"REDGE-VAL1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 27 3 1 #" "
0 0 14 3 16 #"RIGHT-EDGE-ALIEN"
0 0 27 3 2 #") "
0 0 14 3 10 #"REDGE-VAL2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 53 #";; Tests using sample values for alien-at-right-edge?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 4 #"))  "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 27 3 1 #" "
0 0 14 3 16 #"RIGHT-EDGE-ALIEN"
0 0 27 3 2 #") "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; loa --> Boolean"
0 0 27 29 1 #"\n"
0 0 18 3 62
#";; Purpose: To determine if any alien is at scene's right edge"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-at-right-edge?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 24 #"any-alien-at-right-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 18 3 50 #";; Sample expressions for any-alien-at-right-edge?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"EDGE-E-LOA-VAL"
0 0 27 3 5 #"    ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                               ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 27 3 6 #"     ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 24 #"any-alien-at-right-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 17 #"EDGE-INIT-LOA-VAL"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                               ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 27 3 6 #"     ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 24 #"any-alien-at-right-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"EDGE-LOA-VAL"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 8 #"EDGE-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 27 3 6 #"     ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 8 #"EDGE-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 24 #"any-alien-at-right-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 8 #"EDGE-LOA"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"EDGE-LOA2-VAL"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 9 #"EDGE-LOA2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                           ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-at-right-edge?"
0 0 27 3 6 #"     ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 9 #"EDGE-LOA2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                               ("
0 0 14 3 24 #"any-alien-at-right-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 9 #"EDGE-LOA2"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 59
#";; Tests using sample computations any-alien-at-right-edge?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-at-right-edge?"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 6 #")     "
0 0 14 3 14 #"EDGE-E-LOA-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-at-right-edge?"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 3 #")  "
0 0 14 3 17 #"EDGE-INIT-LOA-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-at-right-edge?"
0 0 27 3 1 #" "
0 0 14 3 8 #"EDGE-LOA"
0 0 27 3 3 #")  "
0 0 14 3 12 #"EDGE-LOA-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-at-right-edge?"
0 0 27 3 1 #" "
0 0 14 3 9 #"EDGE-LOA2"
0 0 27 3 2 #") "
0 0 14 3 13 #"EDGE-LOA2-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 57 #";; Tests using sample values for any-alien-at-right-edge?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-at-right-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 47 #"                                              ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 47 #"                                              ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-at-right-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #"  "
0 0 23 3 1 #"8"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 47 #"                                              ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 2 #"  "
0 0 23 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 47 #"                                              ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-at-right-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-Y"
0 0 27 3 2 #"  "
0 0 23 3 1 #"8"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-at-right-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #"  "
0 0 23 3 1 #"8"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 47 #"                                              ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 18 3 20 #";; alien --> Boolean"
0 0 27 29 1 #"\n"
0 0 18 3 59
#";; Purpose: Determine if he given alien is at the left edge"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 2 #") "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 45 #";; Sample expressions for alien-at-left-edge?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"LEDGE-VAL1"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 2 #") "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"LEDGE-VAL2"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 15 #"LEFT-EDGE-ALIEN"
0 0 27 3 2 #") "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 58
#";; Tests using sample computations for alien-at-left-edge?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 2 #") "
0 0 14 3 10 #"LEDGE-VAL1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 27 3 1 #" "
0 0 14 3 15 #"LEFT-EDGE-ALIEN"
0 0 27 3 2 #") "
0 0 14 3 10 #"LEDGE-VAL2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 52 #";; Tests using sample values for alien-at-left-edge?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #")) "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 3 #")) "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; loa --> Boolean"
0 0 27 29 1 #"\n"
0 0 18 3 61
#";; Purpose: To determine if any alien is at scene's left edge"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 18 3 49 #";; Sample expressions for any-alien-at-left-edge?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 15 #"LEDGE-E-LOA-VAL"
0 0 27 3 5 #"    ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 27 3 6 #"     ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 37 #"                                    ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 18 #"LEDGE-INIT-LOA-VAL"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 27 3 6 #"     ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 37 #"                                    ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"LEDGE-LOA-VAL"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 8 #"EDGE-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                           ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 27 3 6 #"     ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 8 #"EDGE-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                               ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 8 #"EDGE-LOA"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"LEDGE-LOA2-VAL"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 9 #"EDGE-LOA2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 19 #"alien-at-left-edge?"
0 0 27 3 6 #"     ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 9 #"EDGE-LOA2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 9 #"EDGE-LOA2"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 58
#";; Tests using sample computations any-alien-at-left-edge?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 5 #")    "
0 0 14 3 15 #"LEDGE-E-LOA-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #") "
0 0 14 3 18 #"LEDGE-INIT-LOA-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 1 #" "
0 0 14 3 8 #"EDGE-LOA"
0 0 27 3 2 #") "
0 0 14 3 13 #"LEDGE-LOA-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 1 #" "
0 0 14 3 9 #"EDGE-LOA2"
0 0 27 3 2 #") "
0 0 14 3 14 #"LEDGE-LOA2-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 56 #";; Tests using sample values for any-alien-at-left-edge?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 46 #"                                             ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 46 #"                                             ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #"  "
0 0 23 3 1 #"8"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 46 #"                                             ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 46 #"                                             ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 46 #"                                             ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 20 #";; loa --> direction"
0 0 27 29 1 #"\n"
0 0 18 3 52 #";; Purpose: Compute the direction of the given alien"
0 0 27 29 1 #"\n"
0 0 18 3 43 #";;          when previous direction is down"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-down"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 44 #";; Sample expressions for new-dir-after-down"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"AT-LEDGE-DOWN"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"AT-REDGE-DOWN"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 57 #";; Tests using sample computations for new-dir-after-down"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-down"
0 0 27 3 1 #" "
0 0 14 3 9 #"EDGE-LOA2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 13 #"AT-REDGE-DOWN"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-down"
0 0 27 3 1 #" "
0 0 14 3 8 #"EDGE-LOA"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 13 #"AT-LEDGE-DOWN"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 51 #";; Tests using sample values for new-dir-after-down"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-down"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-down"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 22 #";; alien --> direction"
0 0 27 29 1 #"\n"
0 0 18 3 52 #";; Purpose: Compute the direction of the given alien"
0 0 27 29 1 #"\n"
0 0 18 3 43 #";;          when previous direction is left"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-left"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 23 #"any-alien-at-left-edge?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 44 #";; Sample expressions for new-dir-after-left"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"AT-LEDGE"
0 0 27 3 5 #"     "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"NOT-AT-LEDGE"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 57 #";; Tests using sample computations for new-dir-after-left"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-left"
0 0 27 3 1 #" "
0 0 14 3 8 #"EDGE-LOA"
0 0 27 3 2 #") "
0 0 14 3 8 #"AT-LEDGE"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-left"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 51 #";; Tests using sample values for new-dir-after-left"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-left"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 16 #"RIGHT-EDGE-ALIEN"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 20 #";; loa --> direction"
0 0 27 29 1 #"\n"
0 0 18 3 50 #";; Purpose: Compute the direction of the given loa"
0 0 27 29 1 #"\n"
0 0 18 3 44 #";;          when previous direction is right"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 19 #"new-dir-after-right"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-at-right-edge?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 45 #";; Sample expressions for new-dir-after-right"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"AT-REDGE"
0 0 27 3 5 #"     "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"NOT-AT-REDGE"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 58
#";; Tests using sample computations for new-dir-after-right"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 19 #"new-dir-after-right"
0 0 27 3 1 #" "
0 0 14 3 9 #"EDGE-LOA2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 8 #"AT-REDGE"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 19 #"new-dir-after-right"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 12 #"NOT-AT-REDGE"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 52 #";; Tests using sample values for new-dir-after-right"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 19 #"new-dir-after-right"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 15 #"LEFT-EDGE-ALIEN"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; loa dir --> dir"
0 0 27 29 1 #"\n"
0 0 18 3 39 #";; Purpose: Return new aliens direction"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #" "
0 0 14 3 7 #"old-dir"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 27 3 3 #" [("
0 0 14 3 3 #"eq?"
0 0 27 3 1 #" "
0 0 14 3 7 #"old-dir"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"         ("
0 0 14 3 18 #"new-dir-after-down"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #")]"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"        [("
0 0 14 3 3 #"eq?"
0 0 27 3 1 #" "
0 0 14 3 7 #"old-dir"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"         ("
0 0 14 3 18 #"new-dir-after-left"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #")]"
0 0 27 29 1 #"\n"
0 0 27 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 27 3 2 #" ("
0 0 14 3 19 #"new-dir-after-right"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 4 #")]))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 44 #";; Sample expressions for new-dir-after-tick"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 21 #"NEW-DIR-EDGE-LOA-DOWN"
0 0 27 3 4 #"   ("
0 0 14 3 18 #"new-dir-after-down"
0 0 27 3 1 #" "
0 0 14 3 8 #"EDGE-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 22 #"NEW-DIR-EDGE-LOA2-DOWN"
0 0 27 3 3 #"  ("
0 0 14 3 18 #"new-dir-after-down"
0 0 27 3 1 #" "
0 0 14 3 9 #"EDGE-LOA2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 21 #"NEW-DIR-INIT-LOA-LEFT"
0 0 27 3 4 #"   ("
0 0 14 3 18 #"new-dir-after-left"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 21 #"NEW-DIR-EDGE-LOA-LEFT"
0 0 27 3 4 #"   ("
0 0 14 3 18 #"new-dir-after-left"
0 0 27 3 1 #" "
0 0 14 3 8 #"EDGE-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 22 #"NEW-DIR-INIT-LOA-RIGHT"
0 0 27 3 3 #"  ("
0 0 14 3 19 #"new-dir-after-right"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 23 #"NEW-DIR-EDGE-LOA2-RIGHT"
0 0 27 3 2 #" ("
0 0 14 3 19 #"new-dir-after-right"
0 0 27 3 1 #" "
0 0 14 3 9 #"EDGE-LOA2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 57 #";; Tests using sample computations for new-dir-after-tick"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 1 #" "
0 0 14 3 8 #"EDGE-LOA"
0 0 27 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 21 #"NEW-DIR-EDGE-LOA-DOWN"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 1 #" "
0 0 14 3 9 #"EDGE-LOA2"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 22 #"NEW-DIR-EDGE-LOA2-DOWN"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 21 #"NEW-DIR-INIT-LOA-LEFT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 1 #" "
0 0 14 3 8 #"EDGE-LOA"
0 0 27 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 21 #"NEW-DIR-EDGE-LOA-LEFT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"  "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 22 #"NEW-DIR-INIT-LOA-RIGHT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 1 #" "
0 0 14 3 9 #"EDGE-LOA2"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 23 #"NEW-DIR-EDGE-LOA2-RIGHT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 18 3 51 #";; Tests using sample values for new-dir-after-tick"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 3 #")) "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 2 #"12"
0 0 27 3 3 #")) "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 3 #")) "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 2 #"15"
0 0 27 3 3 #")) "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 2 #"14"
0 0 27 3 3 #")) "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #")) "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 16 #";; shot --> shot"
0 0 27 29 1 #"\n"
0 0 18 3 34 #";; Purpose: To move the given shot"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 9 #"move-shot"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 27 3 3 #" [("
0 0 14 3 3 #"eq?"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 2 #") "
0 0 14 3 6 #"a-shot"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"        [("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 2 #") "
0 0 14 3 9 #"MIN-IMG-Y"
0 0 27 3 2 #") "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 3 #") ("
0 0 14 3 15 #"move-up-image-y"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 6 #")))]))"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 18 3 35 #";; Sample expressions for move-shot"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"MSHOT1-VAL"
0 0 27 3 1 #" "
0 0 14 3 9 #"INIT-SHOT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"MSHOT2-VAL"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT2"
0 0 27 3 3 #") ("
0 0 14 3 15 #"move-up-image-y"
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT2"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"MSHOT4-VAL"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 48 #";; Tests using sample computations for move-shot"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 9 #"move-shot"
0 0 27 3 1 #" "
0 0 14 3 9 #"INIT-SHOT"
0 0 27 3 2 #") "
0 0 14 3 10 #"MSHOT1-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 9 #"move-shot"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT2"
0 0 27 3 2 #") "
0 0 14 3 10 #"MSHOT2-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 9 #"move-shot"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT4"
0 0 27 3 2 #") "
0 0 14 3 10 #"MSHOT4-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 42 #";; Tests using sample values for move-shot"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 9 #"move-shot"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 9 #"move-shot"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-Y"
0 0 27 3 3 #")) "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 14 #";; los --> los"
0 0 27 29 1 #"\n"
0 0 18 3 43 #";; Purpose: To move the given list of shots"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-los"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 6 #"      "
0 0 23 3 1 #"'"
0 0 27 3 2 #"()"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"move-shot"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 8 #"move-los"
0 0 27 3 3 #"  ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 18 3 34 #";; Sample expressions for move-los"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"MLOS1-VAL"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"MLOS2-VAL"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"move-shot"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOS2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 25 #"                        ("
0 0 14 3 8 #"move-los"
0 0 27 3 3 #"  ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOS2"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 47 #";; Tests using sample computations for move-los"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-los"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 2 #") "
0 0 14 3 9 #"MLOS1-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-los"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOS2"
0 0 27 3 6 #")     "
0 0 14 3 9 #"MLOS2-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 41 #";; Tests using sample values for move-los"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-los"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"12"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 4 #"cons"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 5 #"())))"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"12"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 5 #"())))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 19 #";; shot --> Boolean"
0 0 27 29 1 #"\n"
0 0 18 3 66
#";; Purpose: To determine if the given shot has hit the given alien"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 5 #"posn?"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 18 3 30 #";; Sample expressions for hit?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"NHIT-VAL"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 5 #"posn?"
0 0 27 3 1 #" "
0 0 14 3 9 #"INIT-SHOT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 9 #"INIT-SHOT"
0 0 27 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 9 #"INIT-SHOT"
0 0 27 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"HIT-VAL"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 5 #"posn?"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT3"
0 0 27 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 27 3 1 #" "
0 0 14 3 6 #"ALIEN3"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT3"
0 0 27 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 6 #"ALIEN3"
0 0 27 3 9 #"))))     "
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 43 #";; Tests using sample computations for hit?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 27 3 1 #" "
0 0 14 3 9 #"INIT-SHOT"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 2 #") "
0 0 14 3 8 #"NHIT-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT3"
0 0 27 3 1 #" "
0 0 14 3 6 #"ALIEN3"
0 0 27 3 2 #") "
0 0 14 3 7 #"HIT-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 37 #";; Tests using sample values for hit?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 4 #")  ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 3 #")) "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"15"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #")) "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 24 #";; alien los --> Boolean"
0 0 27 29 1 #"\n"
0 0 18 3 79
(44
 #";; Purpose: To determine if the given alien is hit by any shot in th"
 #"e given los"
) 0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 16 #"hit-by-any-shot?"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 2 #") "
0 0 14 3 8 #"an-alien"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 16 #"hit-by-any-shot?"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 18 3 42 #";; Sample expressions for hit-by-any-shot?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"HIT-LOS1-VAL"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOS2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOS2"
0 0 27 3 2 #") "
0 0 14 3 9 #"ALIEN-8-0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 16 #"hit-by-any-shot?"
0 0 27 3 1 #" "
0 0 14 3 9 #"ALIEN-8-0"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOS2"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"HIT-LOS2-VAL"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 2 #") "
0 0 14 3 9 #"ALIEN-8-0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 16 #"hit-by-any-shot?"
0 0 27 3 1 #" "
0 0 14 3 9 #"ALIEN-8-0"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 55 #";; Tests using sample computations for hit-by-any-shot?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 16 #"hit-by-any-shot?"
0 0 27 3 1 #" "
0 0 14 3 9 #"ALIEN-8-0"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOS2"
0 0 27 3 6 #")     "
0 0 14 3 12 #"HIT-LOS1-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 16 #"hit-by-any-shot?"
0 0 27 3 1 #" "
0 0 14 3 9 #"ALIEN-8-0"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 2 #") "
0 0 14 3 12 #"HIT-LOS2-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 49 #";; Tests using sample values for hit-by-any-shot?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 16 #"hit-by-any-shot?"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #") ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 5 #")))  "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 16 #"hit-by-any-shot?"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 3 #") ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 4 #"))) "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; loa los --> loa"
0 0 27 29 1 #"\n"
0 0 18 3 84
(45
 #";; Purpose: To remove the aliens from the given loa hit by any shot "
 #"in the given los"
) 0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 17 #"remove-hit-aliens"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 27 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 3 #"()]"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"        [("
0 0 14 3 16 #"hit-by-any-shot?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #") "
0 0 14 3 5 #"a-los"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"         ("
0 0 14 3 17 #"remove-hit-aliens"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #") "
0 0 14 3 5 #"a-los"
0 0 27 3 2 #")]"
0 0 27 29 1 #"\n"
0 0 27 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 17 #"remove-hit-aliens"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #") "
0 0 14 3 5 #"a-los"
0 0 27 3 5 #"))]))"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 18 3 43 #";; Sample expressions for remove-hit-aliens"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"EMP-LOA-VAL"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 3 #"())"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"INIT-LOA-VAL"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                           ("
0 0 14 3 17 #"remove-hit-aliens"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #") "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"INIT-LOA-VAL2"
0 0 27 3 2 #" ("
0 0 14 3 17 #"remove-hit-aliens"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #") "
0 0 14 3 4 #"LOS2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 56 #";; Tests using sample computations for remove-hit-aliens"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"remove-hit-aliens"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOS2"
0 0 27 3 2 #") "
0 0 14 3 11 #"EMP-LOA-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"remove-hit-aliens"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 2 #") "
0 0 14 3 12 #"INIT-LOA-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"remove-hit-aliens"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOS2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 13 #"INIT-LOA-VAL2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 50 #";; Tests using sample values for remove-hit-aliens"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"remove-hit-aliens"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                       ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 46 #"                                             ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 52 #"                                                   ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 6 #"()))))"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                       ("
0 0 14 3 4 #"cons"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 29 1 #"\n"
0 0 27 3 46 #"                                             ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 6 #"()))))"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 5 #"())))"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"     "
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"remove-hit-aliens"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                       ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 46 #"                                             ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 5 #"())))"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                       ("
0 0 14 3 4 #"cons"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 29 1 #"\n"
0 0 27 3 46 #"                                             ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 6 #"()))))"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 6 #"()))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 23 #";; shot loa --> Boolean"
0 0 27 29 1 #"\n"
0 0 18 3 77
(46
 #";; Purpose: To determine if the given shot has hit any alien in the "
 #"given loa"
) 0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 14 #"hit-any-alien?"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 14 #"hit-any-alien?"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-shot"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT5"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 18 3 40 #";; Sample expressions for hit-any-alien?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"HIT-ANY-ALIEN0"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                ("
0 0 14 3 14 #"hit-any-alien?"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"HIT-ANY-ALIEN1"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT3"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                ("
0 0 14 3 14 #"hit-any-alien?"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"HIT-ANY-ALIEN2"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                ("
0 0 14 3 14 #"hit-any-alien?"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"HIT-ANY-ALIEN3"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 4 #"hit?"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT5"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 33 #"                                ("
0 0 14 3 14 #"hit-any-alien?"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT5"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 53 #";; Tests using sample computations for hit-any-alien?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"hit-any-alien?"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 5 #")    "
0 0 14 3 14 #"HIT-ANY-ALIEN0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"hit-any-alien?"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT3"
0 0 27 3 3 #"   "
0 0 14 3 5 #"E-LOA"
0 0 27 3 5 #")    "
0 0 14 3 14 #"HIT-ANY-ALIEN1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"hit-any-alien?"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #") "
0 0 14 3 14 #"HIT-ANY-ALIEN2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"hit-any-alien?"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT5"
0 0 27 3 3 #"   "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #") "
0 0 14 3 14 #"HIT-ANY-ALIEN3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 47 #";; Tests using sample values for hit-any-alien?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"hit-any-alien?"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 37 #"                                    ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 37 #"                                    ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"hit-any-alien?"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 37 #"                                    ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 37 #"                                    ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 14 #"hit-any-alien?"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 37 #"                                    ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 37 #"                                    ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; los loa --> los"
0 0 27 29 1 #"\n"
0 0 18 3 57 #";; Purpose: To remove hit and NO-SHOTs from the given loa"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 12 #"remove-shots"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 27 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 2 #") "
0 0 14 3 5 #"a-los"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"        [("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 2 #") "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 14 #"hit-any-alien?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 2 #") "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"         ("
0 0 14 3 12 #"remove-shots"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 2 #") "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #")]"
0 0 27 29 1 #"\n"
0 0 27 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 27 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 3 #") ("
0 0 14 3 12 #"remove-shots"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-los"
0 0 27 3 2 #") "
0 0 14 3 5 #"a-loa"
0 0 27 3 5 #"))]))"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"     "
0 0 27 29 1 #"\n"
0 0 18 3 38 #";; Sample expressions for remove-shots"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 15 #"RM-INIT-LOS-VAL"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"RM-LOS2-VAL"
0 0 27 3 6 #"     ("
0 0 14 3 12 #"remove-shots"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOS2"
0 0 27 3 2 #") "
0 0 14 3 4 #"LOA3"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"RM-LOS2-VAL2"
0 0 27 3 5 #"    ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 12 #"remove-shots"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOS2"
0 0 27 3 2 #") "
0 0 14 3 4 #"LOA4"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 51 #";; Tests using sample computations for remove-shots"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"remove-shots"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #") "
0 0 14 3 15 #"RM-INIT-LOS-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"remove-shots"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOS2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 11 #"RM-LOS2-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"remove-shots"
0 0 27 3 1 #" "
0 0 14 3 4 #"LOS2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 12 #"RM-LOS2-VAL2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"     "
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 45 #";; Tests using sample values for remove-shots"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"remove-shots"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                            "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"remove-shots"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"13"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 28 #"                            "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 1 #"'"
0 0 27 3 3 #"())"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"     "
0 0 27 29 1 #"\n"
0 0 27 3 5 #"     "
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; world --> world"
0 0 27 29 1 #"\n"
0 0 18 3 49 #";; Purpose: Create a new world after a clock tick"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 12 #"process-tick"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 17 #"remove-hit-aliens"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 3 #") ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                                 ("
0 0 14 3 8 #"move-los"
0 0 27 3 2 #" ("
0 0 14 3 11 #"world-shots"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                            ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 35 #"                                  ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 12 #"remove-shots"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-los"
0 0 27 3 2 #" ("
0 0 14 3 11 #"world-shots"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                      ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 38 #";; Sample expressions for process-tick"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 17 #"AFTER-TICK-WORLD1"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                      ("
0 0 14 3 17 #"remove-hit-aliens"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 68
#"                                                                   ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 58
#"                                                         ("
0 0 14 3 8 #"move-los"
0 0 27 3 2 #" ("
0 0 14 3 11 #"world-shots"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                      ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 69
(47
 #"                                                                    "
 #"("
) 0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 59
#"                                                          ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                      ("
0 0 14 3 12 #"remove-shots"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-los"
0 0 27 3 2 #" ("
0 0 14 3 11 #"world-shots"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 53 #"                                                    ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 3 #") ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 17 #"AFTER-TICK-WORLD2"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-rocket"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                      ("
0 0 14 3 17 #"remove-hit-aliens"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 68
#"                                                                   ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 58
#"                                                         ("
0 0 14 3 8 #"move-los"
0 0 27 3 2 #" ("
0 0 14 3 11 #"world-shots"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                      ("
0 0 14 3 18 #"new-dir-after-tick"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 69 47 0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 59
#"                                                          ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 39 #"                                      ("
0 0 14 3 12 #"remove-shots"
0 0 27 3 2 #" ("
0 0 14 3 8 #"move-los"
0 0 27 3 2 #" ("
0 0 14 3 11 #"world-shots"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 53 #"                                                    ("
0 0 14 3 8 #"move-loa"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 3 #") ("
0 0 14 3 9 #"world-dir"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"   "
0 0 27 3 1 #" "
0 0 27 29 1 #"\n"
0 0 18 3 51 #";; Tests using sample computations for process-tick"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"process-tick"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 3 #")  "
0 0 14 3 17 #"AFTER-TICK-WORLD1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"process-tick"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 2 #") "
0 0 14 3 17 #"AFTER-TICK-WORLD2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 45 #";; Tests using sample values for process-tick"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"process-tick"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ROCKET"
0 0 27 29 1 #"\n"
0 0 27 3 41 #"                                        ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"1"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 3 #"())"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                        "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                        "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ROCKET"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 3 #"())"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"process-tick"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 27 29 1 #"\n"
0 0 27 3 41 #"                                        ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 2 #" ("
0 0 14 3 1 #"-"
0 0 27 3 1 #" "
0 0 14 3 20 #"MAX-CHARS-HORIZONTAL"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 57 #"                                                         "
0 0 23 3 2 #"10"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 46 #"                                              "
0 0 23 3 1 #"'"
0 0 27 3 3 #"())"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                        "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 29 1 #"\n"
0 0 27 3 41 #"                                        ("
0 0 14 3 4 #"cons"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT2"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 5 #"())))"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 3 #"())"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"move-shot"
0 0 27 3 1 #" "
0 0 14 3 5 #"SHOT2"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 5 #"())))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"process-tick"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 27 29 1 #"\n"
0 0 27 3 41 #"                                        ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 3 #"())"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                        "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 29 1 #"\n"
0 0 27 3 41 #"                                        ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"15"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 5 #"())))"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 3 #"())"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"15"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 5 #"())))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 12 #"process-tick"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 27 29 1 #"\n"
0 0 27 3 41 #"                                        ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 3 #"())"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                        "
0 0 23 3 1 #"'"
0 0 14 3 4 #"down"
0 0 27 29 1 #"\n"
0 0 27 3 41 #"                                        ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-Y"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 5 #"())))"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 14 3 12 #"INIT-ROCKET2"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 14 3 9 #"MIN-IMG-X"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 2 #") "
0 0 23 3 1 #"'"
0 0 27 3 3 #"())"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 29 1 #"\n"
0 0 27 3 26 #"                          "
0 0 23 3 1 #"'"
0 0 27 3 4 #"()))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 12 #";; GAME OVER"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 20 #";; alien --> Boolean"
0 0 27 29 1 #"\n"
0 0 18 3 54 #";; Purpose: Determine if the given alien reached earth"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 8 #"an-alien"
0 0 27 3 2 #") "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 46 #";; Sample expressions for alien-reached-earth?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"ALIEN-EARTH1"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 3 #")  "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"ALIEN-EARTH2"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 27 3 2 #") "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 59
#";; Tests using sample computations for alien-reached-earth?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-ALIEN"
0 0 27 3 3 #")  "
0 0 14 3 12 #"ALIEN-EARTH1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-ALIEN2"
0 0 27 3 2 #") "
0 0 14 3 12 #"ALIEN-EARTH2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 53 #";; Tests using sample values for alien-reached-earth?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"14"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 10 #"))        "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 3 #")) "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"     "
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 26 #";; loa Boolean --> Boolean"
0 0 27 29 1 #"\n"
0 0 18 3 63
#";; Purpose: Determine if there is a posn alien in the given loa"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 17 #"any-aliens-alive?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 3 #") ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 18 3 43 #";; Sample expressions for any-aliens-alive?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"NOT-ALIVE-VAL"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"ALIVE-VAL"
0 0 27 3 6 #"     ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 52 #";; Tests using sample computations any-aliens-alive?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"any-aliens-alive?"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 5 #")    "
0 0 14 3 13 #"NOT-ALIVE-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"any-aliens-alive?"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #") "
0 0 14 3 9 #"ALIVE-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 50 #";; Tests using sample values for any-aliens-alive?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"any-aliens-alive?"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 4 #"()) "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 17 #"any-aliens-alive?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"9"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"6"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 18 #";; loa --> Boolean"
0 0 27 29 1 #"\n"
0 0 18 3 52 #";; Purpose: Determine if any alien has reached earth"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-reached-earth?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 8 #"       ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"           ("
0 0 14 3 24 #"any-alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"a-loa"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 4 #"    "
0 0 27 29 1 #"\n"
0 0 18 3 50 #";; Sample expressions for any-alien-reached-earth?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 16 #"ANY-REACHED-VAL1"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 35 #"                                  ("
0 0 14 3 24 #"any-alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 16 #"ANY-REACHED-VAL2"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 35 #"                                  ("
0 0 14 3 24 #"any-alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 16 #"ANY-REACHED-VAL3"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 27 3 1 #" "
0 0 14 3 17 #"EARTH-REACHED-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 20 #"alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 17 #"EARTH-REACHED-LOA"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 35 #"                                  ("
0 0 14 3 24 #"any-alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 27 3 1 #" "
0 0 14 3 17 #"EARTH-REACHED-LOA"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 63
#";; Tests using sample computations for any-alien-reached-earth?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-reached-earth?"
0 0 27 3 1 #" "
0 0 14 3 5 #"E-LOA"
0 0 27 3 14 #")             "
0 0 14 3 16 #"ANY-REACHED-VAL1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-reached-earth?"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOA"
0 0 27 3 11 #")          "
0 0 14 3 16 #"ANY-REACHED-VAL2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-reached-earth?"
0 0 27 3 1 #" "
0 0 14 3 17 #"EARTH-REACHED-LOA"
0 0 27 3 2 #") "
0 0 14 3 16 #"ANY-REACHED-VAL3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 57 #";; Tests using sample values for any-alien-reached-earth?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 47 #"                                              ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 47 #"                                              ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 2 #"12"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 47 #"                                              ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 47 #"                                              ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"       "
0 0 27 29 1 #"\n"
0 0 18 3 20 #";; world --> Boolean"
0 0 27 29 1 #"\n"
0 0 18 3 38 #";; Purpose: Detect if the game is over"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 7 #"      ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 17 #"any-aliens-alive?"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 36 #";; Sample expressions for game-over?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"GAME-OVER1"
0 0 27 3 2 #" ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 24 #"                       ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 17 #"any-aliens-alive?"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 2 #"  "
0 0 27 3 1 #" "
0 0 27 3 1 #" "
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"GAME-OVER2"
0 0 27 3 2 #" ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 6 #"WORLD3"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 24 #"                       ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 17 #"any-aliens-alive?"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 6 #"WORLD3"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"   "
0 0 27 3 1 #" "
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 13 #"GAME-NOT-OVER"
0 0 27 3 2 #" ("
0 0 14 3 2 #"or"
0 0 27 3 2 #" ("
0 0 14 3 24 #"any-alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 27 #"                          ("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 17 #"any-aliens-alive?"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"   "
0 0 27 3 1 #" "
0 0 27 29 1 #"\n"
0 0 18 3 49 #";; Tests using sample computations for game-over?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 27 3 1 #" "
0 0 14 3 11 #"INIT-WORLD2"
0 0 27 3 2 #") "
0 0 14 3 10 #"GAME-OVER1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 27 3 1 #" "
0 0 14 3 6 #"WORLD3"
0 0 27 3 7 #")      "
0 0 14 3 10 #"GAME-OVER2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 3 3 #")  "
0 0 14 3 13 #"GAME-NOT-OVER"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 43 #";; Tests using sample values for game-over?"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #")) "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #" "
0 0 14 3 7 #"NO-SHOT"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 3 #")) "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"12"
0 0 27 3 1 #" "
0 0 23 3 2 #"11"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 5 #"#true"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 3 #")) "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 23 3 1 #"5"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 23 3 6 #"#false"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 13 #";; last scene"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 31 #";; world --> scene throws error"
0 0 27 29 1 #"\n"
0 0 18 3 42 #";; Purpose: To draw the game's final scene"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 15 #"draw-last-world"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 27 3 3 #" [("
0 0 14 3 24 #"any-alien-reached-earth?"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"         ("
0 0 14 3 11 #"place-image"
0 0 27 3 2 #" ("
0 0 14 3 4 #"text"
0 0 27 3 1 #" "
0 0 20 3 22 #"\"EARTH WAS CONQUERED!\""
0 0 27 3 1 #" "
0 0 23 3 2 #"36"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"red"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-W"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-H"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 3 #"))]"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 27 3 2 #" ("
0 0 14 3 17 #"any-aliens-alive?"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 10 #"         ("
0 0 14 3 11 #"place-image"
0 0 27 3 2 #" ("
0 0 14 3 4 #"text"
0 0 27 3 1 #" "
0 0 20 3 18 #"\"EARTH WAS SAVED!\""
0 0 27 3 1 #" "
0 0 23 3 2 #"36"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"green"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-W"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-H"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 3 #"))]"
0 0 27 29 1 #"\n"
0 0 27 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 27 3 2 #" ("
0 0 14 3 5 #"error"
0 0 27 3 2 #" ("
0 0 14 3 6 #"format"
0 0 27 3 1 #" "
0 0 20 3 73
(48
 #"\"draw-last-world: Given world has ~s aliens and none have reached e"
 #"arth.\""
) 0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 6 #"length"
0 0 27 3 2 #" ("
0 0 14 3 12 #"world-aliens"
0 0 27 3 1 #" "
0 0 14 3 7 #"a-world"
0 0 27 3 7 #"))))]))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 35 #";; Sample Instance of (final) world"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"FWORLD1"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 2 #"13"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 2 #"  "
0 0 23 3 1 #"0"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 3 #")) "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 1 #" "
0 0 14 3 8 #"INIT-LOS"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"FWORLD2"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 2 #"  "
0 0 23 3 1 #"7"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"19"
0 0 27 3 1 #" "
0 0 14 3 9 #"MAX-IMG-Y"
0 0 27 3 3 #")) "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"FWORLD3"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 2 #"  "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 27 3 3 #"() "
0 0 23 3 1 #"'"
0 0 14 3 4 #"left"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 2 #"19"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 41 #";; Sample expressions for draw-last-world"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"FWORLD1-VAL"
0 0 27 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 27 3 1 #" "
0 0 20 3 22 #"\"EARTH WAS CONQUERED!\""
0 0 27 3 1 #" "
0 0 23 3 2 #"36"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"red"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-W"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-H"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 7 #"FWORLD1"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"FWORLD2-VAL"
0 0 27 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 27 3 1 #" "
0 0 20 3 22 #"\"EARTH WAS CONQUERED!\""
0 0 27 3 1 #" "
0 0 23 3 2 #"36"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 3 #"red"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-W"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-H"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 7 #"FWORLD2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"FWORLD3-VAL"
0 0 27 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 4 #"text"
0 0 27 3 1 #" "
0 0 20 3 18 #"\"EARTH WAS SAVED!\""
0 0 27 3 1 #" "
0 0 23 3 2 #"36"
0 0 27 3 1 #" "
0 0 23 3 1 #"'"
0 0 14 3 5 #"green"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-W"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 14 3 9 #"E-SCENE-H"
0 0 27 3 1 #" "
0 0 23 3 1 #"4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #" "
0 0 14 3 7 #"FWORLD3"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 54 #";; Tests using sample computations for draw-last-world"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"draw-last-world"
0 0 27 3 1 #" "
0 0 14 3 7 #"FWORLD1"
0 0 27 3 2 #") "
0 0 14 3 11 #"FWORLD1-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"draw-last-world"
0 0 27 3 1 #" "
0 0 14 3 7 #"FWORLD2"
0 0 27 3 2 #") "
0 0 14 3 11 #"FWORLD2-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 27 3 2 #" ("
0 0 14 3 15 #"draw-last-world"
0 0 27 3 1 #" "
0 0 14 3 7 #"FWORLD3"
0 0 27 3 2 #") "
0 0 14 3 11 #"FWORLD3-VAL"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 18 3 48 #";; Tests using sample values for draw-last-world"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 27 3 2 #" ("
0 0 14 3 15 #"draw-last-world"
0 0 27 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 27 3 1 #" "
0 0 23 3 2 #"10"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"7"
0 0 27 3 1 #" "
0 0 23 3 1 #"8"
0 0 27 3 3 #")) "
0 0 23 3 1 #"'"
0 0 14 3 5 #"right"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 27 3 1 #" "
0 0 23 3 1 #"2"
0 0 27 3 1 #" "
0 0 23 3 1 #"3"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 72
(49
 #"\"draw-last-world: Given world has 2 aliens and none have reached ea"
 #"rth.\""
) 0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 2 #"  "
0 0 27 29 1 #"\n"
0 0 18 3 18 #"; string --> world"
0 0 27 29 1 #"\n"
0 0 18 3 26 #"; Purpose: To run the game"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 6 #"define"
0 0 27 3 2 #" ("
0 0 14 3 3 #"run"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-name"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 3 #"  ("
0 0 16 3 8 #"big-bang"
0 0 27 3 1 #" "
0 0 14 3 10 #"INIT-WORLD"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"    ["
0 0 14 3 7 #"on-draw"
0 0 27 3 1 #" "
0 0 14 3 10 #"draw-world"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"    ["
0 0 14 3 4 #"name"
0 0 27 3 1 #" "
0 0 14 3 6 #"a-name"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"    ["
0 0 14 3 6 #"on-key"
0 0 27 3 1 #" "
0 0 14 3 11 #"process-key"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"    ["
0 0 14 3 7 #"on-tick"
0 0 27 3 1 #" "
0 0 14 3 12 #"process-tick"
0 0 27 3 1 #" "
0 0 14 3 9 #"TICK-RATE"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"    ["
0 0 14 3 9 #"stop-when"
0 0 27 3 1 #" "
0 0 14 3 10 #"game-over?"
0 0 27 3 1 #" "
0 0 14 3 15 #"draw-last-world"
0 0 27 3 3 #"]))"
0 0 27 29 1 #"\n"
0           0
